import type { ContractObject } from "@truffle/contract-schema/spec";
import type { ResolverSource } from "../source";
export declare class ABI implements ResolverSource {
    wrappedSource: ResolverSource;
    constructor(wrappedSource: ResolverSource);
    require(): ContractObject | null;
    /**
     * @dev This attempts to resolve an ABI JSON file as Solidity using the
     *      abi-to-sol utility.
     *
     *      Note the **precondition** that `compiler`, if passed, will always
     *      refer to a version of solc, since this ResolverSource is explicitly
     *      disabled for Vyper.
     */
    resolve(importPath: string, importedFrom?: string, options?: {
        compiler?: {
            name: string;
            version: string;
        };
    }): Promise<{
        filePath: string;
        body: string;
    }>;
    resolveDependencyPath(importPath: string, dependencyPath: string): Promise<string>;
}
