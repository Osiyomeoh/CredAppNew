export declare class CompilerSupplier {
    private version;
    private docker;
    private strategyOptions;
    constructor({ events, solcConfig }: {
        events: any;
        solcConfig: any;
    });
    load(): Promise<{
        solc: any;
    }>;
    /**
     * This function lists known solc versions, possibly asynchronously to
     * account for APIs with paginated data (namely, Docker Hub)
     *
     * @return Promise<{
     *           prereleases: AsyncIterable<string>;
     *           releases: AsyncIterable<string>;
     *           latestRelease: string;
     *         }>
     */
    list(): Promise<any>;
    static getDefaultVersion(): string;
}
export declare class BadInputError extends Error {
    constructor(input: string);
}
export declare class StrategyCannotListVersionsError extends Error {
    constructor(strategyName: string);
}
