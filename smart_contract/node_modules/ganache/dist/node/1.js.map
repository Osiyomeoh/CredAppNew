{"version":3,"file":"1.js","mappings":"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,WAAY3G,EAAIF,EAAQE,IAAK,CACzD,MAAMjC,EAAQ2I,EAAO1G,GAErB,GAAc,IAAVjC,EACA,OAAIiC,EAAI,IAAMF,EAEH46D,EAAQ38D,GAGR2W,EAAUhO,EAAQ1G,EAAGF,EAGxC,CACA,MAAO,EACX,EAEA,MAAM46D,EAAU,CACZ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,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","sources":["webpack://Ganache/../utils/lib/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/index.js","webpack://Ganache/../../chains/ethereum/address/lib/index.js","webpack://Ganache/../rlp/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/index.js","webpack://Ganache/../options/lib/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/helpers.js","webpack://Ganache/./webpack/polyfills/debug.ts","webpack://Ganache/../flavors/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/index.js","webpack://Ganache/../colors/lib/index.js","webpack://Ganache/../utils/lib/src/utils/constants.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/runtime-transaction.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/manager.js","webpack://Ganache/../secp256k1/lib/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/helpers.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/signing.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/tree.js","webpack://Ganache/../core/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/base-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/wallet.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/handlers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/miner.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/block-manager.js","webpack://Ganache/../../chains/ethereum/options/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-receipt.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/trie-db.js","webpack://Ganache/../utils/lib/src/utils/uint-to-buffer.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-base-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/coded-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/errors.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/base-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/params.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/lexicographic-key-codec.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/index.js","webpack://Ganache/../utils/lib/src/utils/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/blockchain.js","webpack://Ganache/../../chains/ethereum/options/lib/src/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/http-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/persistent-cache.js","webpack://Ganache/../core/lib/src/server.js","webpack://Ganache/../utils/lib/src/types/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/transaction-pool.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/connector.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/database.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/blocklog-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-manager.js","webpack://Ganache/../promise-queue/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-receipt-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/fork.js","webpack://Ganache/../core/lib/src/servers/http-server.js","webpack://Ganache/../../chains/ethereum/options/lib/src/fork-options.js","webpack://Ganache/../core/lib/src/servers/ws-server.js","webpack://Ganache/../utils/lib/src/utils/executor.js","webpack://Ganache/../utils/lib/src/utils/request-coordinator.js","webpack://Ganache/../utils/lib/src/things/promievent.js","webpack://Ganache/../options/lib/src/create.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/account-manager.js","webpack://Ganache/../../chains/ethereum/options/lib/src/wallet-options.js","webpack://Ganache/../utils/lib/src/utils/keccak.js","webpack://Ganache/../utils/lib/src/utils/random-number-generator.js","webpack://Ganache/../utils/lib/src/utils/signature.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/tags.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/hdkey.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/gas-estimator.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/rate-limiter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/ws-handler.js","webpack://Ganache/../../chains/filecoin/options/lib/src/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/wallet-options.js","webpack://Ganache/../utils/lib/src/utils/bigint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-bigint.js","webpack://Ganache/../utils/lib/src/utils/has-own.js","webpack://Ganache/../utils/lib/src/things/jsonrpc.js","webpack://Ganache/../core/lib/src/connector-loader.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/runtime-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/filters.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip2930-access-list-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/access-lists.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip1559-fee-market-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/legacy-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-factory.js","webpack://Ganache/../../chains/ethereum/block/lib/src/runtime-block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/serialize.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/filter-parsing.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider-events.js","webpack://Ganache/../../chains/ethereum/console.log/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/deferred.js","webpack://Ganache/../core/lib/src/options/index.js","webpack://Ganache/../core/lib/src/servers/utils/fragment-generator.js","webpack://Ganache/../../chains/ethereum/options/lib/src/chain-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/database-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/logging-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/miner-options.js","webpack://Ganache/../utils/lib/src/types/connector.js","webpack://Ganache/../utils/lib/src/types/provider.js","webpack://Ganache/../utils/lib/src/types/api.js","webpack://Ganache/../utils/lib/src/common.js","webpack://Ganache/../utils/lib/src/utils/heap.js","webpack://Ganache/../utils/lib/src/utils/unref.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-key.js","webpack://Ganache/../utils/lib/src/utils/find-insert-position.js","webpack://Ganache/../utils/lib/src/utils/min-max.js","webpack://Ganache/../utils/lib/src/things/json-rpc/index.js","webpack://Ganache/../utils/lib/src/things/json-rpc/input-parsers.js","webpack://Ganache/../utils/lib/src/things/subscription.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-quantity.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-data.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/call-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/abort-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/account.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/blocklogs.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-data.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-storage-map.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/debug-storage.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/extract-values-from-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/hex-datatypes.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/shh.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/subscriptions.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/trace-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/tuple-from-union.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/account-proof.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/fee-history.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/hardfork.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/raw.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/rpc-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-types.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/vm-transaction.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block-params.js","webpack://Ganache/../../chains/ethereum/block/lib/src/snapshots.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/assert-arg-length.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/replace-from-heap.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/maybe-get-logs.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/signatures.js","webpack://Ganache/../options/lib/src/base.js","webpack://Ganache/../options/lib/src/exclusive.js","webpack://Ganache/../options/lib/src/definition.js","webpack://Ganache/../options/lib/src/constants.js","webpack://Ganache/../promise-queue/lib/src/entry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/run-call.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/precompiles.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/limit-counter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/provider-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/ancestry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/bufferify.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api-types.js","webpack://Ganache/../../chains/filecoin/options/lib/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/chain-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/database-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/logging-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/miner-options.js","webpack://Ganache/../colors/lib/src/index.js","webpack://Ganache/../flavors/lib|sync","webpack://Ganache/../core/lib/src/options/server-options.js","webpack://Ganache//home/runner/work/ganache/ganache/src/packages/core/node_modules/@trufflesuite/uws-js-unofficial/binaries|sync|/^\\.\\/uws_.*\\.node$/","webpack://Ganache/../core/lib/src/servers/utils/websocket-close-codes.js","webpack://Ganache/../core/lib/src/servers/utils/content-types.js","webpack://Ganache/../core/lib/src/servers/utils/http-response-codes.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiEvent = exports.JsonRpcErrorCode = exports.makeResponse = exports.makeRequest = exports.makeError = exports.JsonRpcType = void 0;\n__exportStar(require(\"./src/types\"), exports);\n__exportStar(require(\"./src/utils\"), exports);\nvar json_rpc_1 = require(\"./src/things/json-rpc\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_1.JsonRpcType; } });\n__exportStar(require(\"./src/things/subscription\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-quantity\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-data\"), exports);\nvar jsonrpc_1 = require(\"./src/things/jsonrpc\");\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return jsonrpc_1.makeError; } });\nObject.defineProperty(exports, \"makeRequest\", { enumerable: true, get: function () { return jsonrpc_1.makeRequest; } });\nObject.defineProperty(exports, \"makeResponse\", { enumerable: true, get: function () { return jsonrpc_1.makeResponse; } });\nObject.defineProperty(exports, \"JsonRpcErrorCode\", { enumerable: true, get: function () { return jsonrpc_1.JsonRpcErrorCode; } });\nvar promievent_1 = require(\"./src/things/promievent\");\nObject.defineProperty(exports, \"PromiEvent\", { enumerable: true, get: function () { return __importDefault(promievent_1).default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-utils\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nclass Address extends util_1.Address {\n    constructor(value) {\n        super(value);\n    }\n    static from(value) {\n        return new Address(utils_1.Data.toBuffer(value, Address.ByteLength));\n    }\n    static toBuffer(value) {\n        return Address.from(value).toBuffer();\n    }\n    static toString(value) {\n        return Address.from(value).toString();\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Address = Address;\nAddress.ByteLength = 20;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encodeLength = exports.encode = exports.digest = exports.encodeRange = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Begin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\n * finish encoding.\n *\n **/\nfunction encodeRange(items, start, length) {\n    let count = 0;\n    const end = start + length;\n    const output = [];\n    for (var i = start; i < end; i++) {\n        const item = items[i];\n        const encoded = encode(item);\n        count += encoded.length;\n        output.push(encoded);\n    }\n    return { length: count, output };\n}\nexports.encodeRange = encodeRange;\n/**\n * Finishes encoding started by `encodeRange`.\n *\n * @param ranges -\n * @returns returns a Buffer of encoded data\n */\nfunction digest(ranges, length) {\n    const encodedLength = encodeLength(length, 192);\n    const lengthEncodedLength = encodedLength.length;\n    const buf = Buffer.allocUnsafe(lengthEncodedLength + length);\n    encodedLength.copy(buf, 0, 0, lengthEncodedLength);\n    let offset = lengthEncodedLength;\n    for (let i = 0, l = ranges.length; i < l; i++) {\n        const range = ranges[i];\n        for (let j = 0, m = range.length; j < m; j++) {\n            const entry = range[j];\n            const size = entry.length;\n            entry.copy(buf, offset, 0, size);\n            offset += size;\n        }\n    }\n    return buf;\n}\nexports.digest = digest;\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * @param input -\n * @returns returns a Buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        let length = 0;\n        const output = [];\n        for (let i = 0, l = input.length; i < l; i++) {\n            const enc = encode(input[i]);\n            length += enc.length;\n            output.push(enc);\n        }\n        const buf = Buffer.concat(output, length);\n        const encodedLength = encodeLength(length, 192);\n        return Buffer.concat([encodedLength, buf], encodedLength.length + length);\n    }\n    else {\n        if (input == null) {\n            const buf = Buffer.allocUnsafe(1);\n            buf[0] = 128;\n            return buf;\n        }\n        else {\n            const length = input.length;\n            if (length === 1 && input[0] < 128) {\n                return input;\n            }\n            else {\n                const encLength = encodeLength(length, 128);\n                return Buffer.concat([encLength, input], encLength.length + length);\n            }\n        }\n    }\n}\nexports.encode = encode;\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        const buf = Buffer.allocUnsafe(1);\n        buf[0] = len + offset;\n        return buf;\n    }\n    else {\n        const hexLength = (0, utils_1.uintToBuffer)(len);\n        const lLength = hexLength.length;\n        const firstByte = (0, utils_1.uintToBuffer)(offset + 55 + lLength);\n        return Buffer.concat([firstByte, hexLength], firstByte.length + lLength);\n    }\n}\nexports.encodeLength = encodeLength;\n/**\n * Slices a Buffer, throws if the slice goes out-of-bounds of the Buffer.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error(\"invalid RLP (safeSlice): end slice of Buffer out-of-bounds\");\n    }\n    return input.slice(start, end);\n}\n/**\n * RLP Decoding based on https://eth.wiki/en/fundamentals/rlp\n * @param input Will be converted to Buffer\n * @returns decoded Array of Buffers containing the original message\n **/\nfunction decode(input) {\n    if (!input || input.length === 0) {\n        return utils_1.BUFFER_EMPTY;\n    }\n    const decoded = _decode(input);\n    if (decoded.remainder.length !== 0) {\n        throw new Error(\"invalid RLP: remainder must be zero\");\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error(\"invalid RLP: extra zeros\");\n    }\n    return parseHexByte(bytesToHex(v));\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1)\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error(\"invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed\");\n        }\n        return {\n            data,\n            remainder: input.slice(length)\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error(\"invalid RLP: not enough bytes for string length\");\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error(\"invalid RLP: expected string length to be greater than 55\");\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength)\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length)\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error(\"invalid RLP: encoded list too short\");\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error(\"invalid RLP: total length is larger than the data\");\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength)\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, \"0\"));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = \"\";\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error(\"Invalid byte sequence\");\n    return byte;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-transaction\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/eip2930-access-list-transaction\"), exports);\n__exportStar(require(\"./src/eip1559-fee-market-transaction\"), exports);\n__exportStar(require(\"./src/base-transaction\"), exports);\n__exportStar(require(\"./src/hardfork\"), exports);\n__exportStar(require(\"./src/legacy-transaction\"), exports);\n__exportStar(require(\"./src/params\"), exports);\n__exportStar(require(\"./src/raw\"), exports);\n__exportStar(require(\"./src/rpc-transaction\"), exports);\n__exportStar(require(\"./src/runtime-transaction\"), exports);\n__exportStar(require(\"./src/transaction-receipt\"), exports);\n__exportStar(require(\"./src/transaction-factory\"), exports);\n__exportStar(require(\"./src/transaction-types\"), exports);\n__exportStar(require(\"./src/vm-transaction\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/base\"), exports);\n__exportStar(require(\"./src/exclusive\"), exports);\n__exportStar(require(\"./src/definition\"), exports);\n__exportStar(require(\"./src/create\"), exports);\n__exportStar(require(\"./src/constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","export const debug = () => () => {};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetConnector = exports.DefaultOptionsByName = exports.DefaultFlavor = exports.FilecoinFlavorName = exports.EthereumFlavorName = void 0;\nconst ethereum_1 = require(\"@ganache/ethereum\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst filecoin_options_1 = require(\"@ganache/filecoin-options\");\nconst colors_1 = require(\"@ganache/colors\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\n// we need \"@ganache/options\" in order for TS to properly infer types for `DefaultOptionsByName`\nrequire(\"@ganache/options\");\nconst NEED_HELP = \"Need help? Reach out to the Truffle community at\";\nconst COMMUNITY_LINK = \"https://trfl.io/support\";\nexports.EthereumFlavorName = \"ethereum\";\nexports.FilecoinFlavorName = \"filecoin\";\nexports.DefaultFlavor = exports.EthereumFlavorName;\nexports.DefaultOptionsByName = {\n    [exports.EthereumFlavorName]: ethereum_options_1.EthereumDefaults,\n    [exports.FilecoinFlavorName]: filecoin_options_1.FilecoinDefaults\n};\nfunction GetConnector(flavor, providerOptions, executor) {\n    if (flavor === exports.DefaultFlavor) {\n        return new ethereum_1.Connector(providerOptions, executor);\n    }\n    try {\n        switch (flavor) {\n            case exports.FilecoinFlavorName: {\n                flavor = \"@ganache/filecoin\";\n                // TODO: remove the `typeof f.default != \"undefined\" ? ` check once the\n                // published filecoin plugin is updated to\n                const f = eval(\"require\")(flavor);\n                const Connector = typeof f.default != \"undefined\" ? f.default.Connector : f.Connector;\n                // @ts-ignore\n                return new Connector(providerOptions, executor);\n            }\n            default: {\n                // for future plugin compat\n                const { Connector } = require(flavor);\n                return new Connector(providerOptions, executor);\n            }\n        }\n    }\n    catch (e) {\n        if (e.message.includes(`Cannot find module '${flavor}'`)) {\n            // we print and exit rather than throw to prevent webpack output from being\n            // spat out for the line number\n            console.warn((0, chalk_1.default) `\\n\\n{red.bold ERROR:} Could not find Ganache flavor \"{bold filecoin}\" (${flavor}); ` +\n                `it probably\\nneeds to be installed.\\n` +\n                ` ▸ if you're using Ganache as a library run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\\n` +\n                ` ▸ if you're using Ganache as a CLI run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\\n\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\").bold ${NEED_HELP}}\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.turquoise}\") ${COMMUNITY_LINK}}\\n\\n`);\n            process.exit(1);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.GetConnector = GetConnector;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/block\"), exports);\n__exportStar(require(\"./src/runtime-block\"), exports);\n__exportStar(require(\"./src/snapshots\"), exports);\n__exportStar(require(\"./src/serialize\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/colors\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KNOWN_CHAINIDS = exports.WEI = exports.BUFFER_8_ZERO = exports.BUFFER_32_ZERO = exports.BUFFER_ZERO = exports.BUFFER_EMPTY = exports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO = void 0;\nexports.BUFFER_256_ZERO = Buffer.allocUnsafe(256).fill(0);\nexports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO.slice(0, 20);\nexports.BUFFER_EMPTY = Buffer.allocUnsafe(0);\nexports.BUFFER_ZERO = exports.BUFFER_256_ZERO.slice(0, 1);\nexports.BUFFER_32_ZERO = exports.BUFFER_256_ZERO.slice(0, 32);\nexports.BUFFER_8_ZERO = exports.BUFFER_256_ZERO.slice(0, 8);\nexports.WEI = 1000000000000000000n;\nexports.KNOWN_CHAINIDS = new Set([1, 3, 4, 5, 42, 11155111]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeTransaction = exports.hasPartialSignature = exports.toValidLengthAddress = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst base_transaction_1 = require(\"./base-transaction\");\nconst transaction_receipt_1 = require(\"./transaction-receipt\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst toValidLengthAddress = (address, fieldName) => {\n    const buffer = utils_1.Data.toBuffer(address);\n    if (buffer.byteLength !== ethereum_address_1.Address.ByteLength) {\n        throw new Error(`The field ${fieldName} must have byte length of ${ethereum_address_1.Address.ByteLength}`);\n    }\n    return ethereum_address_1.Address.from(buffer);\n};\nexports.toValidLengthAddress = toValidLengthAddress;\nconst hasPartialSignature = (data) => {\n    return data[\"v\"] != null || data[\"r\"] != null || data[\"s\"] != null;\n};\nexports.hasPartialSignature = hasPartialSignature;\nconst ONE_BUFFER = utils_1.Quantity.One.toBuffer();\n/**\n * A RuntimeTransaction can be changed; its hash is not finalized and it is not\n * yet part of a block.\n */\nclass RuntimeTransaction extends base_transaction_1.BaseTransaction {\n    constructor(data, common, extra) {\n        super(common, extra);\n        /**\n         * used by the miner to mark if this transaction is eligible for reordering or\n         * removal\n         */\n        this.locked = false;\n        this.validateAndSetSignature = (data) => {\n            // If we have v, r, or s validate and use them\n            if ((0, exports.hasPartialSignature)(data)) {\n                if (data.v == null || data.r == null || data.s == null) {\n                    throw new Error(\"Transaction signature is incomplete; v, r, and s are required.\");\n                }\n                // if we have a signature the `nonce` field is required\n                if (data.nonce == null) {\n                    throw new Error(\"Signed transaction is incomplete; nonce is required.\");\n                }\n                this.v = utils_1.Quantity.from(data.v, true);\n                this.r = utils_1.Quantity.from(data.r, true);\n                this.s = utils_1.Quantity.from(data.s, true);\n                // compute the `hash` and the `from` address\n                const raw = this.toEthRawTransaction(this.v.toBuffer(), this.r.toBuffer(), this.s.toBuffer());\n                this.raw = raw;\n                if (!this.from) {\n                    const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, raw, this.common.chainId());\n                    // if the user specified a `from` address in addition to the  `v`, `r`,\n                    //  and `s` values, make sure the `from` address matches\n                    if (data.from !== null) {\n                        const userFrom = (0, exports.toValidLengthAddress)(data.from, \"from\");\n                        if (!from.toBuffer().equals(userFrom.toBuffer())) {\n                            throw new Error(\"Transaction is signed and contains a `from` field, but the signature doesn't match.\");\n                        }\n                    }\n                    this.from = from;\n                    this.serialized = serialized;\n                    this.hash = hash;\n                    this.encodedData = encodedData;\n                    this.encodedSignature = encodedSignature;\n                }\n            }\n            else if (data.from != null) {\n                // we don't have a signature yet, so we just need to record the `from`\n                // address for now. The TransactionPool will fill in the `hash` and\n                // `raw` fields during signing\n                this.from = (0, exports.toValidLengthAddress)(data.from, \"from\");\n            }\n        };\n        let finalizer;\n        this.finalized = new Promise(resolve => {\n            finalizer = (...args) => process.nextTick(resolve, ...args);\n        });\n        this.finalizer = finalizer;\n        if (!Array.isArray(data)) {\n            // handle JSON\n            this.nonce = utils_1.Quantity.from(data.nonce, true);\n            this.gas = utils_1.Quantity.from(data.gas == null ? data.gasLimit : data.gas);\n            this.to = data.to == null ? null : (0, exports.toValidLengthAddress)(data.to, \"to\");\n            this.value = utils_1.Quantity.from(data.value || 0);\n            const dataVal = data.data == null\n                ? data.input == null\n                    ? \"0x\"\n                    : data.input\n                : data.data;\n            this.data = utils_1.Data.from(dataVal);\n        }\n    }\n    serializeForDb(blockHash, blockNumber, transactionIndex) {\n        // todo(perf):make this work with encodeRange and digest\n        const txAndExtraData = [\n            this.raw,\n            [\n                this.from.toBuffer(),\n                this.hash.toBuffer(),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                transactionIndex.toBuffer(),\n                this.effectiveGasPrice.toBuffer()\n            ]\n        ];\n        return (0, rlp_1.encode)(txAndExtraData);\n    }\n    /**\n     * Initializes the receipt and logs\n     * @param result -\n     * @returns RLP encoded data for use in a transaction trie\n     */\n    fillFromResult(result, cumulativeGasUsed) {\n        const vmResult = result.execResult;\n        const execException = vmResult.exceptionError;\n        let status;\n        if (execException) {\n            status = utils_1.BUFFER_ZERO;\n            this.execException = new ethereum_utils_1.RuntimeError(this.hash, result, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n        }\n        else {\n            status = ONE_BUFFER;\n        }\n        const receipt = (this.receipt = transaction_receipt_1.InternalTransactionReceipt.fromValues(status, utils_1.Quantity.toBuffer(cumulativeGasUsed), result.bloom.bitvector, (this.logs = vmResult.logs || []), utils_1.Quantity.toBuffer(result.totalGasSpent), result.createdAddress ? result.createdAddress.buf : null, this.type));\n        return receipt.serialize(false);\n    }\n    getReceipt() {\n        return this.receipt;\n    }\n    getLogs() {\n        return this.logs;\n    }\n    /**\n     * Returns a Promise that is resolved with the confirmation status and, if\n     * appropriate, an error property.\n     *\n     * Note: it is possible to be confirmed AND have an error\n     *\n     * @param event - \"finalized\"\n     */\n    once(_event) {\n        return this.finalized;\n    }\n    /**\n     * Mark this transaction as finalized, notifying all past and future\n     * \"finalized\" event subscribers.\n     *\n     * Note:\n     *\n     * @param status -\n     * @param error -\n     */\n    finalize(status, error = null) {\n        // resolves the `#finalized` promise\n        this.finalizer({ status, error });\n    }\n}\nexports.RuntimeTransaction = RuntimeTransaction;\n//# sourceMappingURL=runtime-transaction.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Manager_Type, _Manager_options;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst NOTFOUND = 404;\nclass Manager {\n    constructor(base, type, options) {\n        _Manager_Type.set(this, void 0);\n        _Manager_options.set(this, void 0);\n        __classPrivateFieldSet(this, _Manager_Type, type, \"f\");\n        __classPrivateFieldSet(this, _Manager_options, options, \"f\");\n        this.base = base;\n    }\n    getRaw(key) {\n        if (typeof key === \"string\") {\n            key = utils_1.Data.toBuffer(key);\n        }\n        if (key.length === 0) {\n            key = utils_1.BUFFER_ZERO;\n        }\n        return this.base.get(key).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async get(key) {\n        const raw = await this.getRaw(key);\n        if (!raw)\n            return null;\n        return new (__classPrivateFieldGet(this, _Manager_Type, \"f\"))(raw, __classPrivateFieldGet(this, _Manager_options, \"f\"));\n    }\n    set(key, value) {\n        return this.base.put(key, value);\n    }\n    del(key) {\n        return this.base.del(key);\n    }\n}\nexports.default = Manager;\n_Manager_Type = new WeakMap(), _Manager_options = new WeakMap();\n//# sourceMappingURL=manager.js.map","\"use strict\";\n/*!\n * @ganache/secp256k1\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = exports.SECP256K1_N = void 0;\nconst path_1 = require(\"path\");\nexports.SECP256K1_N = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0n; // (SECP256K1_N - 1n) / 2n\nlet secp256k1;\ntry {\n    // TODO: find a better way :-)\n    // use `eval` to make `ganache`'s webpack ignore this\n    const nodeRequire = eval(\"require\");\n    const path = nodeRequire.resolve(\"secp256k1/package.json\");\n    const dir = (0, path_1.dirname)(path);\n    const nodeGypBuild = require(\"node-gyp-build\");\n    // load native secp256k1\n    const { Secp256k1 } = nodeGypBuild(dir);\n    secp256k1 = new Secp256k1();\n}\ncatch {\n    // on error use the JS fallback\n    secp256k1 = require(\"secp256k1/lib/elliptic\");\n}\nexports.default = secp256k1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeIntrinsicsFeeMarketTx = exports.computeIntrinsicsAccessListTx = exports.computeIntrinsicsLegacyTx = exports.computeFromAddress = exports.publicKeyConvert = exports.ecdsaRecover = exports.isValidSigRecovery = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\n/**\n * Copies `length` bytes from `source` to the `target`, filling remaining\n * bytes beyond `length - source.length` with `0`. Fills to the left.\n *\n * ```typescript\n * const source = Buffer.from([1, 2, 3]);\n * const target = Buffer.from([9, 9, 9, 9, 9, 9]);\n * copyOrFill(source, target, 1, 4);\n * // target.equals(Buffer.from([9, 0, 1, 2, 3, 9]));\n * //                               ^  ^  ^  ^\n * ```\n *\n * @param source - A Buffer to copy from.\n * @param target - A Buffer to copy into.\n * @param targetStart - The offset within `target` at which to begin writing.\n * @param length - The amount of bytes to copy or fill into the `target`.\n */\nfunction copyOrFill(source, target, targetStart, length) {\n    if (source.byteLength > length)\n        throw new Error(\"Invalid signature\");\n    // first, copy zeroes\n    const numZeroes = length - source.byteLength;\n    const endZeroes = targetStart + numZeroes;\n    let i = targetStart;\n    for (; i < endZeroes; i++) {\n        target[i] = 0;\n    }\n    // then copy the source into the target:\n    let end = targetStart + length;\n    const sourceOffset = targetStart + numZeroes;\n    for (; i < end; i++) {\n        target[i] = source[i - sourceOffset];\n    }\n}\nconst isValidSigRecovery = (recovery) => {\n    return recovery === 1 || recovery === 0;\n};\nexports.isValidSigRecovery = isValidSigRecovery;\n/**\n *\n * @param sharedBuffer - A Buffer, where bytes 0 - 97 are to be used by this function\n * @param r -\n * @param s -\n * @param msgHash -\n * @param recovery -\n */\nconst ecdsaRecover = (partialRlp, sharedBuffer, v, chainId, rBuf, sBuf) => {\n    let data;\n    let recid;\n    const eip155V = chainId * 2n + 35n;\n    const isEip155 = v === eip155V || v === eip155V + 1n;\n    if (isEip155) {\n        const chainBuf = (0, utils_1.bigIntToBuffer)(chainId);\n        const extras = [chainBuf, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY];\n        const epilogue = (0, rlp_1.encodeRange)(extras, 0, 3);\n        data = (0, rlp_1.digest)([partialRlp.output, epilogue.output], partialRlp.length + epilogue.length);\n        recid = Number(v - eip155V);\n    }\n    else {\n        data = (0, rlp_1.digest)([partialRlp.output], partialRlp.length);\n        recid = Number(v) - 27;\n    }\n    return _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid);\n};\nexports.ecdsaRecover = ecdsaRecover;\nfunction _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid) {\n    if (!(0, exports.isValidSigRecovery)(recid)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const message = (0, utils_1.keccak)(data);\n    const signature = sharedBuffer.slice(0, 64);\n    copyOrFill(rBuf, signature, 0, 32);\n    copyOrFill(sBuf, signature, 32, 32);\n    const output = sharedBuffer.slice(0, 33);\n    const success = secp256k1_1.default.ecdsaRecover(output, signature, recid, message);\n    if (success !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return output;\n}\n/**\n *\n * @param sharedBuffer - A Buffer, bytes 0 - 65 will be overwritten\n * @param senderPubKey -\n */\nconst publicKeyConvert = (sharedBuffer, senderPubKey) => {\n    const publicKey = sharedBuffer.slice(0, 65);\n    const result = secp256k1_1.default.publicKeyConvert(publicKey, senderPubKey);\n    if (result !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return publicKey;\n};\nexports.publicKeyConvert = publicKeyConvert;\n/**\n * A Buffer that can be reused by `computeFromAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst computeFromAddress = (partialRlp, v, rBuf, sBuf, chainId) => {\n    const senderPubKey = (0, exports.ecdsaRecover)(partialRlp, SHARED_BUFFER, v, chainId, rBuf, sBuf);\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    return ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n};\nexports.computeFromAddress = computeFromAddress;\nconst computeIntrinsicsLegacyTx = (v, raw, chainId) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 6);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n    const serialized = (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length);\n    return {\n        from: (0, exports.computeFromAddress)(encodedData, v.toBigInt(), raw[7], raw[8], chainId),\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsLegacyTx = computeIntrinsicsLegacyTx;\nconst computeIntrinsicsAccessListTx = (v, raw) => {\n    const typeBuf = raw[0];\n    const encodedData = (0, rlp_1.encodeRange)(raw, 1, 8);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n    const serialized = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length)\n    ]);\n    const data = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output], encodedData.length)\n    ]);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[10], raw[11], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsAccessListTx = computeIntrinsicsAccessListTx;\nconst computeIntrinsicsFeeMarketTx = (v, raw) => {\n    const typeBuf = raw[0];\n    const encodedData = (0, rlp_1.encodeRange)(raw, 1, 9);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 10, 3);\n    const serialized = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length)\n    ]);\n    const data = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output], encodedData.length)\n    ]);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[11], raw[12], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsFeeMarketTx = computeIntrinsicsFeeMarketTx;\n//# sourceMappingURL=signing.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp = __importStar(require(\"@ganache/rlp\"));\n/**\n * A tree: https://en.wikipedia.org/wiki/Rose_tree\n * One parent, multiple children\n */\nclass Tree {\n    constructor(height, hash, closestKnownAncestor = utils_1.BUFFER_EMPTY) {\n        this.closestKnownDescendants = [];\n        this.key = Tree.encodeKey(height, hash);\n        this.hash = hash.toBuffer();\n        this.closestKnownAncestor = closestKnownAncestor;\n    }\n    serialize() {\n        return rlp.encode([\n            this.hash,\n            this.closestKnownAncestor,\n            this.closestKnownDescendants\n        ]);\n    }\n    decodeKey() {\n        return Tree.decodeKey(this.key);\n    }\n    static decodeKey(key) {\n        const [height, hash] = lexico.decode(key);\n        return {\n            height: utils_1.Quantity.from(height),\n            hash: utils_1.Data.from(hash)\n        };\n    }\n    static deserialize(key, value) {\n        const [hash, parent, children] = rlp.decode(value);\n        const tree = Object.create(Tree.prototype);\n        tree.key = key;\n        tree.hash = hash;\n        tree.closestKnownAncestor = parent;\n        tree.closestKnownDescendants = children;\n        return tree;\n    }\n    static encodeKey(height, hash) {\n        return lexico.encode([height.toBuffer(), hash.toBuffer()]);\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__experimental_info = exports.provider = exports.server = exports._DefaultServerOptions = exports.ServerStatus = exports.Server = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst connector_loader_1 = __importDefault(require(\"./src/connector-loader\"));\nconst server_1 = __importDefault(require(\"./src/server\"));\nvar server_2 = require(\"./src/server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_2.Server; } });\nObject.defineProperty(exports, \"ServerStatus\", { enumerable: true, get: function () { return server_2.ServerStatus; } });\nObject.defineProperty(exports, \"_DefaultServerOptions\", { enumerable: true, get: function () { return server_2._DefaultServerOptions; } });\nconst version = process.env.VERSION || \"DEV\";\n/**\n * @public\n */\nconst Ganache = {\n    /**\n     * Creates a Ganache server instance that creates and\n     * serves an underlying Ganache provider. Initialization\n     * doesn't begin until `server.listen(...)` is called.\n     * `server.listen(...)` returns a promise that resolves\n     * when initialization is finished.\n     *\n     * @param options - Configuration options for the server;\n     * `options` includes provider based options as well.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    server: (options) => new server_1.default(options),\n    /**\n     * Initializes a Web3 provider for a Ganache instance.\n     * This function starts an asynchronous task, but does not\n     * finish it by the time the function returns. Listen to\n     * `provider.on(\"connect\", () => {...})` or wait for\n     * `await provider.once(\"connect\")` for initialization to\n     * finish. You may start sending requests to the provider\n     * before initialization finishes however; these requests\n     * will start being consumed after initialization finishes.\n     *\n     * @param options - Configuration options for the provider.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    provider: (options) => {\n        const loader = connector_loader_1.default.initialize(options);\n        return loader.connector.provider;\n    },\n    /**\n     *\n     * @experimental\n     */\n    __experimental_info() {\n        return {\n            version,\n            fork: {\n                knownChainIds: Array.from(utils_1.KNOWN_CHAINIDS)\n            }\n        };\n    }\n};\n/**\n * @public\n */\nexports.server = Ganache.server;\n/**\n * @public\n */\nexports.provider = Ganache.provider;\n/**\n * @experimental\n */\nexports.__experimental_info = Ganache.__experimental_info;\n/**\n * @public\n */\nexports.default = Ganache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseHandler = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rate_limiter_1 = __importDefault(require(\"../rate-limiter/rate-limiter\"));\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst INVALID_RESPONSE = \"Invalid response from fork provider: \";\nconst INVALID_AUTH_ERROR = \"Authentication via both username/password (Basic) and JWT (Bearer) is not possible\";\nconst WINDOW_SECONDS = 30;\nclass BaseHandler {\n    constructor(options, abortSignal) {\n        this.id = 1;\n        this.requestCache = new Map();\n        this.fireForget = new Set();\n        const forkingOptions = options.fork;\n        const { requestsPerSecond, url, userAgent, origin } = forkingOptions;\n        this.abortSignal = abortSignal;\n        this.limiter = new rate_limiter_1.default(\n        // convert `requestsPerSecond` to \"requests per window\"\n        requestsPerSecond * WINDOW_SECONDS, WINDOW_SECONDS * 1000, abortSignal);\n        this.valueCache = new lru_cache_1.default({\n            max: 1073741824,\n            length: (value, key) => {\n                return value.length + key.length;\n            }\n        });\n        // we don't need header-related things if we are using a provider\n        // instead of a url since we aren't in charge of sending requests at the\n        // header level.\n        if (url) {\n            const headers = {\n                \"user-agent\": userAgent\n            };\n            if (origin) {\n                headers[\"origin\"] = origin;\n            }\n            // we set our own Authentication headers, so username and password must be\n            // removed from the url. (The values have already been copied to the options)\n            url.password = url.username = \"\";\n            const isInfura = url.host.endsWith(\".infura.io\");\n            BaseHandler.setAuthHeaders(forkingOptions, headers);\n            BaseHandler.setUserHeaders(forkingOptions, headers, !isInfura);\n            this.headers = headers;\n        }\n    }\n    setCache(cache) {\n        this.persistentCache = cache;\n    }\n    /**\n     * Adds Authorization headers from the given options to the provided `headers`\n     * object. Overwrites an existing `Authorization` header value.\n     *\n     * @param options -\n     * @param headers -\n     */\n    static setAuthHeaders(options, headers) {\n        if (options.username != null || options.password != null) {\n            if (options.jwt != null)\n                throw new Error(INVALID_AUTH_ERROR);\n            headers.authorization = `Basic ${Buffer.from(`${options.username || \"\"}:${options.password || \"\"}`).toString(\"base64\")}`;\n        }\n        else if (options.jwt) {\n            headers.authorization = `Bearer ${options.jwt}`;\n        }\n    }\n    /**\n     * Adds user provided headers to the provided `headers`\n     * object.\n     *\n     * If the headers already contain an existing `Authorization` header\n     * value and the incoming values have compatible schemes\n     * (Bearer===Bearer, Basic===Basic) the values are merged. Note: if the\n     * `permitMultiAuth` option is `false` Bearer tokens can not be merged.\n     *\n     * @param options -\n     * @param headers -\n     * @param permitMultiAuth -\n     */\n    static setUserHeaders(options, headers, permitMultiAuth) {\n        // copy the user-provided headers over to the connection's headers\n        const userHeaders = options.headers;\n        if (userHeaders) {\n            for (let i = 0, l = userHeaders.length; i < l; i++) {\n                let { name, value } = userHeaders[i];\n                const key = name.toLowerCase();\n                // if the user specified multiple Authentication headers (.e.g, via\n                // username/password or the jwt field) we need to join them when\n                // they are both of the same scheme, otherwise we throw an exception.\n                if (key === \"authorization\" && \"authorization\" in headers) {\n                    if (!permitMultiAuth) {\n                        throw new Error(`Authentication with multiple auth-params is not allowed.`);\n                    }\n                    const currentScheme = headers.authorization.split(\" \", 1)[0];\n                    const [incomingScheme, authParams] = value.split(/\\.(?:.+)/);\n                    if (incomingScheme.toLowerCase() === currentScheme.toLowerCase()) {\n                        headers.authorization += \",\" + authParams;\n                    }\n                    else {\n                        throw new Error(`Authentication via both ${currentScheme} and ${incomingScheme} is not allowed.`);\n                    }\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n        }\n    }\n    getFromMemCache(key) {\n        const cachedRequest = this.requestCache.get(key);\n        if (cachedRequest !== undefined)\n            return cachedRequest;\n        const cachedValue = this.valueCache.get(key);\n        if (cachedValue !== undefined)\n            return JSON.parse(cachedValue).result;\n    }\n    async getFromSlowCache(method, params, key) {\n        if (!this.persistentCache)\n            return;\n        const raw = await this.persistentCache.get(method, params, key).catch(e => {\n            if (e.notFound)\n                return null;\n            // I/O or other error, throw as things are getting weird and the cache may\n            // have lost integrity\n            throw e;\n        });\n        if (raw != null)\n            return { result: JSON.parse(raw).result, raw };\n    }\n    async queueRequest(method, params, key, send, options = { disableCache: false }) {\n        if (!options.disableCache) {\n            const memCached = this.getFromMemCache(key);\n            if (memCached !== undefined)\n                return memCached;\n            const diskCached = await this.getFromSlowCache(method, params, key);\n            if (diskCached !== undefined) {\n                this.valueCache.set(key, Buffer.from(diskCached.raw));\n                return diskCached.result;\n            }\n        }\n        const promise = this.limiter\n            .handle(send)\n            .then(async ({ response, raw }) => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if ((0, utils_1.hasOwn)(response, \"result\")) {\n                if (!options.disableCache) {\n                    // cache non-error responses only\n                    this.valueCache.set(key, raw);\n                    // swallow errors for the persistentCache, since it's not vital that\n                    // it always works\n                    if (this.persistentCache) {\n                        const prom = this.persistentCache\n                            .put(method, params, key, typeof raw === \"string\" ? Buffer.from(raw) : raw)\n                            .catch(_ => {\n                            // the cache.put may fail if the db is closed while a request\n                            // is in flight. This is a \"fire and forget\" method.\n                        });\n                        // track these unawaited `puts`\n                        this.fireForget.add(prom);\n                        // clean up once complete\n                        prom.finally(() => {\n                            this.fireForget.delete(prom);\n                        });\n                    }\n                }\n                return response.result;\n            }\n            else if ((0, utils_1.hasOwn)(response, \"error\") && response.error != null) {\n                const { error } = response;\n                throw new ethereum_utils_1.CodedError(error.message, error.code);\n            }\n            throw new Error(`${INVALID_RESPONSE}\\`${JSON.stringify(response)}\\``);\n        });\n        this.requestCache.set(key, promise);\n        return await promise;\n    }\n    async close() {\n        await Promise.all(this.fireForget.keys());\n        this.persistentCache && (await this.persistentCache.close());\n    }\n}\nexports.BaseHandler = BaseHandler;\nBaseHandler.JSONRPC_PREFIX = '{\"jsonrpc\":\"2.0\",\"id\":';\n//# sourceMappingURL=base-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_randomRng, _Wallet_randomBytes, _Wallet_initializeAccounts, _Wallet_intializeAccountFromKey, _Wallet_initializeAccountWithoutKey, _Wallet_initializeAccount, _Wallet_lockAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst hdkey_1 = require(\"./hdkey\");\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst secp256k1_1 = __importStar(require(\"@ganache/secp256k1\"));\nconst bip39_1 = require(\"bip39\");\nconst seedrandom_1 = require(\"seedrandom\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst TWELVE_255s = Buffer.allocUnsafe(12).fill(255);\n//#region Constants\nconst SCRYPT_PARAMS = {\n    dklen: 32,\n    n: 1024,\n    p: 8,\n    r: 1\n};\nconst CIPHER = \"aes-128-ctr\";\nconst MAX_ACCOUNTS = 100000;\nconst scrypt = (...args) => {\n    return new Promise((resolve, reject) => {\n        crypto_1.default.scrypt.call(crypto_1.default, ...args, (err, derivedKey) => {\n            if (err) {\n                return void reject(err);\n            }\n            return resolve(derivedKey);\n        });\n    });\n};\nconst scryptSync = (...args) => {\n    return crypto_1.default.scryptSync.call(crypto_1.default, ...args);\n};\n/**\n * A Buffer that can be reused by `uncompressedPublicKeyToAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst uncompressedPublicKeyToAddress = (uncompressedPublicKey) => {\n    const status = secp256k1_1.default.publicKeyConvert(SHARED_BUFFER, uncompressedPublicKey);\n    switch (status) {\n        case 0:\n            return ethereum_address_1.Address.from((0, utils_1.keccak)(SHARED_BUFFER.slice(1)).slice(-20));\n        case 1:\n            throw new Error(\"Public Key could not be parsed\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n};\nconst asUUID = (uuid) => {\n    return `${uuid.toString(\"hex\", 0, 4)}-${uuid.toString(\"hex\", 4, 6)}-${uuid.toString(\"hex\", 6, 8)}-${uuid.toString(\"hex\", 8, 10)}-${uuid.toString(\"hex\", 10)}`;\n};\nclass Wallet {\n    constructor(opts, logging) {\n        this.knownAccounts = new Set();\n        this.keyFiles = new Map();\n        this.unlockedAccounts = new Map();\n        this.lockTimers = new Map();\n        _Wallet_randomRng.set(this, void 0);\n        _Wallet_randomBytes.set(this, (length) => {\n            // Since this is a mock RPC library, the rng doesn't need to be\n            // cryptographically secure, and determinism is desired.\n            const buf = Buffer.allocUnsafe(length);\n            const rand = __classPrivateFieldGet(this, _Wallet_randomRng, \"f\");\n            for (let i = 0; i < length; i++) {\n                buf[i] = (rand() * 256) | 0; // generates a random number from 0 to 255\n            }\n            return buf;\n        });\n        _Wallet_initializeAccounts.set(this, (options) => {\n            const makeAccountAtIndex = (0, hdkey_1.createAccountGeneratorFromSeedAndPath)((0, bip39_1.mnemonicToSeedSync)(options.mnemonic, null), options.hdPath);\n            // convert a potentially fractional balance of Ether to WEI\n            const balanceParts = options.defaultBalance.toString().split(\".\", 2);\n            const significand = BigInt(balanceParts[0]);\n            const fractionalStr = balanceParts[1] || \"0\";\n            const fractional = BigInt(fractionalStr);\n            const magnitude = 10n ** BigInt(fractionalStr.length);\n            const defaultBalanceInWei = utils_1.WEI * significand + fractional * (utils_1.WEI / magnitude);\n            const etherInWei = utils_1.Quantity.from(defaultBalanceInWei);\n            const accounts = new Map();\n            const givenAccounts = options.accounts;\n            let accountsLength;\n            if (givenAccounts && (accountsLength = givenAccounts.length) !== 0) {\n                for (let i = 0; i < accountsLength; i++) {\n                    const givenAccount = givenAccounts[i];\n                    const secretKey = givenAccount.secretKey;\n                    let account;\n                    if (secretKey) {\n                        const balance = utils_1.Quantity.from(givenAccount.balance);\n                        account = __classPrivateFieldGet(this, _Wallet_intializeAccountFromKey, \"f\").call(this, balance, secretKey, options);\n                    }\n                    else {\n                        const acct = makeAccountAtIndex(i);\n                        account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                    }\n                    accounts.set(account.address.toString(), account);\n                }\n            }\n            else {\n                const numberOfAccounts = options.totalAccounts;\n                if (numberOfAccounts != null) {\n                    for (let i = 0; i < numberOfAccounts; i++) {\n                        const acct = makeAccountAtIndex(i);\n                        const account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                        accounts.set(account.address.toString(), account);\n                    }\n                }\n            }\n            return accounts;\n        });\n        _Wallet_intializeAccountFromKey.set(this, (balance, secretKey, options) => {\n            const privateKey = utils_1.Data.from(secretKey);\n            const account = Wallet.createAccountFromPrivateKey(privateKey);\n            account.balance = balance;\n            const address = account.address;\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccountWithoutKey.set(this, (balance, acct, options) => {\n            const address = uncompressedPublicKeyToAddress(acct.publicKey);\n            const privateKey = utils_1.Data.from(acct.privateKey);\n            const account = Wallet.createAccount(balance, privateKey, address);\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccount.set(this, (address, privateKey, options) => {\n            const { passphrase, lock: lockAccounts } = options;\n            const knownAccounts = this.knownAccounts;\n            this.addToKeyFileSync(address, privateKey, passphrase, lockAccounts);\n            const strAddress = address.toString();\n            knownAccounts.add(strAddress);\n            // if the `lock` option has been not been set, we're safe to add this\n            // account to unlockedAccounts\n            if (!lockAccounts) {\n                this.unlockedAccounts.set(strAddress, privateKey);\n            }\n        });\n        _Wallet_lockAccount.set(this, (lowerAddress) => {\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        });\n        if (opts.totalAccounts > MAX_ACCOUNTS) {\n            logging.logger.log(`wallet.totalAccounts exceeds MAX_ACCOUNTS (${MAX_ACCOUNTS}) and may affect performance.`);\n        }\n        // create a RNG from our initial starting conditions (opts.mnemonic)\n        __classPrivateFieldSet(this, _Wallet_randomRng, (0, seedrandom_1.alea)(\"ganache \" + opts.mnemonic), \"f\");\n        const initialAccounts = __classPrivateFieldGet(this, _Wallet_initializeAccounts, \"f\").call(this, opts);\n        this.initialAccounts = Array.from(initialAccounts.values());\n        this.addresses = Array.from(initialAccounts.keys());\n        const l = this.initialAccounts.length;\n        const unlockedAccounts = this.unlockedAccounts;\n        //#region Unlocked Accounts\n        const givenUnlockedAccounts = opts.unlockedAccounts;\n        if (givenUnlockedAccounts) {\n            const ul = givenUnlockedAccounts.length;\n            for (let i = 0; i < ul; i++) {\n                let arg = givenUnlockedAccounts[i];\n                let address;\n                let privateKey;\n                switch (typeof arg) {\n                    case \"string\":\n                        // `toLowerCase` so we handle uppercase `0X` formats\n                        const addressOrIndex = arg.toLowerCase();\n                        if (addressOrIndex.indexOf(\"0x\") === 0) {\n                            address = addressOrIndex;\n                            const account = initialAccounts.get(address);\n                            if (account) {\n                                privateKey = account.privateKey;\n                            }\n                            else {\n                                // this wasn't one of our initial accounts, so make a priv key.\n                                privateKey = this.createFakePrivateKey(address);\n                                // add the account to the list of addresses because we want\n                                // `eth_accounts` to return this account.\n                                this.addresses.push(address);\n                            }\n                            break;\n                        }\n                        else {\n                            // try to convert the arg string to a number.\n                            // don't use parseInt because strings like `\"123abc\"` parse\n                            // to `123`, and there is probably an error on the user's side we'd\n                            // want to uncover.\n                            const index = arg - 0;\n                            // if we don't have a valid number, or the number isn't a valid JS\n                            // integer (no bigints or decimals, please), throw an error.\n                            if (!Number.isSafeInteger(index)) {\n                                throw new Error(`Invalid value in wallet.unlockedAccounts: ${arg}`);\n                            }\n                            arg = index;\n                            // not `break`ing here because I want this to fall through to the\n                            //  `\"number\"` case below.\n                            // Refactor it if you want.\n                            // break; // no break, please.\n                        }\n                    case \"number\":\n                        const account = this.initialAccounts[arg];\n                        if (account == null) {\n                            throw new Error(`Account at index ${arg} not found. Max index available is ${l - 1}.`);\n                        }\n                        address = account.address.toString().toLowerCase();\n                        privateKey = account.privateKey;\n                        break;\n                    default:\n                        throw new Error(`Invalid value specified in unlocked_accounts`);\n                }\n                if (unlockedAccounts.has(address))\n                    continue;\n                unlockedAccounts.set(address, privateKey);\n            }\n        }\n        //#endregion\n        //#region save accounts to disk\n        if (opts.accountKeysPath != null) {\n            const fileData = {\n                addresses: {},\n                private_keys: {}\n            };\n            unlockedAccounts.forEach((privateKey, address) => {\n                fileData.addresses[address] = address;\n                fileData.private_keys[address] = privateKey;\n            });\n            // WARNING: Do not turn this to an async method without\n            // making a Wallet.initialize() function and calling it via\n            // Provider.initialize(). No async methods in constructors.\n            // writeFileSync here is acceptable.\n            (0, fs_1.writeFileSync)(opts.accountKeysPath, JSON.stringify(fileData));\n        }\n        //#endregion\n    }\n    async encrypt(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = await scrypt(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    /**\n     * Syncronous version of the `encrypt` function.\n     * @param privateKey -\n     * @param passphrase -\n     */\n    encryptSync(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = scryptSync(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    finishEncryption(derivedKey, privateKey, salt, iv, uuid) {\n        const cipher = crypto_1.default.createCipheriv(CIPHER, derivedKey.slice(0, 16), iv);\n        const ciphertext = Buffer.concat([\n            cipher.update(privateKey.toBuffer()),\n            cipher.final()\n        ]);\n        const mac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n        return {\n            crypto: {\n                cipher: CIPHER,\n                ciphertext: utils_1.Data.from(ciphertext),\n                cipherparams: {\n                    iv: utils_1.Data.from(iv)\n                },\n                kdf: \"scrypt\",\n                kdfParams: {\n                    ...SCRYPT_PARAMS,\n                    salt: utils_1.Data.from(salt)\n                },\n                mac: utils_1.Data.from(mac)\n            },\n            id: asUUID(uuid),\n            version: 3\n        };\n    }\n    async decrypt(keyfile, passphrase) {\n        const crypt = keyfile.crypto;\n        if (crypt.cipher !== CIPHER) {\n            throw new Error(`keyfile cypher must be \"${CIPHER}\"`);\n        }\n        if (crypt.kdf !== \"scrypt\") {\n            throw new Error(`keyfile kdf must be \"script\"`);\n        }\n        const kdfParams = crypt.kdfParams;\n        const salt = kdfParams.salt;\n        const mac = crypt.mac;\n        const ciphertext = crypt.ciphertext.toBuffer();\n        let derivedKey;\n        let localMac;\n        if (passphrase != null) {\n            try {\n                derivedKey = await scrypt(passphrase, salt.toBuffer(), kdfParams.dklen, { ...kdfParams, N: kdfParams.n });\n                localMac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n            }\n            catch {\n                localMac = null;\n            }\n        }\n        if (!localMac || !mac.toBuffer().equals(localMac)) {\n            throw new Error(\"could not decrypt key with given passphrase\");\n        }\n        const decipher = crypto_1.default.createDecipheriv(crypt.cipher, derivedKey.slice(0, 16), crypt.cipherparams.iv.toBuffer());\n        const plaintext = decipher.update(ciphertext);\n        return plaintext;\n    }\n    /**\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    async addToKeyFile(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: await this.encrypt(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Synchronus version of `addToKeyFile`.\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    addToKeyFileSync(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: this.encryptSync(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Fetches the private key for a specific address. If the keyFile is encrypted\n     * for the address, the passphrase is used to decrypt.\n     * @param address - The address whose private key is to be fetched.\n     * @param passphrase - The passphrase used to decrypt the private key.\n     */\n    async getFromKeyFile(address, passphrase) {\n        const keyFile = this.keyFiles.get(address.toString());\n        if (keyFile === undefined || keyFile === null) {\n            throw new Error(\"no key for given address or file\");\n        }\n        if (keyFile.encrypted === true) {\n            return this.decrypt(keyFile.key, passphrase);\n        }\n        else {\n            // if the keyFile is not marked as encrypted, they should provide no\n            // passphrase. so we'll make it look like they gave the \"wrong\" passphrase\n            // by throwing the same error that's thrown when decrypting\n            if (passphrase) {\n                throw new Error('could not decrypt key with given passphrase (default passphrase for accounts created at startup is \"\")');\n            }\n            else {\n                return keyFile.key;\n            }\n        }\n    }\n    static createAccount(balance, privateKey, address) {\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        account.balance = balance;\n        return account;\n    }\n    static createAccountFromPrivateKey(privateKey) {\n        const address = ethereum_address_1.Address.from((0, util_1.privateToAddress)(privateKey.toBuffer()));\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        return account;\n    }\n    createRandomAccount() {\n        // create some seeded deterministic psuedo-randomness based on the chain's\n        // initial starting conditions\n        const seed = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 128);\n        const acct = (0, hdkey_1.createAccountFromSeed)(seed);\n        const address = uncompressedPublicKeyToAddress(acct.publicKey);\n        const privateKey = utils_1.Data.from(acct.privateKey);\n        return Wallet.createAccount(utils_1.Quantity.Zero, privateKey, address);\n    }\n    async unlockAccount(address, passphrase, duration) {\n        const lowerAddress = address.toString();\n        const secretKey = await this.getFromKeyFile(address, passphrase);\n        const existingTimer = this.lockTimers.get(lowerAddress);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n        // a duration <= 0 will remain unlocked\n        const durationMs = (duration * 1000) | 0;\n        if (durationMs > 0) {\n            const timeout = setTimeout(__classPrivateFieldGet(this, _Wallet_lockAccount, \"f\"), durationMs, lowerAddress);\n            (0, utils_1.unref)(timeout);\n            this.lockTimers.set(lowerAddress, timeout);\n        }\n        this.unlockedAccounts.set(lowerAddress, utils_1.Data.from(secretKey));\n        return true;\n    }\n    async addUnknownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we \"know\" about this account, it cannot be added this way\n        if (this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        // this is an unknown account, so we do not have a private key. instead,\n        // we'll need to create a fake one.\n        const privateKey = this.createFakePrivateKey(lowerAddress);\n        await this.addToKeyFile(address, privateKey, passphrase, true);\n        this.knownAccounts.add(lowerAddress);\n        this.addresses.push(lowerAddress);\n        return true;\n    }\n    async removeKnownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we don't \"know\" about this account, it cannot be removed\n        if (!this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        const privateKey = await this.getFromKeyFile(address, passphrase);\n        // we don't actually care what the private key is, we just need to know that\n        // the passphrase they supplied is the right one. (empty string is a valid\n        // privateKey for added, previously unknown accounts)\n        if (privateKey != null) {\n            this.keyFiles.delete(lowerAddress);\n            this.knownAccounts.delete(lowerAddress);\n            this.addresses.splice(this.addresses.indexOf(lowerAddress), 1);\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        }\n        else {\n            throw new Error(\"could not find private key for address/passphrase combination\");\n        }\n    }\n    createFakePrivateKey(address) {\n        let fakePrivateKey;\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        if (addressBuf.equals(utils_1.ACCOUNT_ZERO)) {\n            // allow signing with the 0x0 address...\n            // always sign with the same fake key, a 31 `0`s followed by a single\n            // `1`. The key is arbitrary. It just must not be all `0`s and must be\n            // deterministic.\n            // see: https://github.com/ethereumjs/ethereumjs-monorepo/issues/829#issue-674385636\n            fakePrivateKey = Buffer.allocUnsafe(32).fill(0, 0, 31);\n            fakePrivateKey[31] = 1;\n        }\n        else {\n            // Private keys must not be greater than *or equal to*:\n            // 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141, and\n            // if they are that large then signing of the transaction (ecdsaSign) will\n            // fail.\n            // Historically, we've just concatenated the address with part of itself,\n            // to make something long enough to use as a private key, so we can't\n            // change the default/legacy behavior now. But for addresses that would\n            // generate an invalid private key we must use a different approach. If\n            // the legacy way of generating a private key results in a key that is too\n            // large\n            //\n            const first12 = addressBuf.slice(0, 12);\n            fakePrivateKey = Buffer.concat([addressBuf, first12]);\n            // BigInt is slow, so only do it if we might need to, which we usually\n            // never will.\n            // Since we already have a slice of the first 12 bytes let's use it to\n            // help check if we might overflow the max secp256k1 key value. If the\n            // first 12 bytes, the most significant digits of the key, are all `255`\n            // then there is a chance that the fakePrivateKey will be too large.\n            // `Buffer.compare` is a native method in V8, so it should be pretty fast.\n            // example: the address `0xffffffffffff{anything can go here}` generates a\n            // bad fakePrivateKey but, `0xfffffffffffe{anything can go here}` never\n            // will. There are obviously many chances for a false positive, but the\n            // next condition in the `while` loop will catch those.\n            if (first12.compare(TWELVE_255s) === 0) {\n                while (BigInt(`0x${fakePrivateKey.toString(\"hex\")}`) >= secp256k1_1.SECP256K1_N) {\n                    // keccak returns a 32 byte hash of the input data, which is the exact\n                    // length we need for a private key.\n                    // note: if keccak can return its own input as its output, then this\n                    // loops forever. The chances of this happening are impossibly low, so\n                    // it's not worth the effort to check, but it would be interesting if\n                    // someone reported an issue that can cause this for a specific\n                    // address!\n                    fakePrivateKey = (0, utils_1.keccak)(fakePrivateKey);\n                }\n            }\n        }\n        return utils_1.Data.from(fakePrivateKey);\n    }\n    lockAccount(lowerAddress) {\n        if (!this.unlockedAccounts.has(lowerAddress))\n            return false;\n        clearTimeout(this.lockTimers.get(lowerAddress));\n        return __classPrivateFieldGet(this, _Wallet_lockAccount, \"f\").call(this, lowerAddress);\n    }\n}\nexports.default = Wallet;\n_Wallet_randomRng = new WeakMap(), _Wallet_randomBytes = new WeakMap(), _Wallet_initializeAccounts = new WeakMap(), _Wallet_intializeAccountFromKey = new WeakMap(), _Wallet_initializeAccountWithoutKey = new WeakMap(), _Wallet_initializeAccount = new WeakMap(), _Wallet_lockAccount = new WeakMap();\n//# sourceMappingURL=wallet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handlers = exports.bytes = exports.address = exports.bool = exports.string = exports.uint256 = exports.int256 = exports.fixedBytes = exports.WORD_SIZE = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * EVM word size for abi encoded data\n */\nexports.WORD_SIZE = 32; // bytes\n/**\n * Used to convert _from_ twos compliment\n * This is calculated via:\n * ~((1n << (8n * BigInt(WORD_SIZE))) - 1n)\n */\nconst OR_WITH_TWOS_COMPLEMENT = -0x10000000000000000000000000000000000000000000000000000000000000000n;\n/**\n * For dynamic-length types, like `bytes` and `string`, returns the starting\n * position of the value in `memory`, and the `end` position of the value.\n *\n * Calling this function when the type is not dynamic will not work. You have\n * been warned.\n *\n * @param memory\n * @param offset The offset into the given memory from which to start parsing.\n * @returns The starting position of the value in `memory`, and the `end` position of the value.\n */\nfunction getDynamicDataMarkers(memory, offset) {\n    // A Buffer's length maxes out at UInt32 max, 4294967295, (2**(8 * 4)) - 1) so\n    // it is safe to decode the `start` and `length` values as UInt32s.\n    //\n    // If we had a start position \"word\" of:\n    //   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 60\n    // we know we really only need to read the last 4 bytes, since we know that\n    // a Buffer's length can't be greater than UInt32 (which can be represented by\n    // up to 4 bytes). So we only need to look at:\n    // 00 00 00 60\n    // `offset + WORD_SIZE - UINT32_BYTE_LENGTH` effectively tells `readUInt32BE`\n    // to read only these last 4 bytes of the word that represent the `start`\n    // value.\n    // We add WORD_SIZE to this value because we are skipping over the location of\n    // the length and referencing the start of the location of the data itself.\n    const UINT32_BYTE_LENGTH = 4;\n    const nextWordOffset = offset + exports.WORD_SIZE;\n    const startUint32MemoryPosition = nextWordOffset - UINT32_BYTE_LENGTH;\n    const start = memory.readUInt32BE(startUint32MemoryPosition) + exports.WORD_SIZE;\n    // the same optimization is applied here.\n    // The word that immediately precedes the data itself is the data's `length`:\n    const end = start + memory.readUInt32BE(start - UINT32_BYTE_LENGTH);\n    return { start, end };\n}\n/**\n * Ganerates a handler function for solidity's bytes1-bytes32 types\n * @param length From 1 to 32.\n * @returns A function that accepts a memory Buffer and an offset.\n */\nfunction fixedBytes(length) {\n    return (memory, offset) => handleBytes(memory, offset, offset + length);\n}\nexports.fixedBytes = fixedBytes;\n/**\n * Returns the hex representation of the bytes in `memory`.\n *\n * @param memory\n * @param start The start of the data in the given memory.\n * @param end The end of the data in the given memory (not inclusive).\n * @returns\n */\nfunction handleBytes(memory, start, end) {\n    return `0x${memory.toString(\"hex\", start, end)}`;\n}\nconst int256 = (memory, offset) => {\n    // convert from two's compliment to signed BigInt\n    const twosComplementBuffer = memory.subarray(offset, offset + exports.WORD_SIZE);\n    const twosComplementBigInt = (0, utils_1.bufferToBigInt)(twosComplementBuffer);\n    if (twosComplementBuffer[0] & 128) {\n        // if the first bit is `1` we need to convert from two's compliment\n        return twosComplementBigInt | OR_WITH_TWOS_COMPLEMENT;\n    }\n    else {\n        // if the first bit is not `1` we can treat it as unsigned\n        return twosComplementBigInt;\n    }\n};\nexports.int256 = int256;\n/**\n * Handle decoding of solidity's `uint256` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst uint256 = (memory, offset) => (0, utils_1.bufferToBigInt)(memory.subarray(offset, offset + exports.WORD_SIZE));\nexports.uint256 = uint256;\n/**\n * Handle decoding of solidity's dynamic `string` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst string = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return memory.toString(\"utf8\", start, end);\n};\nexports.string = string;\n/**\n * Handle decoding of solidity's `bool` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bool = (memory, offset) => memory[offset + exports.WORD_SIZE - 1] !== 0;\nexports.bool = bool;\n/**\n * Handle decoding of solidity's `address` type from EVM memory.\n * @param memory\n * @param offset\n * @returns A 20 byte hex encoded string, prefixed with 0x.\n */\nconst address = (memory, offset) => `0x${memory.toString(\"hex\", offset + 12, offset + exports.WORD_SIZE)}`;\nexports.address = address;\n/**\n * Handle decoding of solidity's dynamic `bytes` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bytes = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return handleBytes(memory, start, end);\n};\nexports.bytes = bytes;\nexports.Handlers = {\n    address: exports.address,\n    bool: exports.bool,\n    bytes: exports.bytes,\n    int256: exports.int256,\n    string: exports.string,\n    uint256: exports.uint256\n};\n//# sourceMappingURL=handlers.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Miner_currentlyExecutingPrice, _Miner_origins, _Miner_pending, _Miner_isBusy, _Miner_paused, _Miner_resumer, _Miner_currentBlockBaseFeePerGas, _Miner_resolver, _Miner_emitStepEvent, _Miner_executables, _Miner_options, _Miner_vm, _Miner_createBlock, _Miner_priced, _Miner_mine, _Miner_mineTxs, _Miner_runTx, _Miner_removeBestAndOrigin, _Miner_reset, _Miner_setPricedHeap, _Miner_updatePricedHeap;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Capacity = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst replace_from_heap_1 = __importDefault(require(\"./replace-from-heap\"));\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst provider_events_1 = require(\"../provider-events\");\nconst console_log_1 = require(\"@ganache/console.log\");\n/**\n * How many transactions should be in the block.\n */\nvar Capacity;\n(function (Capacity) {\n    /**\n     * Keep mining transactions until there are no more transactions that can fit\n     * in the block, or there are no transactions left to mine.\n     */\n    Capacity[Capacity[\"FillBlock\"] = -1] = \"FillBlock\";\n    /**\n     * Mine an empty block, even if there are executable transactions available to\n     * mine.\n     */\n    Capacity[Capacity[\"Empty\"] = 0] = \"Empty\";\n    /**\n     * Mine a block with a single transaction, or empty if there are no executable\n     * transactions available to mine.\n     */\n    Capacity[Capacity[\"Single\"] = 1] = \"Single\";\n})(Capacity = exports.Capacity || (exports.Capacity = {}));\nconst updateBloom = (blockBloom, bloom) => {\n    let i = 256;\n    while (--i)\n        blockBloom[i] |= bloom[i];\n};\nconst sortByPrice = (values, a, b) => values[a].effectiveGasPrice > values[b].effectiveGasPrice;\nconst refresher = (item, context) => item.updateEffectiveGasPrice(context);\nclass Miner extends emittery_1.default {\n    /*\n     * @param executables - A live Map of pending transactions from the transaction\n     * pool. The miner will update this Map by removing the best transactions\n     * and putting them in new blocks.\n     */\n    constructor(options, executables, vm, createBlock) {\n        super();\n        _Miner_currentlyExecutingPrice.set(this, 0n);\n        _Miner_origins.set(this, new Set());\n        _Miner_pending.set(this, void 0);\n        _Miner_isBusy.set(this, false);\n        _Miner_paused.set(this, false);\n        _Miner_resumer.set(this, void 0);\n        _Miner_currentBlockBaseFeePerGas.set(this, void 0);\n        _Miner_resolver.set(this, void 0);\n        /**\n         * Because step events are expensive, CPU-wise, to create and emit we only do\n         * it conditionally.\n         */\n        _Miner_emitStepEvent.set(this, false);\n        _Miner_executables.set(this, void 0);\n        _Miner_options.set(this, void 0);\n        _Miner_vm.set(this, void 0);\n        _Miner_createBlock.set(this, void 0);\n        // create a Heap that sorts by gasPrice\n        _Miner_priced.set(this, new utils_1.Heap(sortByPrice, refresher));\n        _Miner_mine.set(this, async (block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) => {\n            const { block: lastBlock, transactions } = await __classPrivateFieldGet(this, _Miner_mineTxs, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            // if there are more txs to mine, start mining them without awaiting their\n            // result.\n            if (__classPrivateFieldGet(this, _Miner_pending, \"f\")) {\n                __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n                __classPrivateFieldSet(this, _Miner_pending, false, \"f\");\n                if (!onlyOneBlock && __classPrivateFieldGet(this, _Miner_priced, \"f\").length > 0) {\n                    const nextBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, lastBlock);\n                    await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, nextBlock, maxTransactions);\n                }\n            }\n            return transactions;\n        });\n        _Miner_mineTxs.set(this, async (runtimeBlock, maxTransactions, onlyOneBlock) => {\n            let block;\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            const { pending, inProgress } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const options = __classPrivateFieldGet(this, _Miner_options, \"f\");\n            let keepMining = true;\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const storageKeys = new Map();\n            let blockTransactions;\n            do {\n                keepMining = false;\n                __classPrivateFieldSet(this, _Miner_isBusy, true, \"f\");\n                blockTransactions = [];\n                const transactionsTrie = new trie_1.Trie();\n                const receiptTrie = new trie_1.Trie();\n                // don't mine anything at all if maxTransactions is `0`\n                if (maxTransactions === Capacity.Empty) {\n                    await vm.stateManager.checkpoint();\n                    await vm.stateManager.commit();\n                    const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), utils_1.BUFFER_256_ZERO, vm.stateManager._trie.root(), 0n, // gas used\n                    options.extraData, [], storageKeys);\n                    this.emit(\"block\", finalizedBlockData);\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    return { block: finalizedBlockData.block, transactions: [] };\n                }\n                let numTransactions = 0;\n                let blockGasLeft = options.blockGasLimit.toBigInt();\n                let blockGasUsed = 0n;\n                const blockBloom = Buffer.allocUnsafe(256).fill(0);\n                const promises = [];\n                // Set a block-level checkpoint so our unsaved trie doesn't update the\n                // vm's \"live\" trie.\n                await vm.stateManager.checkpoint();\n                const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n                // We need to listen for any SSTORE opcodes so we can grab the raw, unhashed version\n                // of the storage key and save it to the db along with it's keccak hashed version of\n                // the storage key. Why you might ask? So we can reference the raw version in\n                // debug_storageRangeAt.\n                const stepListener = (event) => {\n                    if (event.opcode.name === \"SSTORE\") {\n                        const key = TraceData.from(utils_1.Quantity.toBuffer(event.stack[event.stack.length - 1])).toBuffer();\n                        const hashedKey = (0, utils_1.keccak)(key);\n                        storageKeys.set(hashedKey.toString(), { key, hashedKey });\n                    }\n                };\n                vm.evm.events.on(\"step\", stepListener);\n                // Run until we run out of items, or until the inner loop stops us.\n                // we don't call `shift()` here because we will may need to `replace`\n                // this `best` transaction with the next best transaction from the same\n                // origin later.\n                let best;\n                while ((best = priced.peek())) {\n                    const origin = best.from.toString();\n                    if (best.calculateIntrinsicGas() > blockGasLeft) {\n                        // if the current best transaction can't possibly fit in this block\n                        // go ahead and run the next best transaction, ignoring all other\n                        // pending transactions from this account for this block.\n                        //  * We don't replace this \"best\" transaction with another from the\n                        // same account.\n                        //  * We do \"unlock\" this transaction in the transaction pool's `pending`\n                        // queue so it can be replaced, if needed.\n                        best.locked = false;\n                        __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                        continue;\n                    }\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, best.effectiveGasPrice.toBigInt(), \"f\");\n                    // Set a transaction-level checkpoint so we can undo state changes in\n                    // the case where the transaction is rejected by the VM.\n                    await vm.stateManager.checkpoint();\n                    // Set the internal trie's block number (for forking)\n                    vm.stateManager._trie.blockNumber = utils_1.Quantity.from(runtimeBlock.header.number);\n                    const result = await __classPrivateFieldGet(this, _Miner_runTx, \"f\").call(this, best, runtimeBlock, origin, pending);\n                    if (result !== null) {\n                        const gasUsed = result.totalGasSpent;\n                        if (blockGasLeft >= gasUsed) {\n                            // if the transaction will fit in the block, commit it!\n                            await vm.stateManager.commit();\n                            blockTransactions[numTransactions] = best;\n                            blockGasLeft -= gasUsed;\n                            blockGasUsed += gasUsed;\n                            // calculate receipt and tx tries\n                            const txKey = (0, rlp_1.encode)(numTransactions === 0\n                                ? utils_1.BUFFER_EMPTY\n                                : (0, utils_1.uintToBuffer)(numTransactions));\n                            promises.push(transactionsTrie.put(txKey, best.serialized));\n                            const receipt = best.fillFromResult(result, blockGasUsed);\n                            promises.push(receiptTrie.put(txKey, receipt));\n                            // update the block's bloom\n                            updateBloom(blockBloom, result.bloom.bitvector);\n                            numTransactions++;\n                            const pendingOrigin = pending.get(origin);\n                            inProgress.add(best);\n                            best.once(\"finalized\").then(() => {\n                                // it is in the database (or thrown out) so delete it from the\n                                // `inProgress` Set\n                                inProgress.delete(best);\n                            });\n                            // since this transaction was successful, remove it from the \"pending\"\n                            // transaction pool.\n                            const hasMoreFromOrigin = pendingOrigin.removeBest();\n                            if (hasMoreFromOrigin) {\n                                // remove the newest (`best`) tx from this account's pending queue\n                                // as we know we can fit another transaction in the block. Stick\n                                // this tx into our `priced` heap.\n                                keepMining = (0, replace_from_heap_1.default)(priced, pendingOrigin);\n                            }\n                            else {\n                                // since we don't have any more txs from this account, just get the\n                                // next best transaction sorted in our `priced` heap.\n                                keepMining = __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                            }\n                            // if we:\n                            //  * don't have enough gas left for even the smallest of transactions\n                            //  * Or if we've mined enough transactions\n                            // we're done with this block!\n                            // notice: when `maxTransactions` is `-1` (AKA infinite), `numTransactions === maxTransactions`\n                            // will always return false, so this comparison works out fine.\n                            if (blockGasLeft <= ethereum_transaction_1.Params.TRANSACTION_GAS ||\n                                numTransactions === maxTransactions) {\n                                break;\n                            }\n                        }\n                        else {\n                            // didn't fit in the current block\n                            await vm.stateManager.revert();\n                            // unlock the transaction so the transaction pool can reconsider this\n                            // transaction\n                            best.locked = false;\n                            // didn't fit. remove it from the priced transactions without replacing\n                            // it with another from the account. This transaction will have to be\n                            // run again in another block.\n                            keepMining = priced.removeBest();\n                        }\n                    }\n                    else {\n                        // no result means the transaction is an \"always failing tx\", so we\n                        // revert its changes here.\n                        // Note: we don't clean up (`removeBest`, etc) because `runTx`'s\n                        // error handler does the clean up itself.\n                        await vm.stateManager.revert();\n                    }\n                }\n                await Promise.all(promises);\n                await vm.stateManager.commit();\n                vm.evm.events.removeListener(\"step\", stepListener);\n                const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), blockBloom, vm.stateManager._trie.root(), blockGasUsed, options.extraData, blockTransactions, storageKeys);\n                block = finalizedBlockData.block;\n                this.emit(\"block\", finalizedBlockData);\n                if (onlyOneBlock) {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    break;\n                }\n                else {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n                    if (priced.length !== 0) {\n                        runtimeBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, block);\n                        // if baseFeePerGas is undefined, we are pre london hard fork.\n                        // no need to refresh the order of the heap because all Txs only have gasPrice.\n                        if (__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\") !== undefined) {\n                            priced.refresh(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                        }\n                    }\n                    else {\n                        // reset the miner\n                        __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    }\n                }\n            } while (keepMining);\n            return { block, transactions: blockTransactions };\n        });\n        _Miner_runTx.set(this, async (tx, block, origin, pending) => {\n            const context = {};\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            this.emit(\"ganache:vm:tx:before\", { context });\n            // we always listen to the step event even if `#emitStepEvent` is false in\n            // case the user starts listening in the middle of the transaction.\n            const stepListener = (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs)\n                    this.emit(\"ganache:vm:tx:console.log\", { context, logs });\n                if (!__classPrivateFieldGet(this, _Miner_emitStepEvent, \"f\"))\n                    return;\n                this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(context, event));\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            try {\n                return await vm.runTx({\n                    tx: tx.toVmTransaction(),\n                    block: block\n                });\n            }\n            catch (err) {\n                const errorMessage = err.message;\n                // We do NOT want to re-run this transaction.\n                // Update the `priced` heap with the next best transaction from this\n                // account\n                const pendingOrigin = pending.get(origin);\n                if (pendingOrigin.removeBest()) {\n                    (0, replace_from_heap_1.default)(__classPrivateFieldGet(this, _Miner_priced, \"f\"), pendingOrigin);\n                }\n                else {\n                    // if there are no more transactions from this origin remove this tx\n                    // from the priced heap and clear out it's origin so it can accept new\n                    // transactions from this origin.\n                    __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                }\n                const e = {\n                    execResult: {\n                        runState: { programCounter: 0 },\n                        exceptionError: { error: errorMessage },\n                        returnValue: utils_1.BUFFER_EMPTY\n                    }\n                };\n                const error = new ethereum_utils_1.RuntimeError(tx.hash, e, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n                tx.finalize(\"rejected\", error);\n                return null;\n            }\n            finally {\n                vm.evm.events.removeListener(\"step\", stepListener);\n                this.emit(\"ganache:vm:tx:after\", { context });\n            }\n        });\n        _Miner_removeBestAndOrigin.set(this, (origin) => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").delete(origin);\n            return __classPrivateFieldGet(this, _Miner_priced, \"f\").removeBest();\n        });\n        _Miner_reset.set(this, () => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").clear();\n            // HACK: see: https://github.com/trufflesuite/ganache/issues/3093\n            //\n            //When the priced heap is reset, meaning we're clearing out the heap\n            // and origins list to be set again when the miner is called, loop over\n            // the priced heap transactions and \"unlock\" them (set tx.locked = false)\n            //\n            // The real fix would include fixing the use of locked, as it's\n            // currently overloaded to mean \"is in priced heap\" and also \"is being\n            // mined\".\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const length = priced.length;\n            const pricedArray = priced.array;\n            for (let i = 0; i < length; i++) {\n                const bestFromOrigin = pricedArray[i];\n                bestFromOrigin.locked = false;\n            }\n            priced.clear();\n            __classPrivateFieldSet(this, _Miner_isBusy, false, \"f\");\n        });\n        /**\n         * Adds one transaction from each origin into the \"priced\" heap, which\n         * sorts each tx by gasPrice (high to low)\n         */\n        _Miner_setPricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const origin = next.from.toString();\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Updates the \"priced\" heap with transactions from origins it doesn't yet\n         * contain.\n         */\n        _Miner_updatePricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            // Note: the `pending` Map passed here is \"live\", meaning it is constantly\n            // being updated by the `transactionPool`. This allows us to begin\n            // processing a block with the _current_ pending transactions, and while\n            // that is processing, to receive new transactions, updating our `priced`\n            // heap with these new pending transactions.\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const price = next.effectiveGasPrice.toBigInt();\n                    if (__classPrivateFieldGet(this, _Miner_currentlyExecutingPrice, \"f\") > price) {\n                        // don't insert a transaction into the miner's `priced` heap\n                        // if it will be better than its last\n                        continue;\n                    }\n                    const origin = next.from.toString();\n                    if (origins.has(origin)) {\n                        // don't insert a transaction into the miner's `priced` heap if it\n                        // has already queued up transactions for that origin\n                        continue;\n                    }\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        __classPrivateFieldSet(this, _Miner_vm, vm, \"f\");\n        __classPrivateFieldSet(this, _Miner_options, options, \"f\");\n        __classPrivateFieldSet(this, _Miner_executables, executables, \"f\");\n        __classPrivateFieldSet(this, _Miner_createBlock, (previousBlock) => {\n            const newBlock = createBlock(previousBlock);\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, newBlock.header.baseFeePerGas, \"f\");\n            return newBlock;\n        }, \"f\");\n        // initialize the heap with an empty array\n        __classPrivateFieldGet(this, _Miner_priced, \"f\").init([]);\n    }\n    async pause() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            __classPrivateFieldSet(this, _Miner_paused, true, \"f\");\n            __classPrivateFieldSet(this, _Miner_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _Miner_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            await this.once(\"idle\");\n        }\n    }\n    resume() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\"))\n            return;\n        __classPrivateFieldSet(this, _Miner_paused, false, \"f\");\n        __classPrivateFieldGet(this, _Miner_resolver, \"f\").call(this);\n    }\n    /**\n     * @param maxTransactions: - maximum number of transactions per block. If `-1`,\n     * unlimited.\n     * @param onlyOneBlock: - set to `true` if only 1 block should be mined.\n     *\n     * @returns the transactions mined in the _first_ block\n     */\n    async mine(block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) {\n        if (__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _Miner_resumer, \"f\");\n        }\n        // only allow mining a single block at a time (per miner)\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            // if we are currently mining a block, set the `pending` property\n            // so the miner knows it can immediately start mining another block once\n            // it is done with its current work.\n            __classPrivateFieldSet(this, _Miner_pending, true, \"f\");\n            __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n            return;\n        }\n        else {\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, block.header.baseFeePerGas, \"f\");\n            __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n            const result = await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            this.emit(\"idle\");\n            return result;\n        }\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Miner_emitStepEvent, enable, \"f\");\n    }\n}\nexports.default = Miner;\n_Miner_currentlyExecutingPrice = new WeakMap(), _Miner_origins = new WeakMap(), _Miner_pending = new WeakMap(), _Miner_isBusy = new WeakMap(), _Miner_paused = new WeakMap(), _Miner_resumer = new WeakMap(), _Miner_currentBlockBaseFeePerGas = new WeakMap(), _Miner_resolver = new WeakMap(), _Miner_emitStepEvent = new WeakMap(), _Miner_executables = new WeakMap(), _Miner_options = new WeakMap(), _Miner_vm = new WeakMap(), _Miner_createBlock = new WeakMap(), _Miner_priced = new WeakMap(), _Miner_mine = new WeakMap(), _Miner_mineTxs = new WeakMap(), _Miner_runTx = new WeakMap(), _Miner_removeBestAndOrigin = new WeakMap(), _Miner_reset = new WeakMap(), _Miner_setPricedHeap = new WeakMap(), _Miner_updatePricedHeap = new WeakMap();\n//# sourceMappingURL=miner.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockManager_blockchain, _BlockManager_common, _BlockManager_blockIndexes;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst LATEST_INDEX_KEY = utils_1.BUFFER_ZERO;\nconst NOTFOUND = 404;\nconst EMPTY_BUFFER = Buffer.from([]);\nclass BlockManager extends manager_1.default {\n    constructor(blockchain, common, blockIndexes, base) {\n        super(base, ethereum_block_1.Block, common);\n        _BlockManager_blockchain.set(this, void 0);\n        _BlockManager_common.set(this, void 0);\n        _BlockManager_blockIndexes.set(this, void 0);\n        this.fromFallback = async (tagOrBlockNumber) => {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            let blockNumber;\n            if (typeof tagOrBlockNumber === \"string\") {\n                blockNumber = tagOrBlockNumber;\n            }\n            else if (!fallback.isValidForkBlockNumber(tagOrBlockNumber)) {\n                // don't get the block if the requested block is _after_ our fallback's\n                // blocknumber because it doesn't exist in our local chain.\n                return null;\n            }\n            else {\n                blockNumber = tagOrBlockNumber.toString();\n            }\n            const json = await fallback.request(\"eth_getBlockByNumber\", [\n                blockNumber,\n                true\n            ]);\n            if (json == null) {\n                return null;\n            }\n            else {\n                const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), BigInt(json.number));\n                return BlockManager.rawFromJSON(json, common);\n            }\n        };\n        __classPrivateFieldSet(this, _BlockManager_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_common, common, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_blockIndexes, blockIndexes, \"f\");\n    }\n    static async initialize(blockchain, common, blockIndexes, base) {\n        const bm = new BlockManager(blockchain, common, blockIndexes, base);\n        await bm.updateTaggedBlocks();\n        return bm;\n    }\n    static rawFromJSON(json, common) {\n        const header = [\n            utils_1.Data.toBuffer(json.parentHash),\n            utils_1.Data.toBuffer(json.sha3Uncles),\n            ethereum_address_1.Address.from(json.miner).toBuffer(),\n            utils_1.Data.toBuffer(json.stateRoot),\n            utils_1.Data.toBuffer(json.transactionsRoot),\n            utils_1.Data.toBuffer(json.receiptsRoot),\n            utils_1.Data.toBuffer(json.logsBloom),\n            utils_1.Quantity.toBuffer(json.difficulty),\n            utils_1.Quantity.toBuffer(json.number),\n            utils_1.Quantity.toBuffer(json.gasLimit),\n            utils_1.Quantity.toBuffer(json.gasUsed),\n            utils_1.Quantity.toBuffer(json.timestamp),\n            utils_1.Data.toBuffer(json.extraData),\n            utils_1.Data.toBuffer(json.mixHash),\n            utils_1.Data.toBuffer(json.nonce)\n        ];\n        // only add baseFeePerGas if the block's JSON already has it\n        if (json.baseFeePerGas !== undefined) {\n            header[15] = utils_1.Data.toBuffer(json.baseFeePerGas);\n        }\n        const totalDifficulty = utils_1.Quantity.toBuffer(json.totalDifficulty);\n        const txs = [];\n        const extraTxs = [];\n        json.transactions.forEach((tx, index) => {\n            const blockExtra = [\n                ethereum_address_1.Address.toBuffer(tx.from),\n                utils_1.Quantity.toBuffer(tx.hash)\n            ];\n            const txExtra = [\n                ...blockExtra,\n                utils_1.Data.toBuffer(json.hash),\n                utils_1.Quantity.toBuffer(json.number),\n                index\n            ];\n            const typedTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, txExtra);\n            const raw = typedTx.toEthRawTransaction(typedTx.v.toBuffer(), typedTx.r.toBuffer(), typedTx.s.toBuffer());\n            txs.push(raw);\n            extraTxs.push(blockExtra);\n        });\n        return (0, ethereum_block_1.serialize)([header, txs, [], totalDifficulty, extraTxs]).serialized;\n    }\n    getBlockByTag(tag) {\n        switch (tag) {\n            case \"latest\":\n            case \"finalized\":\n            case \"safe\":\n                return this.latest;\n            case \"pending\":\n                // TODO: build a real pending block!\n                return this.latest; // this.createBlock(this.latest.header);\n            case \"earliest\":\n                return this.earliest;\n            default:\n                // the key is probably a hex string, let nature takes its course.\n                break;\n        }\n    }\n    getEffectiveNumber(tagOrBlockNumber = typeof ethereum_utils_1.Tag.latest) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block) {\n                return block.header.number;\n            }\n        }\n        return utils_1.Quantity.from(tagOrBlockNumber);\n    }\n    async getNumberFromHash(hash) {\n        return __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(utils_1.Data.toBuffer(hash)).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async getByHash(hash) {\n        const number = await this.getNumberFromHash(hash);\n        if (number === null) {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const json = await fallback.request(\"eth_getBlockByHash\", [\n                    utils_1.Data.from(hash),\n                    true\n                ]);\n                if (json) {\n                    const blockNumber = BigInt(json.number);\n                    if (blockNumber <= fallback.blockNumber.toBigInt()) {\n                        const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), blockNumber);\n                        return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n                    }\n                }\n            }\n            return null;\n        }\n        else {\n            return this.get(number);\n        }\n    }\n    async getRawByBlockNumber(blockNumber) {\n        // TODO(perf): make the block's raw fields accessible on latest/earliest/pending so\n        // we don't have to fetch them from the db each time a block tag is used.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3481\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        const numBuf = blockNumber.toBuffer();\n        return this.getRaw(numBuf).then(block => {\n            if (block == null && fallback) {\n                return this.fromFallback(blockNumber);\n            }\n            return block;\n        });\n    }\n    async get(tagOrBlockNumber) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block)\n                return block;\n        }\n        const blockNumber = utils_1.Quantity.from(tagOrBlockNumber);\n        const block = await this.getRaw(blockNumber.toBuffer());\n        const common = __classPrivateFieldGet(this, _BlockManager_common, \"f\");\n        if (block)\n            return new ethereum_block_1.Block(block, common);\n        else {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const block = await this.fromFallback(blockNumber);\n                if (block) {\n                    return new ethereum_block_1.Block(block, fallback.getCommonForBlockNumber(common, blockNumber.toBigInt()));\n                }\n            }\n        }\n        throw new Error(\"header not found\");\n    }\n    /**\n     * Writes the block object to the underlying database.\n     * @param block -\n     */\n    async putBlock(number, hash, serialized) {\n        let key = number;\n        // ensure we can store Block #0 as key \"00\", not \"\"\n        if (EMPTY_BUFFER.equals(key)) {\n            key = Buffer.from([0]);\n        }\n        const secondaryKey = hash.toBuffer();\n        await Promise.all([\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(secondaryKey, key),\n            super.set(key, serialized)\n        ]);\n    }\n    /**\n     * Updates the \"latest\" index to point to the given number.\n     * @param number the block number of the latest block\n     */\n    async updateLatestIndex(number) {\n        await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(LATEST_INDEX_KEY, number);\n    }\n    /**\n     * Updates the this.latest and this.earliest properties with data\n     * from the database.\n     */\n    async updateTaggedBlocks() {\n        const [earliest, latestBlockNumber] = await Promise.all([\n            (async () => {\n                for await (const data of this.base.createValueStream({ limit: 1 })) {\n                    return new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                }\n            })(),\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(LATEST_INDEX_KEY).catch(e => null)\n        ]);\n        if (earliest)\n            this.earliest = earliest;\n        if (latestBlockNumber) {\n            this.latest = await this.get(latestBlockNumber);\n        }\n        else {\n            // TODO: remove this section for the Ganache 8.0 release\n            // Ganache v7.0.0 didn't save a pointer to the latest block correctly, so\n            // when a database was restarted it would pull the wrong block. This code\n            // iterates over all data in the data base and finds the block with the\n            // highest block number and updates the database with the pointer so we\n            // don't have to hit this code again next time.\n            this.latest = await (async () => {\n                let latest;\n                for await (const data of this.base.createValueStream()) {\n                    const block = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                    if (!latest ||\n                        block.header.number.toBigInt() > latest.header.number.toBigInt()) {\n                        latest = block;\n                    }\n                }\n                return latest;\n            })();\n            if (this.latest) {\n                // update the LATEST_INDEX_KEY index so we don't have to do this next time\n                await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\")\n                    .put(LATEST_INDEX_KEY, this.latest.header.number.toBuffer())\n                    .catch(e => null);\n            }\n        }\n    }\n}\nexports.default = BlockManager;\n_BlockManager_blockchain = new WeakMap(), _BlockManager_common = new WeakMap(), _BlockManager_blockIndexes = new WeakMap();\n//# sourceMappingURL=block-manager.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-options\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InternalTransactionReceipt_init;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalTransactionReceipt = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nconst STATUSES = [utils_1.Quantity.Zero, utils_1.Quantity.One];\nclass InternalTransactionReceipt {\n    constructor(data) {\n        _InternalTransactionReceipt_init.set(this, (status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress = null, type = null) => {\n            this.raw = [status, cumulativeGasUsed, logsBloom, logs];\n            this.contractAddress = contractAddress;\n            this.gasUsed = gasUsed;\n            this.txType = type;\n        });\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            __classPrivateFieldGet(this, _InternalTransactionReceipt_init, \"f\").call(this, decoded[0], decoded[1], decoded[2], decoded[3], decoded[4], decoded[5]);\n        }\n    }\n    static fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type = null) {\n        const receipt = new InternalTransactionReceipt();\n        __classPrivateFieldGet(receipt, _InternalTransactionReceipt_init, \"f\").call(receipt, status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type);\n        return receipt;\n    }\n    serialize(all) {\n        if (this.encoded == null) {\n            this.encoded = (0, rlp_1.encodeRange)(this.raw, 0, 4);\n        }\n        if (all) {\n            // the database format includes gasUsed and the contractAddress:\n            const extras = [\n                this.gasUsed,\n                this.contractAddress\n            ];\n            const epilogue = (0, rlp_1.encodeRange)(extras, 0, 2);\n            return (0, rlp_1.digest)([this.encoded.output, epilogue.output], this.encoded.length + epilogue.length);\n        }\n        else {\n            // receipt trie format:\n            const serialized = (0, rlp_1.digest)([this.encoded.output], this.encoded.length);\n            return this.txType\n                ? Buffer.concat([this.txType.toBuffer(), serialized])\n                : serialized;\n        }\n    }\n    toJSON(transaction, common) {\n        const raw = this.raw;\n        const contractAddress = this.contractAddress.length === 0\n            ? null\n            : utils_1.Data.from(this.contractAddress);\n        const { blockHash, blockNumber } = transaction;\n        const blockLog = ethereum_utils_1.BlockLogs.create(blockHash);\n        const transactionHash = transaction.hash;\n        const transactionIndex = transaction.index;\n        blockLog.blockNumber = blockNumber;\n        raw[3].forEach(l => blockLog.append(transactionIndex, transactionHash, l));\n        const logs = [...blockLog.toJSON()];\n        const json = {\n            transactionHash,\n            transactionIndex,\n            blockNumber,\n            blockHash,\n            from: transaction.from,\n            to: contractAddress ? null : transaction.to,\n            cumulativeGasUsed: utils_1.Quantity.from(raw[1]),\n            gasUsed: utils_1.Quantity.from(this.gasUsed),\n            contractAddress,\n            logs,\n            logsBloom: utils_1.Data.from(raw[2], 256),\n            status: STATUSES[raw[0][0]],\n            effectiveGasPrice: transaction.effectiveGasPrice\n        };\n        if (transaction.type && common.isActivatedEIP(2718)) {\n            json.type = transaction.type;\n        }\n        return json;\n    }\n}\nexports.InternalTransactionReceipt = InternalTransactionReceipt;\n_InternalTransactionReceipt_init = new WeakMap();\n//# sourceMappingURL=transaction-receipt.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieDB = void 0;\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst ENCODING_OPTS = { keyEncoding: \"binary\", valueEncoding: \"binary\" };\n/**\n * `@ethereumjs/trie` requires that any database passed to it implements a `DB`.\n * The `DB` interface defines the minimum set of database access methods that\n * ethereumjs needs internally. We implement that interface in `TrieDB`, as well\n * as a few other methods that we use in Ganache internally.\n */\nclass TrieDB {\n    constructor(db) {\n        this._db = db;\n    }\n    async get(key) {\n        let value = null;\n        try {\n            value = await this._db.get(key, ENCODING_OPTS);\n        }\n        catch (error) {\n            if (error.notFound) {\n                // not found, returning null\n            }\n            else {\n                throw error;\n            }\n        }\n        return value;\n    }\n    async put(key, val) {\n        await this._db.put(key, val, ENCODING_OPTS);\n    }\n    async del(key) {\n        await this._db.del(key, ENCODING_OPTS);\n    }\n    async batch(opStack) {\n        await this._db.batch(opStack, ENCODING_OPTS);\n    }\n    copy() {\n        return new TrieDB(this._db);\n    }\n    async close() {\n        await this._db.close();\n    }\n    sublevel(prefix, options) {\n        return (0, subleveldown_1.default)(this._db, prefix, options);\n    }\n    createReadStream(options) {\n        return this._db.createReadStream(options);\n    }\n}\nexports.TrieDB = TrieDB;\n//# sourceMappingURL=trie-db.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uintToBuffer = void 0;\nconst MAX_UINT32 = 0xffffffff;\n/**\n * This is just Node's `Buffer.allocUnsafe`. I'm documenting it extra here to\n * draw attention to it. It is much faster the `Buffer.alloc(size)` because it\n * doesn't initialize its memory first. It's safe for us to use below because we\n * guarantee that we will fill every octet ourselves.\n *\n * Allocates a new buffer of {size} octets, leaving memory not initialized, so\n * the contents of the newly created Buffer are unknown and may contain\n * sensitive data.\n *\n * @param {number} - size count of octets to allocate\n */\nconst allocUnsafe = Buffer.allocUnsafe;\n/**\n * Converts positive whole numbers that are 32 bits of fewer to a Buffer. Any\n * more bits and who knows what will happen!?!1?!\n *\n * @param num - A positive whole number less than 33 bits wide, i.e. a uint32.\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uint32ToBuf(num) {\n    let buf;\n    /** `lsb` holds the Least Significant *byte* of `num`. It *technically* holds\n     * all of `num`'s bytes but because of how UInt8Arrays (and thus Buffers)\n     * work, only the least significant byte of each value gets used. */\n    const lsb = num;\n    // shift the first 8 least significant bits off current num, if it's non-zero\n    // our value contains at least 2 bytes!\n    if ((num >>>= 8)) {\n        /** `second` now holds the second most least significant byte in its\n         * \"first\" (right most) 8 bits */\n        const second = num;\n        // shift the next 8 least significant bits off current num, if it's non-zero\n        // our value contains at least 3 bytes!\n        if ((num >>>= 8)) {\n            /** `third` now holds the third most least significant byte in its\n             * \"first\" (right most) 8 bits */\n            const third = num;\n            if ((num >>>= 8)) {\n                // since we have all 4 bytes, create a 4 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(4);\n                // `num` here is just what is left after shifting off the 3 other bytes\n                // like we did above\n                buf[0] = num;\n                buf[1] = third;\n                buf[2] = second;\n                buf[3] = lsb;\n            }\n            else {\n                // since we only have 3 bytes, create a 3 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(3);\n                buf[0] = third;\n                buf[1] = second;\n                buf[2] = lsb;\n            }\n        }\n        else {\n            // since we only have 2 bytes, create a 2 byte Buffer and fill it with\n            // our values!\n            buf = allocUnsafe(2);\n            buf[0] = second;\n            buf[1] = lsb;\n        }\n    }\n    else {\n        // We only have 1 byte, create a 1 byte Buffer and fill it with our only\n        // value, lsb!\n        buf = allocUnsafe(1);\n        buf[0] = lsb;\n    }\n    // finally, return our optimally-sized Buffer!\n    return buf;\n}\n/**\n * Converts positive whole numbers less than or equal to\n * `Number.MAX_SAFE_INTEGER` to a Buffer. If your value is less than 2**32 you\n * should use `uint32ToBuf` instead.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uintWideToBuf(num) {\n    // This function is similar to `uint32ToBuf`, but splits the number into its\n    // 32 lowest bits and its 32 highest bits. We have to do this because numeric\n    // Bitwise operations can only operate on 32 bit-wide values.\n    // There are some differences, but if you first grasp `uint32ToBuf`, you can\n    // handle this just fine.\n    let buf;\n    /** If we are in this function we are probably > 32 bits wide, so we need to\n     * first convert this value to BigInt in order to shift off those high bits.\n     * Now that I'm documenting this, we could probably just subtract `2**32` from\n     * `num` to avoid the conversion overhead (BigInts are slower than numbers) */\n    let hi = Number(BigInt(num) >> 32n);\n    const hiLsb = hi;\n    let offset = 0;\n    // the high bits determine the size of the Buffer, so we compute the high bits\n    // first\n    if ((hi >>>= 8)) {\n        const six = hi;\n        if ((hi >>>= 8)) {\n            const five = hi;\n            if ((hi >>>= 8)) {\n                buf = allocUnsafe(8);\n                buf[0] = hi; // msb\n                buf[1] = five;\n                buf[2] = six;\n                buf[3] = hiLsb;\n                offset = 7;\n            }\n            else {\n                buf = allocUnsafe(7);\n                buf[0] = five; // msb\n                buf[1] = six;\n                buf[2] = hiLsb;\n                offset = 6;\n            }\n        }\n        else {\n            buf = allocUnsafe(6);\n            buf[0] = six; // msb\n            buf[1] = hiLsb;\n            offset = 5;\n        }\n    }\n    else {\n        buf = allocUnsafe(5);\n        buf[0] = hiLsb; // msb\n        offset = 4;\n    }\n    // set the low bytes:\n    let lo = num & MAX_UINT32;\n    const lsb = lo;\n    if ((lo >>>= 8)) {\n        const two = lo;\n        if ((lo >>>= 8)) {\n            const one = lo;\n            buf[offset - 3] = lo >>>= 8;\n            buf[offset - 2] = one;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n        else {\n            buf[offset - 3] = 0;\n            buf[offset - 2] = 0;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n    }\n    else {\n        buf[offset - 3] = 0;\n        buf[offset - 2] = 0;\n        buf[offset - 1] = 0;\n        buf[offset] = lsb;\n    }\n    return buf;\n}\n/**\n * Converts a JavaScript number, treated as a Whole Number (0, 1, 2, 3, 4, ...)\n * less than 64 bits wide, to a Buffer.\n *\n * Numbers that are negative, fractional, or greater than 64 bits wide will\n * return very unexpected results. Numbers that are greater than\n * `Number.MAX_SAFE_INTEGER` will return unexpected results.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n */\nfunction uintToBuffer(num) {\n    return num > MAX_UINT32 ? uintWideToBuf(num) : uint32ToBuf(num);\n}\nexports.uintToBuffer = uintToBuffer;\n//# sourceMappingURL=uint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseJsonRpcType = void 0;\nconst input_parsers_1 = require(\"./input-parsers\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nclass BaseJsonRpcType {\n    constructor(value) {\n        if (value == null) {\n            this.bufferValue = null;\n        }\n        else if (Buffer.isBuffer(value)) {\n            // empty buffer should be treated as null\n            this.bufferValue = value.length === 0 ? null : value;\n        }\n        else {\n            switch (typeof value) {\n                case \"string\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateStringInput)(value);\n                    break;\n                case \"number\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateNumberInput)(value);\n                    break;\n                case \"bigint\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateBigIntInput)(value);\n                    break;\n                default:\n                    throw new Error(`Cannot wrap a \"${typeof value}\" as a json-rpc type`);\n            }\n        }\n    }\n    // used to make console.log debugging a little easier\n    [inspect](_depth, _options) {\n        return `[${this.constructor.name}] ${this.toString()}`;\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        return `0x${this.bufferValue.toString(\"hex\")}`;\n    }\n    toBuffer() {\n        return this.bufferValue;\n    }\n    valueOf() {\n        return this.bufferValue;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    isNull() {\n        return this.bufferValue == null;\n    }\n}\nexports.BaseJsonRpcType = BaseJsonRpcType;\n//# sourceMappingURL=json-rpc-base-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodedError = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst REVERT_REASON = Buffer.from(\"08c379a0\", \"hex\"); // keccak(\"Error(string)\").slice(0, 4)\nclass CodedError extends Error {\n    constructor(message, code) {\n        super(message);\n        CodedError.captureStackTraceExtended.bind(this, message);\n        this.code = code;\n    }\n    static from(error, code) {\n        const codedError = new CodedError(error.message, code);\n        codedError.stack = error.stack;\n        return codedError;\n    }\n    static nonEnumerableProperty(value) {\n        // The field `enumerable` is `false` by default.\n        return {\n            value: value,\n            writable: true,\n            configurable: true\n        };\n    }\n    static captureStackTraceExtended(message) {\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            // Generic way to set the error stack trace.\n            Object.defineProperty(this, \"stack\", CodedError.nonEnumerableProperty(Error(message).stack));\n            // Use the `+` operator with an empty string to implicitly type cast the\n            // `message` argument into a string.\n            Object.defineProperty(this, \"message\", CodedError.nonEnumerableProperty(message !== void 0 ? \"\" + message : \"\"));\n        }\n    }\n    static createRevertReason(returnValue) {\n        let reason;\n        if (returnValue.length > 4 &&\n            REVERT_REASON.compare(returnValue, 0, 4) === 0) {\n            try {\n                // it is possible for the `returnValue` to be gibberish that can't be\n                // decoded. See: https://github.com/trufflesuite/ganache/pull/452\n                reason = (0, ethereumjs_abi_1.rawDecode)([\"bytes\"], returnValue.slice(4))[0].toString();\n            }\n            catch {\n                // ignore error since reason string recover is impossible\n                reason = null;\n            }\n        }\n        else {\n            reason = null;\n        }\n        return reason;\n    }\n}\nexports.CodedError = CodedError;\n//# sourceMappingURL=coded-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INSUFFICIENT_FUNDS = exports.TRANSACTION_LOCKED = exports.VM_EXCEPTIONS = exports.VM_EXCEPTION = exports.GAS_LIMIT = exports.INTRINSIC_GAS_TOO_LOW = exports.REPLACED = exports.UNDERPRICED = exports.NONCE_TOO_LOW = exports.INVALID_SENDER = void 0;\n/**\n * Returned if the transaction contains an invalid signature.\n */\nexports.INVALID_SENDER = \"invalid sender\";\n/**\n * Returned if the nonce of a transaction is lower than the one present in the local chain.\n */\nexports.NONCE_TOO_LOW = \"nonce too low\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.UNDERPRICED = \"transaction underpriced\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.REPLACED = \"transaction replaced by better transaction\";\n/**\n * Returned if the transaction is specified to use less gas than required to start the invocation.\n */\nexports.INTRINSIC_GAS_TOO_LOW = \"intrinsic gas too low\";\n/**\n * Returned if a transaction's requested gas limit exceeds the maximum allowance of the current block.\n */\nexports.GAS_LIMIT = \"exceeds block gas limit\";\n/**\n * Prefix for a single VM Exception occurring when running a transaction or block\n */\nexports.VM_EXCEPTION = \"VM Exception while processing transaction: \";\n/**\n * Prefix for multiple VM Exceptions occurring when running transactions or a block\n */\nexports.VM_EXCEPTIONS = \"Multiple VM Exceptions while processing transactions: : \\n\\n\";\n/**\n * Returned if a replacement transaction is sent while the potentially replaced transaction is being mined.\n */\nexports.TRANSACTION_LOCKED = \"transaction can't be replaced, mining has already started. (please open an issue with reproduction steps: https://github.com/trufflesuite/ganache/issues/new)\";\n/**\n * Returned if a transaction may require more funds than than account currently has available.\n */\nexports.INSUFFICIENT_FUNDS = \"insufficient funds for gas * price + value\";\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = exports.calculateIntrinsicGas = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst MAX_UINT64 = 1n << (64n - 1n);\n/**\n * Compute the 'intrinsic gas' for a message with the given data.\n * @param data - The transaction's data\n * @param hasToAddress - boolean,\n * @param common - The Common use to determine gas costs\n * @returns The absolute minimum amount of gas this transaction will consume,\n * or `-1` if the data in invalid (gas consumption would exceed `MAX_UINT64`\n * (`(2n ** 64n) - 1n`).\n */\nconst calculateIntrinsicGas = (data, hasToAddress, common) => {\n    const hardfork = common.hardfork();\n    // Set the starting gas for the raw transaction\n    let gas = params_1.Params.TRANSACTION_GAS;\n    // if it doesn't have a \"to\" address this is a contract creation and it costs\n    // `TRANSACTION_CREATION` more gas.\n    if (!hasToAddress)\n        gas += params_1.Params.TRANSACTION_CREATION;\n    if (data) {\n        const input = data.toBuffer();\n        // Bump the required gas by the amount of transactional data\n        const dataLength = input.byteLength;\n        if (dataLength > 0) {\n            const TRANSACTION_DATA_NON_ZERO_GAS = params_1.Params.TRANSACTION_DATA_NON_ZERO_GAS.get(hardfork);\n            const TRANSACTION_DATA_ZERO_GAS = params_1.Params.TRANSACTION_DATA_ZERO_GAS;\n            // Zero and non-zero bytes are priced differently\n            let nonZeroBytes = 0n;\n            for (const b of input) {\n                if (b !== 0) {\n                    nonZeroBytes++;\n                }\n            }\n            // Make sure we don't exceed uint64 for all data combinations.\n            // TODO: make sure these upper-bound checks are safe to remove, then\n            // remove if so.\n            // Issue: https://github.com/trufflesuite/ganache/issues/3486\n            // NOTE: This is an upper-bounds limit ported from geth that doesn't\n            // make sense for Ethereum, as exceeding the upper bound would require\n            // something like 200+ Petabytes of data.\n            // https://github.com/ethereum/go-ethereum/blob/cf856ea1ad96ac39ea477087822479b63417036a/core/state_transition.go#L106-L141\n            //\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS` is the maximum\n            // number of \"non-zero bytes\" geth can handle.\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS < nonZeroBytes) {\n                return -1n;\n            }\n            gas += nonZeroBytes * TRANSACTION_DATA_NON_ZERO_GAS;\n            const zeroBytes = BigInt(dataLength) - nonZeroBytes;\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS` is the maximum number\n            // of \"zero bytes\" geth can handle after subtracting out the cost of\n            // the \"non-zero bytes\"\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS < zeroBytes) {\n                return -1n;\n            }\n            gas += zeroBytes * TRANSACTION_DATA_ZERO_GAS;\n        }\n    }\n    return gas;\n};\nexports.calculateIntrinsicGas = calculateIntrinsicGas;\nclass BaseTransaction {\n    constructor(common, extra) {\n        this.common = common;\n        if (extra) {\n            this.setExtra(extra);\n        }\n    }\n    setExtra(raw) {\n        const [from, hash, blockHash, blockNumber, index, effectiveGasPrice] = raw;\n        this.from = ethereum_address_1.Address.from(from);\n        this.hash = utils_1.Data.from(hash, 32);\n        this.blockHash = utils_1.Data.from(blockHash, 32);\n        this.blockNumber = utils_1.Quantity.from(blockNumber);\n        this.index = utils_1.Quantity.from(index);\n        this.effectiveGasPrice = utils_1.Quantity.from(effectiveGasPrice);\n    }\n    calculateIntrinsicGas() {\n        const hasToAddress = this.to != null && !this.to.toBuffer().equals(utils_1.BUFFER_EMPTY);\n        return (0, exports.calculateIntrinsicGas)(this.data, hasToAddress, this.common);\n    }\n}\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=base-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = void 0;\nexports.Params = {\n    /**\n     *  Per transaction not creating a contract. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_GAS: 21000n,\n    /**\n     * Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\n     * Ganache supports eth_call and debuging old transactions that should be run\n     * in the context of their original hardfork, so hardforks we don't support\n     * are listed here.\n     */\n    TRANSACTION_DATA_NON_ZERO_GAS: new Map([\n        [\"chainstart\", 68n],\n        [\"homestead\", 68n],\n        [\"dao\", 68n],\n        [\"tangerineWhistle\", 68n],\n        [\"spuriousDragon\", 68n],\n        [\"byzantium\", 68n],\n        [\"constantinople\", 68n],\n        [\"petersburg\", 68n],\n        [\"istanbul\", 16n],\n        [\"muirGlacier\", 16n],\n        [\"berlin\", 16n],\n        [\"london\", 16n],\n        [\"arrowGlacier\", 16n],\n        [\"grayGlacier\", 16n],\n        [\"merge\", 16n]\n    ]),\n    /**\n     * Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_DATA_ZERO_GAS: 4n,\n    /**\n     * Fee for creation a transaction\n     */\n    TRANSACTION_CREATION: 32000n,\n    /**\n     * Gas cost per address in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_ADDRESS_GAS: 2400,\n    /**\n     * Gas cost per storage key in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_STORAGE_KEY_GAS: 1900\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction encode(parts) {\n    const l = parts.length;\n    let totalLength = 0;\n    const pieces = [];\n    for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        if (part === null) {\n            totalLength += 2; // {length of the length} (`1`) + {length} (`0`)\n            pieces.push([utils_1.BUFFER_ZERO, utils_1.BUFFER_EMPTY]);\n        }\n        else {\n            const length = part.length;\n            const lengthBuffer = utils_1.Quantity.toBuffer(length);\n            const lengthLength = lengthBuffer.length;\n            totalLength += 1 + lengthLength + length;\n            pieces.push([lengthBuffer, part]);\n        }\n    }\n    const encoded = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for (let i = 0; i < l; i++) {\n        const [lengthBuffer, part] = pieces[i];\n        const lengthLength = lengthBuffer.length;\n        encoded[offset++] = lengthLength;\n        lengthBuffer.copy(encoded, offset, 0, lengthLength);\n        part.copy(encoded, (offset += lengthLength), 0, part.length);\n        offset += part.length;\n    }\n    return encoded;\n}\nexports.encode = encode;\nfunction decode(encoded) {\n    const parts = [];\n    for (let i = 0, l = encoded.length; i < l;) {\n        const lengthLength = encoded[i++];\n        const length = utils_1.Quantity.from(encoded.slice(i, (i += lengthLength))).toNumber();\n        parts.push(encoded.slice(i, (i += length)));\n    }\n    return parts;\n}\nexports.decode = decode;\n//# sourceMappingURL=lexicographic-key-codec.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors/coded-error\"), exports);\n__exportStar(require(\"./errors/errors\"), exports);\n__exportStar(require(\"./errors/runtime-error\"), exports);\n__exportStar(require(\"./errors/call-error\"), exports);\n__exportStar(require(\"./errors/abort-error\"), exports);\n__exportStar(require(\"./things/account\"), exports);\n__exportStar(require(\"./things/blocklogs\"), exports);\n__exportStar(require(\"./things/tags\"), exports);\n__exportStar(require(\"./things/trace-data\"), exports);\n__exportStar(require(\"./things/trace-storage-map\"), exports);\n__exportStar(require(\"./types/debug-storage\"), exports);\n__exportStar(require(\"./types/extract-values-from-types\"), exports);\n__exportStar(require(\"./types/filters\"), exports);\n__exportStar(require(\"./types/hex-datatypes\"), exports);\n__exportStar(require(\"./types/shh\"), exports);\n__exportStar(require(\"./types/subscriptions\"), exports);\n__exportStar(require(\"./types/trace-transaction\"), exports);\n__exportStar(require(\"./types/tuple-from-union\"), exports);\n__exportStar(require(\"./types/account-proof\"), exports);\n__exportStar(require(\"./types/fee-history\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bigint-to-buffer\"), exports);\n__exportStar(require(\"./buffer-to-bigint\"), exports);\n__exportStar(require(\"./executor\"), exports);\n__exportStar(require(\"./heap\"), exports);\n__exportStar(require(\"./request-coordinator\"), exports);\n__exportStar(require(\"./unref\"), exports);\n__exportStar(require(\"./has-own\"), exports);\n__exportStar(require(\"./uint-to-buffer\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./buffer-to-key\"), exports);\n__exportStar(require(\"./keccak\"), exports);\n__exportStar(require(\"./find-insert-position\"), exports);\n__exportStar(require(\"./random-number-generator\"), exports);\n__exportStar(require(\"./min-max\"), exports);\n__exportStar(require(\"./signature\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Blockchain_state, _Blockchain_miner, _Blockchain_blockBeingSavedPromise, _Blockchain_timer, _Blockchain_emitStepEvent, _Blockchain_database, _Blockchain_options, _Blockchain_instamine, _Blockchain_saveNewBlock, _Blockchain_emitNewBlock, _Blockchain_getTransactionLogOutput, _Blockchain_handleNewBlockData, _Blockchain_readyNextBlock, _Blockchain_isPaused, _Blockchain_commitAccounts, _Blockchain_initializeGenesisBlock, _Blockchain_timeAdjustment, _Blockchain_adjustedTime, _Blockchain_deleteBlockData, _Blockchain_snapshots, _Blockchain_traceTransaction, _Blockchain_prepareNextBlock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst os_1 = require(\"os\");\nconst miner_1 = __importStar(require(\"./miner/miner\"));\nconst database_1 = __importDefault(require(\"./database\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst common_1 = require(\"@ethereumjs/common\");\nconst vm_1 = require(\"@ethereumjs/vm\");\nconst evm_1 = require(\"@ethereumjs/evm\");\nconst utils_1 = require(\"@ganache/utils\");\nconst account_manager_1 = __importDefault(require(\"./data-managers/account-manager\"));\nconst block_manager_1 = __importDefault(require(\"./data-managers/block-manager\"));\nconst blocklog_manager_1 = __importDefault(require(\"./data-managers/blocklog-manager\"));\nconst transaction_manager_1 = __importDefault(require(\"./data-managers/transaction-manager\"));\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst run_call_1 = require(\"./helpers/run-call\");\nconst state_manager_1 = require(\"./forking/state-manager\");\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nconst trie_1 = require(\"./helpers/trie\");\nconst trie_2 = require(\"./forking/trie\");\nconst precompiles_1 = require(\"./helpers/precompiles\");\nconst transaction_receipt_manager_1 = __importDefault(require(\"./data-managers/transaction-receipt-manager\"));\nconst provider_events_1 = require(\"./provider-events\");\nconst mcl_wasm_1 = __importDefault(require(\"mcl-wasm\"));\nconst console_log_1 = require(\"@ganache/console.log\");\nconst mclInitPromise = mcl_wasm_1.default.init(mcl_wasm_1.default.BLS12_381).then(() => {\n    mcl_wasm_1.default.setMapToMode(mcl_wasm_1.default.IRTF); // set the right map mode; otherwise mapToG2 will return wrong values.\n    mcl_wasm_1.default.verifyOrderG1(true); // subgroup checks for G1\n    mcl_wasm_1.default.verifyOrderG2(true); // subgroup checks for G2\n});\nvar Status;\n(function (Status) {\n    // Flags\n    Status[Status[\"started\"] = 1] = \"started\";\n    Status[Status[\"starting\"] = 2] = \"starting\";\n    Status[Status[\"stopped\"] = 4] = \"stopped\";\n    Status[Status[\"stopping\"] = 8] = \"stopping\";\n    Status[Status[\"paused\"] = 16] = \"paused\"; // 0001 0000\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * Sets the provided VM state manager's state root *without* first\n * checking for checkpoints or flushing the existing cache.\n *\n * Useful if you know the state manager is not in a checkpoint and its internal\n * cache is safe to discard.\n *\n * @param stateManager -\n * @param stateRoot -\n */\nfunction setStateRootSync(stateManager, stateRoot) {\n    stateManager._trie.root(stateRoot);\n    stateManager._cache.clear();\n    stateManager._storageTries = {};\n}\nfunction makeTrie(blockchain, trieDB, root) {\n    if (blockchain.fallback) {\n        return new trie_2.ForkTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n    else {\n        return new trie_1.GanacheTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n}\nfunction createCommon(chainId, networkId, hardfork) {\n    const common = common_1.Common.custom({\n        name: \"ganache\",\n        networkId: networkId,\n        chainId: chainId,\n        comment: \"Local test network\",\n        defaultHardfork: hardfork\n    }, \n    // if we were given a chain id that matches a real chain, use it\n    // NOTE: I don't think Common serves a purpose other than instructing the\n    // VM what hardfork is in use. But just incase things change in the future\n    // its configured \"more correctly\" here.\n    { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n    // the VM likes to listen to \"hardforkChanged\" events from common, but:\n    //  a) we don't currently support changing hardforks\n    //  b) it can cause `MaxListenersExceededWarning`.\n    // Since we don't need it we overwrite .on to make it be quiet.\n    common.on = () => { };\n    return common;\n}\nclass Blockchain extends emittery_1.default {\n    /**\n     * Initializes the underlying Database and handles synchronization between\n     * the API and the database.\n     *\n     * Emits a `ready` event once the database and all dependencies are fully\n     * initialized.\n     * @param options -\n     */\n    constructor(options, coinbase, fallback) {\n        super();\n        _Blockchain_state.set(this, Status.starting);\n        _Blockchain_miner.set(this, void 0);\n        _Blockchain_blockBeingSavedPromise.set(this, void 0);\n        /**\n         * When not instamining (blockTime > 0) this value holds the timeout timer.\n         */\n        _Blockchain_timer.set(this, null);\n        /**\n         * Because step events are expensive to create and emit, CPU-wise, we do it\n         * conditionally.\n         */\n        _Blockchain_emitStepEvent.set(this, false);\n        _Blockchain_database.set(this, void 0);\n        _Blockchain_options.set(this, void 0);\n        _Blockchain_instamine.set(this, void 0);\n        _Blockchain_saveNewBlock.set(this, ({ block, serialized, storageKeys, transactions }) => {\n            const { blocks } = this;\n            blocks.latest = block;\n            return __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const blockHash = block.hash();\n                const blockHeader = block.header;\n                const blockNumberQ = blockHeader.number;\n                const blockNumber = blockNumberQ.toBuffer();\n                const blockLogs = ethereum_utils_1.BlockLogs.create(blockHash);\n                const timestamp = blockHeader.timestamp;\n                const timestampStr = new Date(timestamp.toNumber() * 1000).toString();\n                const logOutput = [];\n                transactions.forEach((tx, i) => {\n                    const hash = tx.hash.toBuffer();\n                    const index = utils_1.Quantity.from(i);\n                    // save transaction to the database\n                    const serialized = tx.serializeForDb(blockHash, blockNumberQ, index);\n                    this.transactions.set(hash, serialized);\n                    // save receipt to the database\n                    const receipt = tx.getReceipt();\n                    const encodedReceipt = receipt.serialize(true);\n                    this.transactionReceipts.set(hash, encodedReceipt);\n                    // collect block logs\n                    tx.getLogs().forEach(blockLogs.append.bind(blockLogs, index, tx.hash));\n                    // prepare log output\n                    logOutput.push(__classPrivateFieldGet(this, _Blockchain_getTransactionLogOutput, \"f\").call(this, hash, receipt, blockHeader.number, timestampStr, tx.execException));\n                });\n                // save storage keys to the database\n                storageKeys.forEach(value => {\n                    this.storageKeys.put(value.hashedKey, value.key);\n                });\n                blockLogs.blockNumber = blockHeader.number;\n                // save block logs to the database\n                this.blockLogs.set(blockNumber, blockLogs.serialize());\n                // save block to the database\n                blocks.putBlock(blockNumber, blockHash, serialized);\n                // update the \"latest\" index\n                blocks.updateLatestIndex(blockNumber);\n                // output to the log, if we have data to output\n                if (logOutput.length > 0)\n                    __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(logOutput.join(os_1.EOL));\n                return { block, blockLogs, transactions };\n            });\n        });\n        /**\n         * Emit the block now that everything has been fully saved to the database\n         */\n        _Blockchain_emitNewBlock.set(this, async (blockInfo) => {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const { block, blockLogs, transactions } = blockInfo;\n            transactions.forEach(transaction => {\n                transaction.finalize(\"confirmed\", transaction.execException);\n            });\n            if (options.miner.instamine === \"eager\") {\n                // in eager instamine mode we must delay the broadcast of new blocks\n                await new Promise(resolve => {\n                    // we delay emitting blocks and blockLogs because we need to allow for:\n                    // ```\n                    //  await provider.request({\"method\": \"eth_sendTransaction\"...)\n                    //  await provider.once(\"message\") // <- should work\n                    // ```\n                    // If we don't have this delay here the messages will be sent before\n                    // the call has a chance to listen to the event.\n                    setImmediate(async () => {\n                        // emit block logs first so filters can pick them up before\n                        // block listeners are notified\n                        await Promise.all([\n                            this.emit(\"blockLogs\", blockLogs),\n                            this.emit(\"block\", block)\n                        ]);\n                        resolve(void 0);\n                    });\n                });\n            }\n            else {\n                // emit block logs first so filters can pick them up before\n                // block listeners are notified\n                await Promise.all([\n                    this.emit(\"blockLogs\", blockLogs),\n                    this.emit(\"block\", block)\n                ]);\n            }\n            return blockInfo;\n        });\n        _Blockchain_getTransactionLogOutput.set(this, (hash, receipt, blockNumber, timestamp, error) => {\n            let str = `${os_1.EOL}  Transaction: ${utils_1.Data.from(hash)}${os_1.EOL}`;\n            const contractAddress = receipt.contractAddress;\n            if (contractAddress != null) {\n                str += `  Contract created: ${ethereum_address_1.Address.from(contractAddress)}${os_1.EOL}`;\n            }\n            str += `  Gas usage: ${utils_1.Quantity.toNumber(receipt.raw[1])}\n  Block number: ${blockNumber.toNumber()}\n  Block time: ${timestamp}${os_1.EOL}`;\n            if (error) {\n                str += `  Runtime error: ${error.data.message}${os_1.EOL}`;\n                if (error.data.reason) {\n                    str += `  Revert reason: ${error.data.reason}${os_1.EOL}`;\n                }\n            }\n            return str;\n        });\n        _Blockchain_handleNewBlockData.set(this, async (blockData) => {\n            __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(() => {\n                const saveBlockProm = __classPrivateFieldGet(this, _Blockchain_saveNewBlock, \"f\").call(this, blockData);\n                saveBlockProm.then(__classPrivateFieldGet(this, _Blockchain_emitNewBlock, \"f\"));\n                // blockBeingSavedPromise should await the block being _saved_, but doesn't\n                // need to await the block being emitted.\n                return saveBlockProm;\n            }), \"f\");\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        });\n        _Blockchain_readyNextBlock.set(this, (previousBlock, timestamp) => {\n            const previousHeader = previousBlock.header;\n            const previousNumber = previousHeader.number.toBigInt() || 0n;\n            const minerOptions = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner;\n            if (timestamp == null) {\n                timestamp = __classPrivateFieldGet(this, _Blockchain_adjustedTime, \"f\").call(this, previousHeader.timestamp);\n            }\n            return new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from(previousNumber + 1n), previousBlock.hash(), this.coinbase, minerOptions.blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, previousHeader.totalDifficulty, this.getMixHash(previousBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(previousBlock));\n        });\n        this.isStarted = () => {\n            return __classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.started;\n        };\n        this.mine = async (maxTransactions, onlyOneBlock = false, timestamp) => {\n            const nextBlock = __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\").call(this, this.blocks.latest, timestamp);\n            const transactions = await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").mine(nextBlock, maxTransactions, onlyOneBlock);\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n            if (__classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement !== \"clock\") {\n                // if block time is incremental, adjustments should only apply once,\n                // otherwise they accumulate with each block.\n                __classPrivateFieldSet(this, _Blockchain_timeAdjustment, 0, \"f\");\n            }\n            else if (timestamp !== undefined) {\n                // when miner.timestampIncrement is a number, the previous block timestamp\n                // is used as a reference for the next block, so this call is not\n                // required.\n                this.setTimeDiff(timestamp * 1000);\n            }\n            return {\n                transactions,\n                blockNumber: nextBlock.header.number\n            };\n        };\n        _Blockchain_isPaused.set(this, () => {\n            return (__classPrivateFieldGet(this, _Blockchain_state, \"f\") & Status.paused) !== 0;\n        });\n        this.createVmFromStateTrie = async (stateTrie, allowUnlimitedContractSize, activatePrecompile, common) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            // ethereumjs-vm wants to \"copy\" the blockchain when `vm.copy` is called.\n            blockchain.copy = () => {\n                return blockchain;\n            };\n            common = common || this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: stateTrie,\n                    prefixCodeHashes: false\n                })\n                : new statemanager_1.DefaultStateManager({ trie: stateTrie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({ common, allowUnlimitedContractSize, eei });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            if (activatePrecompile) {\n                await (0, precompiles_1.activatePrecompiles)(vm.eei);\n                if (common.isActivatedEIP(2537)) {\n                    // BLS12-381 curve, not yet included in any supported hardforks\n                    // but probably will be in the Shanghai hardfork\n                    // TODO: remove above comment once Shanghai is supported!\n                    await mclInitPromise; // ensure that mcl is initialized!\n                }\n            }\n            // skip `vm.init`, since we don't use any of it\n            vm._isInitialized = true;\n            return vm;\n        };\n        _Blockchain_commitAccounts.set(this, (accounts) => {\n            return Promise.all(accounts.map(account => this.trie.put(account.address.toBuffer(), account.serialize())));\n        });\n        _Blockchain_initializeGenesisBlock.set(this, async (timestamp, blockGasLimit, initialAccounts) => {\n            if (this.fallback != null) {\n                const { block: fallbackBlock } = this.fallback;\n                const { miner: minerOptions } = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n                // commit accounts, but for forking.\n                const stateManager = this.vm.stateManager;\n                await stateManager.checkpoint();\n                initialAccounts.forEach(account => {\n                    this.vm.eei.putAccount(account.address, account);\n                });\n                await stateManager.commit();\n                // create the genesis block\n                let baseFeePerGas;\n                if (this.common.isActivatedEIP(1559)) {\n                    if (fallbackBlock.header.baseFeePerGas === undefined) {\n                        baseFeePerGas = ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS;\n                    }\n                    else {\n                        baseFeePerGas = fallbackBlock.header.baseFeePerGas.toBigInt();\n                    }\n                }\n                const genesis = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from(fallbackBlock.header.number.toBigInt() + 1n), fallbackBlock.hash(), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, fallbackBlock.header.totalDifficulty, this.getMixHash(fallbackBlock.hash().toBuffer()), baseFeePerGas);\n                // store the genesis block in the database\n                const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, minerOptions.extraData, [], new Map());\n                const hash = block.hash();\n                return this.blocks\n                    .putBlock(block.header.number.toBuffer(), hash, serialized)\n                    .then(_ => ({\n                    block,\n                    blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n                }));\n            }\n            await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n            // README: block `0` is weird in that a `0` _should_ be hashed as `[]`,\n            // instead of `[0]`, so we set it to `Quantity.Empty` instead of\n            // `Quantity.Zero` here. A few lines down in this function we swap\n            // this `Quantity.Empty` for `Quantity.Zero`. This is all so we don't\n            // have to have a \"treat empty as 0` check in every function that uses the\n            // \"latest\" block (which this genesis block will be for brief moment).\n            const rawBlockNumber = utils_1.Quantity.Empty;\n            // create the genesis block\n            const baseFeePerGas = this.common.isActivatedEIP(1559)\n                ? ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS\n                : undefined;\n            const genesis = new ethereum_block_1.RuntimeBlock(rawBlockNumber, utils_1.Data.from(utils_1.BUFFER_32_ZERO), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, utils_1.Quantity.Zero, // we start the totalDifficulty at 0\n            // we use the initial trie root as the genesis block's mixHash as it\n            // is deterministic based on initial wallet conditions\n            this.isPostMerge ? (0, utils_1.keccak)(this.trie.root()) : utils_1.BUFFER_32_ZERO, baseFeePerGas);\n            // store the genesis block in the database\n            const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.extraData, [], new Map());\n            // README: set the block number to an actual 0 now.\n            block.header.number = utils_1.Quantity.Zero;\n            const hash = block.hash();\n            return this.blocks\n                .putBlock(block.header.number.toBuffer(), hash, serialized)\n                .then(_ => ({\n                block,\n                blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n            }));\n        });\n        /**\n         * The number of milliseconds time should be adjusted by when computing the\n         * \"time\" for a block.\n         */\n        _Blockchain_timeAdjustment.set(this, 0);\n        /**\n         * Returns the timestamp, adjusted by the timeAdjustment offset, in seconds.\n         * @param precedingTimestamp - the timestamp of the block to be used as the\n         * time source if `timestampIncrement` is not \"clock\".\n         */\n        _Blockchain_adjustedTime.set(this, (precedingTimestamp) => {\n            const timeAdjustment = __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\");\n            const timestampIncrement = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement;\n            if (timestampIncrement === \"clock\") {\n                return Math.floor((Date.now() + timeAdjustment) / 1000);\n            }\n            else {\n                return (precedingTimestamp.toNumber() +\n                    Math.floor(timeAdjustment / 1000) +\n                    timestampIncrement.toNumber());\n            }\n        });\n        _Blockchain_deleteBlockData.set(this, async (blocksToDelete, newLatestBlockNumber) => {\n            // if we are forking we need to make sure we clean up the forking related\n            // metadata that isn't stored in the trie\n            if (\"revertMetaData\" in this.trie) {\n                await this.trie.revertMetaData(blocksToDelete[blocksToDelete.length - 1].header.number, blocksToDelete[0].header.number);\n            }\n            await __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const { blocks, transactions, transactionReceipts, blockLogs } = this;\n                // point to the new \"latest\" again\n                blocks.updateLatestIndex(newLatestBlockNumber);\n                // clean up old blocks\n                blocksToDelete.forEach(block => {\n                    block.getTransactions().forEach(tx => {\n                        const txHash = tx.hash.toBuffer();\n                        transactions.del(txHash);\n                        transactionReceipts.del(txHash);\n                    });\n                    const blockNum = block.header.number.toBuffer();\n                    blocks.del(blockNum);\n                    blocks.del(block.hash().toBuffer());\n                    blockLogs.del(blockNum);\n                });\n            });\n        });\n        // TODO(stability): this.#snapshots is a potential unbound memory suck. Caller\n        // could call `evm_snapshot` over and over to grow the snapshot stack\n        // indefinitely. `this.#snapshots.blocks` is even worse. To solve this we\n        // might need to store in the db. An unlikely real problem, but possible.\n        _Blockchain_snapshots.set(this, {\n            snaps: [],\n            blocks: null,\n            unsubscribeFromBlocks: null\n        });\n        _Blockchain_traceTransaction.set(this, async (transaction, trie, newBlock, options, keys, contractAddress) => {\n            let currentDepth = -1;\n            const storageStack = [];\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            const common = this.fallback\n                ? this.fallback.getCommonForBlockNumber(this.common, BigInt(newBlock.header.number.toString()))\n                : this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: trie,\n                    prefixCodeHashes: false\n                })\n                : new statemanager_1.DefaultStateManager({ trie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({\n                common,\n                allowUnlimitedContractSize: __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.allowUnlimitedContractSize,\n                eei\n            });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            const storage = {};\n            let gas = 0n;\n            const structLogs = [];\n            const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n            const transactionEventContext = {};\n            const stepListener = async (event, next) => {\n                // See these docs:\n                // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\n                if (__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\")) {\n                    this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(transactionEventContext, event));\n                }\n                const gasLeft = event.gasLeft;\n                const totalGasUsedAfterThisStep = transaction.gasLimit - gasLeft;\n                const gasUsedPreviousStep = totalGasUsedAfterThisStep - gas;\n                gas += gasUsedPreviousStep;\n                const memory = [];\n                if (options.disableMemory !== true) {\n                    // We get the memory as one large array.\n                    // Let's cut it up into 32 byte chunks as required by the spec.\n                    let index = 0;\n                    while (index < event.memory.length) {\n                        const slice = event.memory.slice(index, index + 32);\n                        memory.push(TraceData.from(Buffer.from(slice)));\n                        index += 32;\n                    }\n                }\n                const stack = [];\n                if (options.disableStack !== true) {\n                    for (const stackItem of event.stack) {\n                        stack.push(TraceData.from(utils_1.Quantity.toBuffer(stackItem)));\n                    }\n                }\n                const structLog = {\n                    depth: event.depth + 1,\n                    error: \"\",\n                    gas: utils_1.Quantity.from(gasLeft),\n                    gasCost: 0,\n                    memory,\n                    op: event.opcode.name,\n                    pc: event.pc,\n                    stack,\n                    storage: null\n                };\n                // The gas difference calculated for each step is indicative of gas consumed in\n                // the previous step. Gas consumption in the final step will always be zero.\n                if (structLogs.length) {\n                    structLogs[structLogs.length - 1].gasCost = Number(gasUsedPreviousStep);\n                }\n                if (options.disableStorage === true) {\n                    // Add the struct log as is - nothing more to do.\n                    structLogs.push(structLog);\n                    next();\n                }\n                else {\n                    const { depth: eventDepth } = event;\n                    if (currentDepth > eventDepth) {\n                        storageStack.pop();\n                    }\n                    else if (currentDepth < eventDepth) {\n                        storageStack.push(new ethereum_utils_1.TraceStorageMap());\n                    }\n                    currentDepth = eventDepth;\n                    switch (event.opcode.name) {\n                        case \"SSTORE\": {\n                            const key = stack[stack.length - 1];\n                            const value = stack[stack.length - 2];\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            // Tell vm to move on to the next instruction. See below.\n                            structLogs.push(structLog);\n                            next();\n                            // assign after callback because this storage change actually takes\n                            // effect _after_ this opcode executes\n                            storageStack[eventDepth].set(key, value);\n                            break;\n                        }\n                        case \"SLOAD\": {\n                            const key = stack[stack.length - 1];\n                            const result = await vm.stateManager.getContractStorage(event.address, key.toBuffer());\n                            const value = TraceData.from(result);\n                            storageStack[eventDepth].set(key, value);\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                            break;\n                        }\n                        default:\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                    }\n                }\n            };\n            // Don't even let the vm try to flush the block's _cache to the stateTrie.\n            // When forking some of the data that the traced function may request will\n            // exist only on the main chain. Because we pretty much lie to the VM by\n            // telling it we DO have data in our Trie, when we really don't, it gets\n            // lost during the commit phase when it traverses the \"borrowed\" datum's\n            // trie (as it may not have a valid root). Because this is a trace, and we\n            // don't need to commit the data, duck punching the `flush` method (the\n            // simplest method I could find) is fine.\n            // Remove this and you may see the infamous\n            // `Uncaught TypeError: Cannot read property 'pop' of undefined` error!\n            vm.stateManager._cache.flush = async () => { };\n            // Process the block without committing the data.\n            // The vmerr key on the result appears to be removed.\n            // The previous implementation had specific error handling.\n            // It's possible we've removed handling specific cases in this implementation.\n            // e.g., the previous incantation of RuntimeError\n            await vm.stateManager.checkpoint();\n            try {\n                for (let i = 0, l = newBlock.transactions.length; i < l; i++) {\n                    const tx = newBlock.transactions[i];\n                    if (tx === transaction) {\n                        if (keys && contractAddress) {\n                            const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n                            await Promise.all(keys.map(async (key) => {\n                                // get the raw key using the hashed key\n                                const rawKey = await database.storageKeys.get(key);\n                                const result = await vm.stateManager.getContractStorage(new ethereum_address_1.Address(contractAddress), rawKey);\n                                storage[utils_1.Data.toString(key, key.length)] = {\n                                    key: utils_1.Data.from(rawKey, rawKey.length),\n                                    value: utils_1.Data.from(result, 32)\n                                };\n                            }));\n                            break;\n                        }\n                        else {\n                            vm.evm.events.on(\"step\", stepListener);\n                            // force the loop to break after running this transaction by setting\n                            // the current iteration past the end\n                            i = l;\n                        }\n                    }\n                    this.emit(\"ganache:vm:tx:before\", {\n                        context: transactionEventContext\n                    });\n                    await vm.runTx({ tx, block: newBlock });\n                    this.emit(\"ganache:vm:tx:after\", {\n                        context: transactionEventContext\n                    });\n                }\n                vm.evm.events.removeListener(\"step\", stepListener);\n            }\n            finally {\n                await vm.stateManager.revert();\n            }\n            // send state results back\n            return {\n                gas: utils_1.Quantity.from(gas),\n                structLogs,\n                returnValue: \"\",\n                storage\n            };\n        });\n        _Blockchain_prepareNextBlock.set(this, (targetBlock, parentBlock, transactionHash) => {\n            // Prepare the \"next\" block with necessary transactions\n            const newBlock = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from((parentBlock.header.number.toBigInt() || 0n) + 1n), parentBlock.hash(), ethereum_address_1.Address.from(parentBlock.header.miner.toString()), parentBlock.header.gasLimit, utils_1.Quantity.Zero, \n            // make sure we use the same timestamp as the target block\n            targetBlock.header.timestamp, this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, parentBlock.header.totalDifficulty, this.getMixHash(parentBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(parentBlock));\n            newBlock.transactions = [];\n            newBlock.uncleHeaders = [];\n            const transactions = targetBlock.getTransactions();\n            for (const tx of transactions) {\n                newBlock.transactions.push(tx.toVmTransaction());\n                // After including the target transaction, that's all we need to do.\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    break;\n                }\n            }\n            return newBlock;\n        });\n        __classPrivateFieldSet(this, _Blockchain_options, options, \"f\");\n        this.fallback = fallback;\n        this.coinbase = coinbase;\n        __classPrivateFieldSet(this, _Blockchain_instamine, !options.miner.blockTime || options.miner.blockTime <= 0, \"f\");\n        __classPrivateFieldSet(this, _Blockchain_database, new database_1.default(options.database, this), \"f\");\n    }\n    async initialize(initialAccounts) {\n        const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        try {\n            let common;\n            if (this.fallback) {\n                await this.fallback.initialize();\n                await database.initialize();\n                common = this.common = this.fallback.common;\n                options.fork.blockNumber = this.fallback.blockNumber.toNumber();\n                options.chain.networkId = Number(common.networkId());\n                options.chain.chainId = Number(common.chainId());\n            }\n            else {\n                await database.initialize();\n                common = this.common = createCommon(options.chain.chainId, options.chain.networkId, options.chain.hardfork);\n            }\n            this.isPostMerge = this.common.gteHardfork(\"merge\");\n            const blocks = (this.blocks = await block_manager_1.default.initialize(this, common, database.blockIndexes, database.blocks));\n            this.blockLogs = new blocklog_manager_1.default(database.blockLogs, this);\n            this.transactions = new transaction_manager_1.default(options.miner, common, this, database.transactions);\n            this.transactionReceipts = new transaction_receipt_manager_1.default(database.transactionReceipts, this);\n            this.accounts = new account_manager_1.default(this);\n            this.storageKeys = database.storageKeys;\n            // if we have a latest block, use it to set up the trie.\n            const { latest } = blocks;\n            {\n                let stateRoot;\n                if (latest) {\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, Promise.resolve({\n                        block: latest,\n                        blockLogs: null\n                    }), \"f\");\n                    ({ stateRoot } = latest.header);\n                }\n                else {\n                    stateRoot = null;\n                }\n                this.trie = makeTrie(this, database.trie, stateRoot);\n            }\n            // create VM and listen to step events\n            this.vm = await this.createVmFromStateTrie(this.trie, options.chain.allowUnlimitedContractSize, true);\n            {\n                // Grab current time once to be used in all references to \"now\", to avoid\n                // any discrepancies. See https://github.com/trufflesuite/ganache/issues/3271\n                const startTime = new Date();\n                // if we don't have a time from the user get one now\n                if (options.chain.time == null)\n                    options.chain.time = startTime;\n                // create first block\n                const timestamp = options.chain.time.getTime();\n                const firstBlockTime = Math.floor(timestamp / 1000);\n                // if we are using clock time we need to record the time offset so\n                // other blocks can have timestamps relative to our initial time.\n                if (options.miner.timestampIncrement === \"clock\") {\n                    __classPrivateFieldSet(this, _Blockchain_timeAdjustment, timestamp - +startTime, \"f\");\n                }\n                // if we don't already have a latest block, create a genesis block!\n                if (!latest) {\n                    if (initialAccounts.length > 0) {\n                        await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n                    }\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_initializeGenesisBlock, \"f\").call(this, firstBlockTime, options.miner.blockGasLimit, initialAccounts), \"f\");\n                    blocks.earliest = blocks.latest =\n                        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(({ block }) => block);\n                }\n            }\n            {\n                // configure and start miner\n                const txPool = this.transactions.transactionPool;\n                const minerOpts = options.miner;\n                const miner = (__classPrivateFieldSet(this, _Blockchain_miner, new miner_1.default(minerOpts, txPool.executables, this.vm, __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\")), \"f\"));\n                //#region re-emit miner events:\n                miner.on(\"ganache:vm:tx:before\", event => {\n                    this.emit(\"ganache:vm:tx:before\", event);\n                });\n                miner.on(\"ganache:vm:tx:step\", event => {\n                    if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                        return;\n                    this.emit(\"ganache:vm:tx:step\", event);\n                });\n                miner.on(\"ganache:vm:tx:after\", event => {\n                    this.emit(\"ganache:vm:tx:after\", event);\n                });\n                miner.on(\"ganache:vm:tx:console.log\", event => {\n                    options.logging.logger.log(...event.logs);\n                    this.emit(\"ganache:vm:tx:console.log\", event);\n                });\n                //#endregion\n                //#region automatic mining\n                const nullResolved = Promise.resolve(null);\n                const mineAll = (maxTransactions, onlyOneBlock) => __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)\n                    ? nullResolved\n                    : this.mine(maxTransactions, onlyOneBlock);\n                if (instamine) {\n                    // insta mining\n                    // whenever the transaction pool is drained mine the txs into blocks\n                    // only one transaction should be added per block\n                    txPool.on(\"drain\", mineAll.bind(null, miner_1.Capacity.Single));\n                }\n                else {\n                    // interval mining\n                    const wait = () => (__classPrivateFieldSet(this, _Blockchain_timer, setTimeout(next, minerOpts.blockTime * 1e3), \"f\"));\n                    // when interval mining, only one block should be mined. the block\n                    // can, however, be filled\n                    const next = () => {\n                        mineAll(miner_1.Capacity.FillBlock, true).then(wait);\n                    };\n                    wait();\n                }\n                //#endregion\n                miner.on(\"block\", __classPrivateFieldGet(this, _Blockchain_handleNewBlockData, \"f\"));\n                this.once(\"stop\").then(() => miner.clearListeners());\n            }\n        }\n        catch (e) {\n            // we failed to start up :-( bail!\n            __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n            // ignore errors while stopping here, since we are already in an\n            // exceptional case\n            await this.stop().catch(_ => { });\n            throw e;\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.started, \"f\");\n        this.emit(\"ready\");\n    }\n    getMixHash(data) {\n        // mixHash is used as an RNG post merge hardfork\n        return this.isPostMerge ? (0, utils_1.keccak)(data) : utils_1.BUFFER_32_ZERO;\n    }\n    pause() {\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") | Status.paused, \"f\");\n    }\n    resume(_threads = 1) {\n        if (!__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Warning: startMining called when miner was already started\");\n            return;\n        }\n        // toggles the `paused` bit\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") ^ Status.paused, \"f\");\n        // if we are instamining mine a block right away\n        if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return this.mine(miner_1.Capacity.FillBlock);\n        }\n    }\n    /**\n     * @param milliseconds - the number of milliseconds to adjust the time by.\n     * Negative numbers are treated as 0.\n     * @returns the total time offset *in milliseconds*\n     */\n    increaseTime(milliseconds) {\n        if (milliseconds < 0) {\n            milliseconds = 0;\n        }\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\") + milliseconds, \"f\"));\n    }\n    /**\n     * Adjusts the internal time adjustment such that the provided time is considered the \"current\" time.\n     * @param newTime - the time (in milliseconds) that will be considered the \"current\" time\n     * @returns the total time offset *in milliseconds*\n     */\n    setTimeDiff(newTime) {\n        // when using clock time use Date.now(), otherwise use the timestamp of the\n        // current latest block\n        const currentTime = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement === \"clock\"\n            ? Date.now()\n            : this.blocks.latest.header.timestamp.toNumber() * 1000;\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, newTime - currentTime, \"f\"));\n    }\n    snapshot() {\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        // Subscription ids are based on the number of active snapshots. Weird? Yes.\n        // But it's the way it's been since the beginning so it just hasn't been\n        // changed. Feel free to change it so ids are unique if it bothers you\n        // enough.\n        const id = snaps.push({\n            block: this.blocks.latest,\n            timeAdjustment: __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\")\n        });\n        // start listening to new blocks if this is the first snapshot\n        if (id === 1) {\n            snapshots.unsubscribeFromBlocks = this.on(\"block\", block => {\n                snapshots.blocks = {\n                    current: block.hash().toBuffer(),\n                    next: snapshots.blocks\n                };\n            });\n        }\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Saved snapshot #\" + id);\n        return id;\n    }\n    async revert(snapshotId) {\n        if (snapshotId.isNull()) {\n            throw new Error(\"invalid snapshotId\");\n        }\n        const rawValue = snapshotId.toBigInt();\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Reverting to snapshot #\" + snapshotId);\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        const snapshotIndex = Number(rawValue - 1n);\n        const snapshot = snaps[snapshotIndex];\n        if (!snapshot) {\n            return false;\n        }\n        // pause processing new transactions...\n        await this.transactions.pause();\n        // then pause the miner, too.\n        await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause();\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        // Pending transactions are always removed when you revert, even if they\n        // were present before the snapshot was created. Ideally, we'd remove only\n        // the new transactions.. but we'll leave that for another day.\n        this.transactions.clear();\n        const blocks = this.blocks;\n        const currentHash = blocks.latest.hash().toBuffer();\n        const snapshotBlock = snapshot.block;\n        const snapshotHeader = snapshotBlock.header;\n        const snapshotHash = snapshotBlock.hash().toBuffer();\n        // remove this and all stored snapshots after this snapshot\n        snaps.splice(snapshotIndex);\n        // if there are no more listeners, stop listening to new blocks\n        if (snaps.length === 0) {\n            snapshots.unsubscribeFromBlocks();\n        }\n        // if the snapshot's hash is different than the latest block's hash we've\n        // got new blocks to clean up.\n        if (!currentHash.equals(snapshotHash)) {\n            // if we've added blocks since we snapshotted we need to delete them and put\n            // some things back the way they were.\n            const blockPromises = [];\n            let blockList = snapshots.blocks;\n            while (blockList !== null) {\n                if (blockList.current.equals(snapshotHash))\n                    break;\n                blockPromises.push(blocks.getByHash(blockList.current));\n                blockList = blockList.next;\n            }\n            snapshots.blocks = blockList;\n            const blockData = await Promise.all(blockPromises);\n            await __classPrivateFieldGet(this, _Blockchain_deleteBlockData, \"f\").call(this, blockData, snapshotHeader.number.toBuffer());\n            setStateRootSync(this.vm.stateManager, snapshotHeader.stateRoot.toBuffer());\n            blocks.latest = snapshotBlock;\n        }\n        // put our time adjustment back\n        __classPrivateFieldSet(this, _Blockchain_timeAdjustment, snapshot.timeAdjustment, \"f\");\n        // resume mining\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").resume();\n        // resume processing transactions\n        this.transactions.resume();\n        return true;\n    }\n    async queueTransaction(transaction, secretKey) {\n        // NOTE: this.transactions.add *must* be awaited before returning the\n        // `transaction.hash()`, as the transactionPool may change the transaction\n        // (and thus its hash!)\n        // It may also throw Errors that must be returned to the caller.\n        const isExecutable = (await this.transactions.add(transaction, secretKey)) === true;\n        if (isExecutable) {\n            process.nextTick(this.emit.bind(this), \"pendingTransaction\", transaction);\n        }\n        const hash = transaction.hash;\n        if (__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this) || !__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return hash;\n        }\n        else {\n            if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\") && __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.instamine === \"eager\") {\n                // in eager instamine mode we must wait for the transaction to be saved\n                // before we can return the hash\n                const { status, error } = await transaction.once(\"finalized\");\n                // in eager instamine mode we must throw on all rejected transaction\n                // errors. We must also throw on `confirmed` transactions when\n                // vmErrorsOnRPCResponse is enabled.\n                if (error &&\n                    (status === \"rejected\" || __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.vmErrorsOnRPCResponse))\n                    throw error;\n            }\n            return hash;\n        }\n    }\n    async simulateTransaction(transaction, parentBlock, overrides) {\n        let result;\n        const data = transaction.data;\n        let gasLimit = transaction.gas.toBigInt();\n        // subtract out the transaction's base fee from the gas limit before\n        // simulating the tx, because `runCall` doesn't account for raw gas costs.\n        const hasToAddress = transaction.to != null;\n        const to = hasToAddress ? new ethereum_address_1.Address(transaction.to.toBuffer()) : null;\n        const common = this.fallback\n            ? this.fallback.getCommonForBlockNumber(this.common, BigInt(transaction.block.header.number.toString()))\n            : this.common;\n        const gasLeft = gasLimit - (0, ethereum_transaction_1.calculateIntrinsicGas)(data, hasToAddress, common);\n        const transactionContext = {};\n        this.emit(\"ganache:vm:tx:before\", {\n            context: transactionContext\n        });\n        if (gasLeft >= 0n) {\n            const stateTrie = this.trie.copy(false);\n            stateTrie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const vm = await this.createVmFromStateTrie(stateTrie, options.chain.allowUnlimitedContractSize, false, // precompiles have already been initialized in the stateTrie\n            common);\n            // take a checkpoint so the `runCall` never writes to the trie. We don't\n            // commit/revert later because this stateTrie is ephemeral anyway.\n            await vm.eei.checkpoint();\n            vm.evm.events.on(\"step\", (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs) {\n                    options.logging.logger.log(...logs);\n                    this.emit(\"ganache:vm:tx:console.log\", {\n                        context: transactionContext,\n                        logs\n                    });\n                }\n                if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                    return;\n                const ganacheStepEvent = (0, provider_events_1.makeStepEvent)(transactionContext, event);\n                this.emit(\"ganache:vm:tx:step\", ganacheStepEvent);\n            });\n            const caller = transaction.from.toBuffer();\n            const callerAddress = new ethereum_address_1.Address(caller);\n            if (common.isActivatedEIP(2929)) {\n                const eei = vm.eei;\n                // handle Berlin hardfork warm storage reads\n                (0, precompiles_1.warmPrecompiles)(eei);\n                eei.addWarmedAddress(caller);\n                if (to)\n                    eei.addWarmedAddress(to.buf);\n            }\n            // If there are any overrides requested for eth_call, apply\n            // them now before running the simulation.\n            await (0, run_call_1.applySimulationOverrides)(stateTrie, vm, overrides);\n            // we need to update the balance and nonce of the sender _before_\n            // we run this transaction so that things that rely on these values\n            // are correct (like contract creation!).\n            const fromAccount = await vm.eei.getAccount(callerAddress);\n            fromAccount.nonce += 1n;\n            const txCost = gasLimit * transaction.gasPrice.toBigInt();\n            const startBalance = fromAccount.balance;\n            // TODO: should we throw if insufficient funds?\n            fromAccount.balance = txCost > startBalance ? 0n : startBalance - txCost;\n            await vm.eei.putAccount(callerAddress, fromAccount);\n            // finally, run the call\n            result = await vm.evm.runCall({\n                caller: callerAddress,\n                data: transaction.data && transaction.data.toBuffer(),\n                gasPrice: transaction.gasPrice.toBigInt(),\n                gasLimit: gasLeft,\n                to,\n                value: transaction.value == null ? 0n : transaction.value.toBigInt(),\n                block: transaction.block\n            });\n        }\n        else {\n            result = {\n                execResult: {\n                    runState: { programCounter: 0 },\n                    exceptionError: new evm_1.EvmError(evm_1.EvmErrorMessage.OUT_OF_GAS),\n                    returnValue: utils_1.BUFFER_EMPTY\n                }\n            };\n        }\n        this.emit(\"ganache:vm:tx:after\", {\n            context: transactionContext\n        });\n        if (result.execResult.exceptionError) {\n            throw new ethereum_utils_1.CallError(result);\n        }\n        else {\n            return utils_1.Data.from(result.execResult.returnValue || \"0x\");\n        }\n    }\n    /**\n     * traceTransaction\n     *\n     * Run a previously-run transaction in the same state in which it occurred at the time it was run.\n     * This will return the vm-level trace output for debugging purposes.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Rerun every transaction in that block prior to and including the requested transaction\n     *  4. Send trace results back.\n     *\n     * @param transactionHash -\n     * @param options -\n     */\n    async traceTransaction(transactionHash, options) {\n        const transactionHashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // #1 - get block via transaction object\n        const transaction = await this.transactions.get(transactionHashBuffer);\n        if (!transaction) {\n            throw new Error(\"Unknown transaction \" + transactionHash);\n        }\n        const targetBlock = await this.blocks.getByHash(transaction.blockHash.toBuffer());\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, transactionHashBuffer);\n        // #2 - Set state root of original block\n        //\n        // TODO: Forking needs the forked block number passed during this step:\n        // https://github.com/trufflesuite/ganache/blob/develop/lib/blockchain_double.js#L917\n        const trie = this.trie.copy();\n        trie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n        // #3 - Rerun every transaction in block prior to and including the requested transaction\n        const { gas, structLogs, returnValue, storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, newBlock.transactions[transaction.index.toNumber()], trie, newBlock, options);\n        // #4 - Send results back\n        return { gas, structLogs, returnValue, storage };\n    }\n    /**\n     * storageRangeAt\n     *\n     * Returns a contract's storage given a starting key and max number of\n     * entries to return.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Use contract address storage trie to get the storage keys from the transaction\n     *  4. Sort and filter storage keys using the startKey and maxResult\n     *  5. Rerun every transaction in that block prior to and including the requested transaction\n     *  6. Send storage results back\n     *\n     * @param blockHash -\n     * @param txIndex -\n     * @param contractAddress -\n     * @param startKey -\n     * @param maxResult -\n     */\n    async storageRangeAt(blockHash, txIndex, contractAddress, startKey, maxResult) {\n        // #1 - get block information\n        const targetBlock = await this.blocks.getByHash(blockHash);\n        // get transaction using txIndex\n        const transactions = targetBlock.getTransactions();\n        const transaction = transactions[txIndex];\n        if (!transaction) {\n            throw new Error(`transaction index ${txIndex} is out of range for block ${blockHash}`);\n        }\n        // #2 - set state root of block\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const trie = makeTrie(this, __classPrivateFieldGet(this, _Blockchain_database, \"f\").trie, parentBlock.header.stateRoot);\n        // get the contractAddress account storage trie\n        const contractAddressBuffer = ethereum_address_1.Address.from(contractAddress).toBuffer();\n        const addressData = await trie.get(contractAddressBuffer);\n        if (!addressData) {\n            throw new Error(`account ${contractAddress} doesn't exist`);\n        }\n        // #3 - use the contractAddress storage trie to get relevant hashed keys\n        const getStorageKeys = () => {\n            const storageTrie = trie.copy(false);\n            // An address's stateRoot is stored in the 3rd rlp entry\n            storageTrie.setContext((0, rlp_1.decode)(addressData)[2], contractAddressBuffer, parentBlock.header.number);\n            return new Promise((resolve, reject) => {\n                const startKeyBuffer = utils_1.Data.toBuffer(startKey);\n                const compare = (a, b) => a.compare(b) < 0;\n                const keys = [];\n                const handleData = ({ key }) => {\n                    // ignore anything that comes before our starting point\n                    if (startKeyBuffer.compare(key) > 0)\n                        return;\n                    // #4 - sort and filter keys\n                    // insert the key exactly where it needs to go in the array\n                    const position = (0, utils_1.findInsertPosition)(keys, key, compare);\n                    // ignore if the value couldn't possibly be relevant\n                    if (position > maxResult)\n                        return;\n                    keys.splice(position, 0, key);\n                };\n                const handleEnd = () => {\n                    if (keys.length > maxResult) {\n                        // we collected too much data, so we've got to trim it a bit\n                        resolve({\n                            // only take the maximum number of entries requested\n                            keys: keys.slice(0, maxResult),\n                            // assign nextKey\n                            nextKey: utils_1.Data.from(keys[maxResult])\n                        });\n                    }\n                    else {\n                        resolve({\n                            keys,\n                            nextKey: null\n                        });\n                    }\n                };\n                const rs = storageTrie.createReadStream();\n                rs.on(\"data\", handleData).on(\"error\", reject).on(\"end\", handleEnd);\n            });\n        };\n        const { keys, nextKey } = await getStorageKeys();\n        // #5 -  rerun every transaction in that block prior to and including the requested transaction\n        // prepare block to be run in traceTransaction\n        const transactionHashBuffer = transaction.hash.toBuffer();\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, transactionHashBuffer);\n        // get storage data given a set of keys\n        const options = {\n            disableMemory: true,\n            disableStack: true,\n            disableStorage: false\n        };\n        const { storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, newBlock.transactions[transaction.index.toNumber()], trie, newBlock, options, keys, contractAddressBuffer);\n        // #6 - send back results\n        return {\n            storage,\n            nextKey\n        };\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Blockchain_emitStepEvent, enable, \"f\");\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").toggleStepEvent(enable);\n    }\n    /**\n     * Gracefully shuts down the blockchain service and all of its dependencies.\n     */\n    async stop() {\n        // If the blockchain is still initializing we don't want to shut down\n        // yet because there may still be database calls in flight. Leveldb may\n        // cause a segfault due to a race condition between a db write and the close\n        // call.\n        if (__classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.starting) {\n            await this.once(\"ready\");\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n        // stop the polling miner, if necessary\n        clearTimeout(__classPrivateFieldGet(this, _Blockchain_timer, \"f\"));\n        // clean up listeners\n        if (this.vm) {\n            this.vm.events.removeAllListeners();\n            this.vm.evm && this.vm.evm.events.removeAllListeners();\n        }\n        // pause processing new transactions...\n        this.transactions && (await this.transactions.pause());\n        // then pause the miner, too.\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause());\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        this.fallback && (await this.fallback.close());\n        await this.emit(\"stop\");\n        __classPrivateFieldGet(this, _Blockchain_database, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_database, \"f\").close());\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopped, \"f\");\n    }\n}\nexports.default = Blockchain;\n_Blockchain_state = new WeakMap(), _Blockchain_miner = new WeakMap(), _Blockchain_blockBeingSavedPromise = new WeakMap(), _Blockchain_timer = new WeakMap(), _Blockchain_emitStepEvent = new WeakMap(), _Blockchain_database = new WeakMap(), _Blockchain_options = new WeakMap(), _Blockchain_instamine = new WeakMap(), _Blockchain_saveNewBlock = new WeakMap(), _Blockchain_emitNewBlock = new WeakMap(), _Blockchain_getTransactionLogOutput = new WeakMap(), _Blockchain_handleNewBlockData = new WeakMap(), _Blockchain_readyNextBlock = new WeakMap(), _Blockchain_isPaused = new WeakMap(), _Blockchain_commitAccounts = new WeakMap(), _Blockchain_initializeGenesisBlock = new WeakMap(), _Blockchain_timeAdjustment = new WeakMap(), _Blockchain_adjustedTime = new WeakMap(), _Blockchain_deleteBlockData = new WeakMap(), _Blockchain_snapshots = new WeakMap(), _Blockchain_traceTransaction = new WeakMap(), _Blockchain_prepareNextBlock = new WeakMap();\n//# sourceMappingURL=blockchain.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumOptionsConfig = exports.EthereumDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst fork_options_1 = require(\"./fork-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.EthereumDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions,\n    fork: fork_options_1.ForkOptions\n};\nexports.EthereumOptionsConfig = new options_1.OptionsConfig(exports.EthereumDefaults);\n__exportStar(require(\"./chain-options\"), exports);\n__exportStar(require(\"./database-options\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./logging-options\"), exports);\n__exportStar(require(\"./miner-options\"), exports);\n__exportStar(require(\"./wallet-options\"), exports);\n__exportStar(require(\"./fork-options\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumApi_getId, _EthereumApi_filters, _EthereumApi_subscriptions, _EthereumApi_options, _EthereumApi_blockchain, _EthereumApi_wallet;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#region Imports\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst gas_estimator_1 = __importDefault(require(\"./helpers/gas-estimator\"));\nconst assert_arg_length_1 = require(\"./helpers/assert-arg-length\");\nconst filter_parsing_1 = require(\"./helpers/filter-parsing\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst miner_1 = require(\"./miner/miner\");\nasync function autofillDefaultTransactionValues(tx, eth_estimateGas, eth_maxPriorityFeePerGas, transaction, blockchain, options) {\n    if (tx.gas.isNull()) {\n        const defaultLimit = options.miner.defaultTransactionGasLimit;\n        if (defaultLimit === utils_1.Quantity.Empty) {\n            // if the default limit is `Quantity.Empty` use a gas estimate\n            tx.gas = await eth_estimateGas(transaction, ethereum_utils_1.Tag.latest);\n        }\n        else {\n            tx.gas = defaultLimit;\n        }\n    }\n    if (\"gasPrice\" in tx && tx.gasPrice.isNull()) {\n        tx.gasPrice = options.miner.defaultGasPrice;\n    }\n    if (\"maxFeePerGas\" in tx && tx.maxFeePerGas.isNull()) {\n        const block = blockchain.blocks.latest;\n        tx.maxFeePerGas = utils_1.Quantity.from(ethereum_block_1.Block.calcNBlocksMaxBaseFee(3, block.header));\n    }\n    if (\"maxPriorityFeePerGas\" in tx && tx.maxPriorityFeePerGas.isNull()) {\n        tx.maxPriorityFeePerGas = await eth_maxPriorityFeePerGas();\n    }\n}\nconst version = process.env.VERSION || \"DEV\";\n//#endregion\n//#region Constants\nconst CLIENT_VERSION = `Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`;\nconst PROTOCOL_VERSION = utils_1.Data.from(\"0x3f\");\nconst RPC_MODULES = {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n};\n//#endregion\n//#region helpers\n/**\n * Combines RuntimeErrors for a list of rejected or reverted transactions.\n * @param transactions Array of transactions with errors to assert.\n */\nfunction assertExceptionalTransactions(transactions) {\n    let baseError = null;\n    let errors;\n    const data = {};\n    transactions.forEach(transaction => {\n        if (transaction.execException) {\n            if (baseError) {\n                baseError = ethereum_utils_1.VM_EXCEPTIONS;\n                errors.push(`${transaction.hash.toString()}: ${transaction.execException}\\n`);\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n            else {\n                baseError = ethereum_utils_1.VM_EXCEPTION;\n                errors = [transaction.execException.message];\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n        }\n    });\n    if (baseError) {\n        const err = new Error(baseError + errors.join(\"\\n\"));\n        err.data = data;\n        throw err;\n    }\n}\n//#endregion helpers\nclass EthereumApi {\n    /**\n     * This is the Ethereum API that the provider interacts with.\n     * The only methods permitted on the prototype are the supported json-rpc\n     * methods.\n     * @param options -\n     * @param wallet -\n     * @param emitter -\n     */\n    constructor(options, wallet, blockchain) {\n        _EthereumApi_getId.set(this, (id => () => utils_1.Quantity.from(++id))(0));\n        _EthereumApi_filters.set(this, new Map());\n        _EthereumApi_subscriptions.set(this, new Map());\n        _EthereumApi_options.set(this, void 0);\n        _EthereumApi_blockchain.set(this, void 0);\n        _EthereumApi_wallet.set(this, void 0);\n        __classPrivateFieldSet(this, _EthereumApi_options, options, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_blockchain, blockchain, \"f\");\n    }\n    //#region db\n    /**\n     * Stores a string in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param value - String to store.\n     * @returns returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n     * ```\n     */\n    async db_putString(dbName, key, value) {\n        return false;\n    }\n    /**\n     * Returns string from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored string.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getString(dbName, key) {\n        return \"\";\n    }\n    /**\n     * Stores binary data in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param data - Data to store.\n     * @returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n     * ```\n     */\n    async db_putHex(dbName, key, data) {\n        return false;\n    }\n    /**\n     * Returns binary data from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored data.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getHex(dbName, key) {\n        return \"0x00\";\n    }\n    //#endregion\n    //#region bzz\n    /**\n     * Returns the kademlia table in a readable table format.\n     * @returns Returns the kademlia table in a readable table format.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_hive\"));\n     * ```\n     */\n    async bzz_hive() {\n        return [];\n    }\n    /**\n     * Returns details about the swarm node.\n     * @returns Returns details about the swarm node.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_info\"));\n     * ```\n     */\n    async bzz_info() {\n        return [];\n    }\n    async evm_mine(arg) {\n        // `MINE_ONLY_ONE_BLOCK` refers to the number of blocks mined per call to `blockchain.mine()`\n        const MINE_ONLY_ONE_BLOCK = true;\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const vmErrorsOnRPCResponse = options.chain.vmErrorsOnRPCResponse;\n        // Since `typeof null === \"object\"` we have to guard against that\n        if (arg !== null && typeof arg === \"object\") {\n            let { blocks, timestamp } = arg;\n            if (blocks == null) {\n                blocks = 1;\n            }\n            // TODO(perf): add an option to mine a bunch of blocks in a batch so\n            // we can save them all to the database in one go.\n            // Developers like to move the blockchain forward by thousands of blocks\n            // at a time and doing this would make it way faster\n            for (let i = 0; i < blocks; i++) {\n                const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n                if (vmErrorsOnRPCResponse) {\n                    assertExceptionalTransactions(transactions);\n                }\n            }\n        }\n        else {\n            const timestamp = arg;\n            const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n            if (vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(transactions);\n            }\n        }\n        return \"0x0\";\n    }\n    /**\n     * Sets the given account's nonce to the specified value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param nonce - The nonce value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountNonce(address, nonce) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.nonce = utils_1.Quantity.toBigInt(nonce);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's balance to the specified WEI value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param balance - The balance value, in WEI, to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const balance = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountBalance(address, balance) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.balance = utils_1.Quantity.toBigInt(balance);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's code to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param code - The code to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountCode\", [address, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountCode(address, code) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const codeBuffer = utils_1.Data.toBuffer(code);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        // The ethereumjs-vm StateManager does not allow to set empty code,\n        // therefore we will manually set the code hash when \"clearing\" the contract code\n        await eei.checkpoint();\n        if (codeBuffer.length > 0) {\n            await eei.putContractCode(vmAddress, codeBuffer);\n        }\n        else {\n            const account = await eei.getAccount(vmAddress);\n            account.codeHash = util_1.KECCAK256_NULL;\n            await eei.putAccount(vmAddress, account);\n        }\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's storage slot to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param slot - The storage slot that should be set.\n     * @param value - The value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountStorageAt(address, slot, value) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffer = utils_1.Data.toBuffer(slot);\n        const valueBuffer = utils_1.Data.toBuffer(value);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        await eei.checkpoint();\n        await eei.putContractStorage(vmAddress, slotBuffer, valueBuffer);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Jump forward in time by the given amount of time, in seconds.\n     * @param seconds - Number of seconds to jump forward in time by. Must be greater than or equal to `0`.\n     * @returns Returns the total time adjustment, in seconds.\n     * @example\n     * ```javascript\n     * const seconds = 10;\n     * const timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\n     * console.log(timeAdjustment);\n     * ```\n     */\n    async evm_increaseTime(seconds) {\n        const milliseconds = (typeof seconds === \"number\" ? seconds : utils_1.Quantity.toNumber(seconds)) *\n            1000;\n        return Math.floor(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").increaseTime(milliseconds) / 1000);\n    }\n    /**\n     * Sets the internal clock time to the given timestamp.\n     *\n     * Warning: This will allow you to move *backwards* in time, which may cause\n     * new blocks to appear to be mined before old blocks. This will result in\n     * an invalid state.\n     *\n     * @param time - JavaScript timestamp (millisecond precision).\n     * @returns The amount of *seconds* between the given timestamp and now.\n     * @example\n     * ```javascript\n     * const currentDate = Date.now();\n     * setTimeout(async () => {\n     *   const time = await provider.send(\"evm_setTime\", [currentDate] );\n     *   console.log(time); // should be about two seconds ago\n     * }, 1000);\n     * ```\n     */\n    async evm_setTime(time) {\n        let timestamp;\n        switch (typeof time) {\n            case \"object\":\n                timestamp = time.getTime();\n                break;\n            case \"number\":\n                timestamp = time;\n                break;\n            default:\n                timestamp = utils_1.Quantity.toNumber(time);\n                break;\n        }\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const offsetMilliseconds = blockchain.setTimeDiff(timestamp);\n        // convert offsetMilliseconds to seconds:\n        return Math.floor(offsetMilliseconds / 1000);\n    }\n    /**\n     * Revert the state of the blockchain to a previous snapshot. Takes a single\n     * parameter, which is the snapshot id to revert to. This deletes the given\n     * snapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\n     * will delete snapshots with ids 0x1, 0x2, etc.)\n     *\n     * @param snapshotId - The snapshot id to revert.\n     * @returns `true` if a snapshot was reverted, otherwise `false`.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     * console.log({isReverted: isReverted});\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_revert(snapshotId) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").revert(utils_1.Quantity.from(snapshotId));\n    }\n    /**\n     * Snapshot the state of the blockchain at the current block. Takes no\n     * parameters. Returns the id of the snapshot that was created. A snapshot can\n     * only be reverted once. After a successful `evm_revert`, the same snapshot\n     * id cannot be used again. Consider creating a new snapshot after each\n     * `evm_revert` if you need to revert to the same point multiple times.\n     *\n     * @returns The hex-encoded identifier for this snapshot.\n     *\n     * @example\n     * ```javascript\n     * const provider = ganache.provider();\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_snapshot() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").snapshot());\n    }\n    /**\n     * Adds any arbitrary account to the `personal` namespace.\n     *\n     * Note: accounts already known to the `personal` namespace and accounts\n     * returned by `eth_accounts` cannot be re-added using this method.\n     * @param address - The address of the account to add to the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to encrypt the account's private key.\n     * NOTE: this passphrase will be needed for all `personal` namespace calls\n     * that require a password.\n     * @returns `true` if  the account was successfully added. `false` if the\n     * account is already in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_addAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_addAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addUnknownAccount(addy, passphrase);\n    }\n    /**\n     * Removes an account from the `personal` namespace.\n     *\n     * Note: accounts not known to the `personal` namespace cannot be removed\n     * using this method.\n     * @param address - The address of the account to remove from the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to decrypt the account's private key.\n     * @returns `true` if the account was successfully removed. `false` if the\n     * account was not in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_removeAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").removeKnownAccount(addy, passphrase);\n    }\n    //#endregion evm\n    //#region miner\n    /**\n     * Resume the CPU mining process with the given number of threads.\n     *\n     * Note: `threads` is ignored.\n     * @param threads - Number of threads to resume the CPU mining process with.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_start\");\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_start(threads = 1) {\n        if (__classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.instamine === \"eager\") {\n            const resumption = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n            // resumption can be undefined if the blockchain isn't currently paused\n            if (resumption &&\n                resumption.transactions != null &&\n                __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(resumption.transactions);\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n        }\n        return true;\n    }\n    /**\n     * Stop the CPU mining operation.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_stop() {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").pause();\n        return true;\n    }\n    /**\n     * Sets the default accepted gas price when mining transactions.\n     * Any transactions that don't specify a gas price will use this amount.\n     * Transactions that are below this limit are excluded from the mining process.\n     * @param number - Default accepted gas price.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n     * ```\n     */\n    async miner_setGasPrice(number) {\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice = utils_1.Quantity.from(number);\n        return true;\n    }\n    /**\n     * Sets the etherbase, where mining rewards will go.\n     * @param address - The address where the mining rewards will go.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(await provider.send(\"miner_setEtherbase\", [account] ));\n     * ```\n     */\n    async miner_setEtherbase(address) {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase = ethereum_address_1.Address.from(address);\n        return true;\n    }\n    /**\n     * Set the extraData block header field a miner can include.\n     * @param extra - The `extraData` to include.\n     * @returns If successfully set returns `true`, otherwise returns an error.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n     * ```\n     */\n    async miner_setExtra(extra) {\n        const bytes = utils_1.Data.from(extra);\n        const length = bytes.toBuffer().length;\n        if (length > 32) {\n            throw new Error(`extra exceeds max length. ${length} > 32`);\n        }\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.extraData = bytes;\n        return true;\n    }\n    //#endregion\n    //#region web3\n    /**\n     * Returns the current client version.\n     * @returns The current client version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"web3_clientVersion\"));\n     * ```\n     */\n    async web3_clientVersion() {\n        return CLIENT_VERSION;\n    }\n    /**\n     * Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n     * @param data - the data to convert into a SHA3 hash.\n     * @returns The SHA3 result of the given string.\n     * @example\n     * ```javascript\n     * const data = \"hello trufflers\";\n     * const sha3 = await provider.send(\"web3_sha3\", [data] );\n     * console.log(sha3);\n     * ```\n     */\n    async web3_sha3(data) {\n        return utils_1.Data.from((0, utils_1.keccak)(utils_1.Data.toBuffer(data)));\n    }\n    //#endregion\n    //#region net\n    /**\n     * Returns the current network id.\n     * @returns The current network id. This value should NOT be JSON-RPC\n     * Quantity/Data encoded.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_version\"));\n     * ```\n     */\n    async net_version() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.networkId.toString();\n    }\n    /**\n     * Returns `true` if client is actively listening for network connections.\n     * @returns `true` when listening, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_listening\"));\n     * ```\n     */\n    async net_listening() {\n        return true;\n    }\n    /**\n     * Returns number of peers currently connected to the client.\n     * @returns Number of connected peers.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_peerCount\"));\n     * ```\n     */\n    async net_peerCount() {\n        return utils_1.Quantity.Zero;\n    }\n    //#endregion\n    //#region eth\n    /**\n     * Generates and returns an estimate of how much gas is necessary to allow the\n     * transaction to complete. The transaction will not be added to the\n     * blockchain. Note that the estimate may be significantly more than the\n     * amount of gas actually used by the transaction, for a variety of reasons\n     * including EVM mechanics and node performance.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns The amount of gas used.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\n     * console.log(gasEstimate);\n     * ```\n     */\n    async eth_estimateGas(transaction, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const generateVM = async () => {\n            // note(hack): blockchain.vm.copy() doesn't work so we just do it this way\n            // /shrug\n            const vm = await blockchain.createVmFromStateTrie(blockchain.trie.copy(false), options.chain.allowUnlimitedContractSize, false);\n            return vm;\n        };\n        return new Promise((resolve, reject) => {\n            const { coinbase } = blockchain;\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n            if (tx.from == null) {\n                tx.from = coinbase;\n            }\n            if (tx.gas.isNull()) {\n                // eth_estimateGas isn't subject to regular transaction gas limits\n                tx.gas = options.miner.callGasLimit;\n            }\n            const block = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from((parentHeader.number.toBigInt() || 0n) + 1n), parentHeader.parentHash, new ethereum_address_1.Address(parentHeader.miner.toBuffer()), tx.gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), 0n // no baseFeePerGas for estimates\n            );\n            const runArgs = {\n                tx: tx.toVmTransaction(),\n                block,\n                skipBalance: true,\n                skipNonce: true\n            };\n            (0, gas_estimator_1.default)(generateVM, runArgs, (err, result) => {\n                if (err)\n                    return void reject(err);\n                resolve(utils_1.Quantity.from(result.gasEstimate));\n            });\n        });\n    }\n    /**\n     * Returns the current ethereum protocol version.\n     * @returns The current ethereum protocol version.\n     * @example\n     * ```javascript\n     * const version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\n     * console.log(version);\n     * ```\n     */\n    async eth_protocolVersion() {\n        return PROTOCOL_VERSION;\n    }\n    /**\n     * Returns an object containing data about the sync status or `false` when not syncing.\n     *\n     * @returns An object with sync status data or `false`, when not syncing.\n     *\n     * * `startingBlock`: \\{bigint\\} The block at which the import started (will\n     *     only be reset, after the sync reached his head).\n     * * `currentBlock`: \\{bigint\\} The current block, same as `eth_blockNumber`.\n     * * `highestBlock`: \\{bigint\\} The estimated highest block.\n     *\n     * @example\n     * ```javascript\n     * const result = await provider.request({ method: \"eth_syncing\", params: [] });\n     * console.log(result);\n     * ```\n     */\n    async eth_syncing() {\n        return false;\n    }\n    /**\n     * Returns the client coinbase address.\n     * @returns The current coinbase address.\n     * @example\n     * ```javascript\n     * const coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\n     * console.log(coinbaseAddress);\n     * ```\n     */\n    async eth_coinbase() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase;\n    }\n    /**\n     * Returns information about a block by block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByNumber(number, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .get(number)\n            .catch(_ => null);\n        // @ts-ignore\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the details for the account at the specified address and block\n     * number, the account's Merkle proof, and the storage values for the\n     * specified storage keys with their Merkle-proofs.\n     *\n     * @param address - Address of the account\n     * @param storageKeys - Array of storage keys to be proofed.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\", or\n     * \"pending\".\n     * @returns An object containing the details for the account at the specified\n     * address and block number, the account's Merkle proof, and the\n     * storage-values for the specified storage keys with their Merkle-proofs:\n     * * `balance`: `QUANTITY` - the balance of the account.\n     * * `codeHash`: `DATA` - 32 Bytes - hash of the account. A simple account\n     *   without code will return\n     *   `\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"`\n     * * `nonce`: `QUANTITY` - the nonce of the account.\n     * * `storageHash`: `DATA` - 32 Bytes - SHA3 of the StorageRoot. All storage\n     *   will deliver a MerkleProof starting with this rootHash.\n     * * `accountProof`: `Array` - Array of rlp-serialized MerkleTree-Nodes,\n     *   starting with the stateRoot-NODE, following the path of the SHA3\n     *   (address) as key.\n     * * `storageProof`: `Array` - Array of storage entries as requested. Each\n     *   entry is an object with the following properties:\n     *   * `key`: `DATA` - the requested storage key.\n     *   * `value`: `QUANTITY` - the storage value.\n     *   * `proof`: `Array` - Array of rlp-serialized MerkleTree-Nodes, starting\n     *     with the storageHash-Node, following the path of the SHA3 (key) as\n     *     path.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const proof = await provider.request({ method: \"eth_getProof\", params: [txReceipt.contractAddress, [\"0x0\", \"0x1\"], \"latest\"] });\n     * console.log(proof);\n     * ```\n     */\n    async eth_getProof(address, storageKeys, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"eth_getProof is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3234 for details.\");\n        }\n        const targetBlock = await blockchain.blocks.get(blockNumber);\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffers = storageKeys.map(slotHex => utils_1.Data.toBuffer(slotHex, 32));\n        const stateManagerCopy = blockchain.vm.stateManager.copy();\n        await stateManagerCopy.setStateRoot(targetBlock.header.stateRoot.toBuffer());\n        const proof = await stateManagerCopy.getProof(vmAddress, slotBuffers);\n        return {\n            address: vmAddress,\n            balance: utils_1.Quantity.from(proof.balance),\n            codeHash: utils_1.Data.from(proof.codeHash),\n            nonce: utils_1.Quantity.from(proof.nonce),\n            storageHash: utils_1.Data.from(proof.storageHash),\n            accountProof: proof.accountProof.map(p => utils_1.Data.from(p)),\n            storageProof: proof.storageProof.map(storageProof => ({\n                key: utils_1.Data.from(storageProof.key),\n                proof: storageProof.proof.map(p => utils_1.Data.from(p)),\n                value: utils_1.Quantity.from(storageProof.value)\n            }))\n        };\n    }\n    /**\n     * Returns information about a block by block hash.\n     * @param hash - Hash of a block.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByHash(hash, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @returns Integer of the number of transactions in the block.\n     * @example\n     * ```javascript\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByNumber(blockNumber) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blocks.getEffectiveNumber(blockNumber);\n        const rawBlock = await blocks.getRawByBlockNumber(blockNum);\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns Number of transactions in the block.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByHash(hash) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = await blocks.getNumberFromHash(hash);\n        if (!blockNum)\n            return null;\n        const rawBlock = await blocks.getRawByBlockNumber(utils_1.Quantity.from(blockNum));\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns a list of available compilers.\n     * @returns List of available compilers.\n     * @example\n     * ```javascript\n     * const compilers = await provider.send(\"eth_getCompilers\");\n     * console.log(compilers);\n     * ```\n     */\n    async eth_getCompilers() {\n        return [];\n    }\n    /**\n     * Returns information about a transaction by block hash and transaction index position.\n     * @param hash - Hash of a block.\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockHashAndIndex(hash, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns information about a transaction by block number and transaction index position.\n     * @param number - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockNumberAndIndex(number, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks.get(number).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockHash(hash) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockNumber(blockNumber) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param hash - Hash of a block.\n     * @param index - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockHashAndIndex(hash, index) {\n        return null;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param uncleIndex - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockNumberAndIndex(blockNumber, uncleIndex) {\n        return null;\n    }\n    /**\n     * Returns: An Array with the following elements\n     * 1: `DATA`, 32 Bytes - current block header pow-hash\n     * 2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n     * 3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n     *\n     * @returns The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"eth_getWork\", [] ));\n     * ```\n     */\n    async eth_getWork() {\n        return [];\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce - The nonce found (64 bits).\n     * @param powHash - The header's pow-hash (256 bits).\n     * @param digest - The mix digest (256 bits).\n     * @returns `true` if the provided solution is valid, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0xe0df4bd14ab39a71\";\n     * const powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitWork(nonce, powHash, digest) {\n        return false;\n    }\n    /**\n     * Used for submitting mining hashrate.\n     *\n     * @param hashRate - A hexadecimal string representation (32 bytes) of the hash rate.\n     * @param clientID - A random hexadecimal(32 bytes) ID identifying the client.\n     * @returns `true` if submitting went through successfully and `false` otherwise.\n     * @example\n     * ```javascript\n     * const hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitHashrate(hashRate, clientID) {\n        return false;\n    }\n    /**\n     * Returns `true` if client is actively mining new blocks.\n     * @returns returns `true` if the client is mining, otherwise `false`.\n     * @example\n     * ```javascript\n     * const isMining = await provider.request({ method: \"eth_mining\", params: [] });\n     * console.log(isMining);\n     * ```\n     */\n    async eth_mining() {\n        // we return the blockchain's started state\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted();\n    }\n    /**\n     * Returns the number of hashes per second that the node is mining with.\n     * @returns Number of hashes per second.\n     * @example\n     * ```javascript\n     * const hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\n     * console.log(hashrate);\n     * ```\n     */\n    async eth_hashrate() {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the current price per gas in wei.\n     * @returns Integer of the current gas price in wei.\n     * @example\n     * ```javascript\n     * const gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\n     * console.log(gasPrice);\n     * ```\n     */\n    async eth_gasPrice() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice;\n    }\n    /**\n     * Returns a `maxPriorityFeePerGas` value suitable for quick transaction inclusion.\n     * @returns The maxPriorityFeePerGas in wei.\n     * @example\n     * ```javascript\n     * const suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\n     * console.log(suggestedTip);\n     * ```\n     */\n    async eth_maxPriorityFeePerGas() {\n        return utils_1.Quantity.Gwei;\n    }\n    /**\n     * Returns a list of addresses owned by client.\n     * @returns Array of 20 Bytes - addresses owned by the client.\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(accounts);\n     * ```\n     */\n    async eth_accounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Returns the number of the most recent block.\n     * @returns The current block number the client is on.\n     * @example\n     * ```javascript\n     * const blockNumber = await provider.request({ method: \"eth_blockNumber\" });\n     * console.log(blockNumber);\n     * ```\n     */\n    async eth_blockNumber() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks.latest.header.number;\n    }\n    /**\n     * Returns the currently configured chain id, a value used in\n     * replay-protected transaction signing as introduced by EIP-155.\n     * @returns The chain id as a string.\n     * @EIP [155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n     *\n     * @example\n     * ```javascript\n     * const chainId = await provider.send(\"eth_chainId\");\n     * console.log(chainId);\n     * ```\n     */\n    async eth_chainId() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.chainId);\n    }\n    /**\n     * Returns the balance of the account of given address.\n     * @param address - Address to check for balance.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns Integer of the account balance in wei.\n     *\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\n     * console.log(balance);\n     * ```\n     */\n    async eth_getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getBalance(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns code at a given address.\n     *\n     * @param address - Address.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\" or \"pending\".\n     * @returns The code from the given address.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\n     * console.log(code);\n     * ```\n     */\n    async eth_getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { accounts } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        return accounts.getCode(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param address - Address of the storage.\n     * @param position - Integer of the position in the storage.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @returns The value in storage at the requested position.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\n     * console.log(storageValue);\n     * ```\n     */\n    async eth_getStorageAt(address, position, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blockchain.blocks.getEffectiveNumber(blockNumber);\n        const block = await blockchain.blocks.getRawByBlockNumber(blockNum);\n        if (!block)\n            throw new Error(\"header not found\");\n        const [[, , , blockStateRoot]] = (0, rlp_1.decode)(block);\n        const trie = blockchain.trie.copy(false);\n        trie.setContext(blockStateRoot, null, blockNum);\n        const posBuff = utils_1.Quantity.toBuffer(position);\n        const length = posBuff.length;\n        let paddedPosBuff;\n        if (length < 32) {\n            // storage locations are 32 bytes wide, so we need to expand any value\n            // given to 32 bytes.\n            paddedPosBuff = Buffer.allocUnsafe(32).fill(0);\n            posBuff.copy(paddedPosBuff, 32 - length);\n        }\n        else if (length === 32) {\n            paddedPosBuff = posBuff;\n        }\n        else {\n            // if the position value we're passed is > 32 bytes, truncate it. This is\n            // what geth does.\n            paddedPosBuff = posBuff.slice(-32);\n        }\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        const addressData = await trie.get(addressBuf);\n        // An address's stateRoot is stored in the 3rd rlp entry\n        const addressStateRoot = (0, rlp_1.decode)(addressData)[2];\n        trie.setContext(addressStateRoot, addressBuf, blockNum);\n        const value = await trie.get(paddedPosBuff);\n        return utils_1.Data.from((0, rlp_1.decode)(value), 32);\n    }\n    /**\n     * Returns the information about a transaction requested by transaction hash.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByHash(transactionHash) {\n        const { transactions } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const hashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // we must check the database before checking the pending cache, because the\n        // cache is updated _after_ the transaction is already in the database, and\n        // the database contains block info whereas the pending cache doesn't.\n        const transaction = await transactions.get(hashBuffer);\n        if (transaction === null) {\n            // if we can't find it in the list of pending transactions, check the db!\n            const tx = transactions.transactionPool.find(hashBuffer);\n            return tx ? tx.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common) : null;\n        }\n        else {\n            return transaction.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common);\n        }\n    }\n    /**\n     * Returns the receipt of a transaction by transaction hash.\n     *\n     * Note: The receipt is not available for pending transactions.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns Returns the receipt of a transaction by transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\n     * console.log(txReceipt);\n     * ```\n     */\n    async eth_getTransactionReceipt(transactionHash) {\n        const { transactions, transactionReceipts, blocks, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const dataHash = utils_1.Data.from(transactionHash);\n        const txHash = dataHash.toBuffer();\n        const transactionPromise = transactions.get(txHash);\n        const receiptPromise = transactionReceipts.get(txHash);\n        const [transaction, receipt] = await Promise.all([\n            transactionPromise,\n            receiptPromise\n        ]);\n        if (transaction) {\n            return receipt.toJSON(transaction, common);\n        }\n        // if we are performing \"strict\" instamining, then check to see if the\n        // transaction is pending so as to warn about the v7 instamine changes\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        if (options.miner.blockTime <= 0 &&\n            options.miner.instamine === \"strict\" &&\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted()) {\n            const tx = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").transactions.transactionPool.find(txHash);\n            if (tx != null) {\n                options.logging.logger.log(\" > Ganache `eth_getTransactionReceipt` notice: the transaction with hash\\n\" +\n                    ` > \\`${dataHash.toString()}\\` has not\\n` +\n                    \" > yet been mined.\" +\n                    \" See https://trfl.io/v7-instamine for additional information.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates new message call transaction or a contract creation, if the data field contains code.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, privateKey);\n    }\n    /**\n     * Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\n     * console.log(signedTx)\n     * ```\n     */\n    async eth_signTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        tx.signAndHash(privateKey.toBuffer());\n        return utils_1.Data.from(tx.serialized);\n    }\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions.\n     * @param transaction - The signed transaction data.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendRawTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromString(transaction, blockchain.common);\n        return blockchain.queueTransaction(tx);\n    }\n    /**\n     * The sign method calculates an Ethereum specific signature with:\n     * `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.\n     *\n     * By adding a prefix to the message makes the calculated signature\n     * recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n     *  (e.g. transaction) and use the signature to impersonate the victim.\n     *\n     * Note the address to sign with must be unlocked.\n     *\n     * @param address - Address to sign with.\n     * @param message - Message to sign.\n     * @returns Signature - a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const msg = \"0x307866666666666666666666\";\n     * const signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_sign(address, message) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        const messageHash = (0, util_1.hashPersonalMessage)(utils_1.Data.toBuffer(message));\n        const { v, r, s } = (0, utils_1.ecsign)(messageHash, privateKey.toBuffer());\n        return (0, util_1.toRpcSig)(v, r, s);\n    }\n    /**\n     * Identical to eth_signTypedData_v4.\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData(address, typedData) {\n        return this.eth_signTypedData_v4(address, typedData);\n    }\n    /**\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData_v4(address, typedData) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        if (typeof typedData === \"string\") {\n            throw new Error(\"cannot sign data; string sent, expected object\");\n        }\n        if (!typedData.types) {\n            throw new Error(\"cannot sign data; types missing\");\n        }\n        if (!typedData.types.EIP712Domain) {\n            throw new Error(\"cannot sign data; EIP712Domain definition missing\");\n        }\n        if (!typedData.domain) {\n            throw new Error(\"cannot sign data; domain missing\");\n        }\n        if (!typedData.primaryType) {\n            throw new Error(\"cannot sign data; primaryType missing\");\n        }\n        if (!typedData.message) {\n            throw new Error(\"cannot sign data; message missing\");\n        }\n        return (0, eth_sig_util_1.signTypedData_v4)(privateKey.toBuffer(), { data: typedData });\n    }\n    eth_subscribe(subscriptionName, options) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        switch (subscriptionName) {\n            case \"newHeads\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n                    const value = block;\n                    const header = value.header;\n                    const result = {\n                        logsBloom: header.logsBloom,\n                        miner: header.miner,\n                        difficulty: header.difficulty,\n                        totalDifficulty: header.totalDifficulty,\n                        extraData: header.extraData,\n                        gasLimit: header.gasLimit,\n                        gasUsed: header.gasUsed,\n                        hash: block.hash(),\n                        mixHash: block.header.mixHash,\n                        nonce: header.nonce,\n                        number: header.number,\n                        parentHash: header.parentHash,\n                        receiptsRoot: header.receiptsRoot,\n                        stateRoot: header.stateRoot,\n                        timestamp: header.timestamp,\n                        transactionsRoot: header.transactionsRoot,\n                        sha3Uncles: header.sha3Uncles\n                    };\n                    if (header.baseFeePerGas !== undefined) {\n                        result.baseFeePerGas = header.baseFeePerGas;\n                    }\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"logs\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const { addresses, topics } = options\n                    ? (0, filter_parsing_1.parseFilterDetails)(options)\n                    : { addresses: [], topics: [] };\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"blockLogs\", (blockLogs) => {\n                    for (const log of blockLogs.filter(addresses, topics)) {\n                        promiEvent.emit(\"message\", {\n                            type: \"eth_subscription\",\n                            data: {\n                                result: log,\n                                subscription: subscription.toString()\n                            }\n                        });\n                    }\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"newPendingTransactions\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n                    const result = transaction.hash.toString();\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"syncing\": {\n                // ganache doesn't sync, so doing nothing is perfectly valid.\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\").set(subscription.toString(), () => { });\n                return promiEvent;\n            }\n            default:\n                throw new ethereum_utils_1.CodedError(`no \\\"${subscriptionName}\\\" subscription in eth namespace`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Cancel a subscription to a particular event. Returns a boolean indicating\n     * if the subscription was successfully cancelled.\n     *\n     * @param subscriptionId - The ID of the subscription to unsubscribe to.\n     * @returns `true` if subscription was cancelled successfully, otherwise `false`.\n     * @example\n     * ```javascript\n     * const subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_unsubscribe(subscriptionId) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        const unsubscribe = subscriptions.get(subscriptionId);\n        if (unsubscribe) {\n            subscriptions.delete(subscriptionId);\n            unsubscribe();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives. To check\n     * if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newBlockFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n            value.updates.push(block.hash());\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.block\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions\n     * arrive. To check if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newPendingTransactionFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n            value.updates.push(transaction.hash);\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.pendingTransaction\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state\n     * changes (logs). To check if the state has changed, call\n     * `eth_getFilterChanges`.\n     *\n     * If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\n     * filter continually append logs for whatever block is seen as latest at the\n     * time the block was mined, not just for the block that was \"latest\" when the\n     * filter was created.\n     *\n     * ### A note on specifying topic filters:\n     * Topics are order-dependent. A transaction with a log with topics [A, B]\n     * will be matched by the following topic filters:\n     *  * `[]` “anything”\n     *  * `[A]` “A in first position (and anything after)”\n     *  * `[null, B]` “anything in first position AND B in second position (and\n     * anything after)”\n     *  * `[A, B]` “A in first position AND B in second position (and anything\n     * after)”\n     *  * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\n     * position (and anything after)”\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     *\n     * @param filter - The filter options as seen in source.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newFilter(filter) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (filter == null)\n            filter = {};\n        const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter || {});\n        const unsubscribe = blockchain.on(\"blockLogs\", (blockLogs) => {\n            const blockNumber = blockLogs.blockNumber;\n            // every time we get a blockLogs message we re-check what the filter's\n            // range is. We do this because \"latest\" isn't the latest block at the\n            // time the filter was set up, rather it is the actual latest *mined*\n            // block (that is: not pending)\n            const { fromBlock, toBlock } = (0, filter_parsing_1.parseFilterRange)(filter, blockchain);\n            if (fromBlock <= blockNumber && toBlock >= blockNumber) {\n                value.updates.push(...blockLogs.filter(addresses, topics));\n            }\n        });\n        const value = { updates: [], unsubscribe, filter, type: ethereum_utils_1.FilterTypes.log };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Polling method for a filter, which returns an array of logs, block hashes,\n     * or transaction hashes, depending on the filter type, which occurred since\n     * last poll.\n     *\n     * @param filterId - The filter id.\n     * @returns An array of logs, block hashes, or transaction hashes, depending\n     * on the filter type, which occurred since last poll.\n     *\n     * For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newFilter` the return are log objects with the following parameters:\n     * * `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n     * * `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n     * * `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n     * * `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n     * * `address`: `DATA`, 20 Bytes - The address from which the log originated.\n     * * `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n     * * `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n     *\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * const subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\n     * console.log(changes);\n     *\n     * await provider.send(\"eth_unsubscribe\", [subscriptionId]);\n     * ```\n     */\n    async eth_getFilterChanges(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter) {\n            const updates = filter.updates;\n            filter.updates = [];\n            return updates;\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is\n     * no longer needed.\n     *\n     * @param filterId - The filter id.\n     * @returns `true` if the filter was successfully uninstalled, otherwise\n     * `false`.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * const result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_uninstallFilter(filterId) {\n        const id = utils_1.Quantity.toString(filterId);\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(id);\n        if (!filter)\n            return false;\n        filter.unsubscribe();\n        return __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").delete(id);\n    }\n    /**\n     * Returns an array of all logs matching filter with given id.\n     *\n     * @param filterId - The filter id.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getFilterLogs(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter && filter.type === ethereum_utils_1.FilterTypes.log) {\n            return this.eth_getLogs(filter.filter);\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Returns an array of all logs matching a given filter object.\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     * * `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\n     * then neither `fromBlock` or `toBlock` are allowed.\n     *\n     * @param filter - The filter options as seen in source.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * const txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n     *\n     * const logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getLogs(filter) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blockLogs.getLogs(filter);\n    }\n    /**\n     * Returns the number of transactions sent from an address.\n     *\n     * @param address - `DATA`, 20 Bytes - The address to get number of transactions sent from\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * @returns Number of transactions sent from this address.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getTransactionCount(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getNonce(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * State Override object - An address-to-state mapping, where each entry specifies some\n     * state to be ephemerally overridden prior to executing the call. Each address maps to an\n     * object containing:\n     * * `balance`: `QUANTITY` (optional) - The balance to set for the account before executing the call.\n     * * `nonce`: `QUANTITY` (optional) - The nonce to set for the account before executing the call.\n     * * `code`: `DATA` (optional) - The EVM bytecode to set for the account before executing the call.\n     * * `state`: `OBJECT` (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n     * * `stateDiff`: `OBJECT` (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n     * * *Note - `state` and `stateDiff` fields are mutually exclusive.\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @param overrides - State overrides to apply during the simulation.\n     *\n     * @returns The return value of executed contract.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\n     * const overrides = { [from]: { balance: \"0x3e8\", nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0x00000000000000000000000000000000000000000000000000000000baddad42\"}}};\n     * const result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\n     * console.log(result);\n     * ```\n     */\n    async eth_call(transaction, blockNumber = ethereum_utils_1.Tag.latest, overrides = {}) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const common = blockchain.common;\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        let gas;\n        if (typeof transaction.gasLimit === \"undefined\") {\n            if (typeof transaction.gas !== \"undefined\") {\n                gas = utils_1.Quantity.from(transaction.gas);\n            }\n            else {\n                // eth_call isn't subject to regular transaction gas limits by default\n                gas = options.miner.callGasLimit;\n            }\n        }\n        else {\n            gas = utils_1.Quantity.from(transaction.gasLimit);\n        }\n        let data;\n        if (typeof transaction.data === \"undefined\") {\n            if (typeof transaction.input !== \"undefined\") {\n                data = utils_1.Data.from(transaction.input);\n            }\n        }\n        else {\n            data = utils_1.Data.from(transaction.data);\n        }\n        // eth_call doesn't validate that the transaction has a sufficient\n        // \"effectiveGasPrice\". however, if `maxPriorityFeePerGas` or\n        // `maxFeePerGas` values are set, the baseFeePerGas is used to calculate\n        // the effectiveGasPrice, which is used to calculate tx costs/refunds.\n        const baseFeePerGasBigInt = parentBlock.header.baseFeePerGas\n            ? parentBlock.header.baseFeePerGas.toBigInt()\n            : undefined;\n        let gasPrice;\n        const hasGasPrice = typeof transaction.gasPrice !== \"undefined\";\n        // if the original block didn't have a `baseFeePerGas` (baseFeePerGasBigInt\n        // is undefined) then EIP-1559 was not active on that block and we can't use\n        // type 2 fee values (as they rely on the baseFee)\n        if (!common.isActivatedEIP(1559) || baseFeePerGasBigInt === undefined) {\n            gasPrice = utils_1.Quantity.from(hasGasPrice ? 0 : transaction.gasPrice);\n        }\n        else {\n            const hasMaxFeePerGas = typeof transaction.maxFeePerGas !== \"undefined\";\n            const hasMaxPriorityFeePerGas = typeof transaction.maxPriorityFeePerGas !== \"undefined\";\n            if (hasGasPrice && (hasMaxFeePerGas || hasMaxPriorityFeePerGas)) {\n                throw new Error(\"both gasPrice and (maxFeePerGas or maxPriorityFeePerGas) specified\");\n            }\n            // User specified 1559 gas fields (or none), use those\n            let maxFeePerGas = 0n;\n            let maxPriorityFeePerGas = 0n;\n            if (hasMaxFeePerGas) {\n                maxFeePerGas = BigInt(transaction.maxFeePerGas);\n            }\n            if (hasMaxPriorityFeePerGas) {\n                maxPriorityFeePerGas = BigInt(transaction.maxPriorityFeePerGas);\n            }\n            if (maxPriorityFeePerGas > 0 || maxFeePerGas > 0) {\n                const a = maxFeePerGas - baseFeePerGasBigInt;\n                const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n                gasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n            }\n            else {\n                gasPrice = utils_1.Quantity.from(0);\n            }\n        }\n        const block = new ethereum_block_1.RuntimeBlock(parentHeader.number, parentHeader.parentHash, blockchain.coinbase, gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), baseFeePerGasBigInt);\n        const simulatedTransaction = {\n            gas,\n            // if we don't have a from address, our caller sut be the configured coinbase address\n            from: transaction.from == null\n                ? blockchain.coinbase\n                : ethereum_address_1.Address.from(transaction.from),\n            to: transaction.to == null ? null : ethereum_address_1.Address.from(transaction.to),\n            gasPrice,\n            value: transaction.value == null ? null : utils_1.Quantity.from(transaction.value),\n            data,\n            block\n        };\n        return blockchain.simulateTransaction(simulatedTransaction, parentBlock, overrides);\n    }\n    /**\n     * Returns a collection of historical block gas data and optional effective fee spent per unit of gas for a given percentile of block gas usage.\n     *\n     * @param blockCount - Range of blocks between 1 and 1024. Will return less than the requested range if not all blocks are available.\n     * @param newestBlock - Highest block of the requested range.\n     * @param rewardPercentiles - A monotonically increasing list of percentile values. For each block in the requested range,\n     * the transactions will be sorted in ascending order by effective tip per gas and the corresponding effective tip for the percentile\n     * will be determined, accounting for gas consumed.\n     * @returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range\n     *\n     * * `oldestBlock`:  - Lowest number block of the returned range.\n     * * `baseFeePerGas`:  - An array of block base fees per gas. This includes the next block after the newest of the returned range,\n     * because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n     * * `gasUsedRatio`:  - An array of block gas used ratios. These are calculated as the ratio of `gasUsed` and `gasLimit`.\n     * * `reward`:  - An array of effective priority fee per gas data points from a single block. All zeroes are returned if the\n     * block is empty.\n     *\n     * @EIP [1559 - Fee market change](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md)\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to }] });\n     * const feeHistory = await provider.request({ method: \"eth_feeHistory\", params: [\"0x1\", \"0x1\", [10, 100]] });\n     * console.log(feeHistory);\n     * ```\n     */\n    async eth_feeHistory(blockCount, newestBlock, rewardPercentiles) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const MIN_BLOCKS = 1;\n        const MAX_BLOCKS = 1024;\n        const PRECISION_FLOAT = 1e14;\n        const PAD_PRECISION = 16;\n        const PRECISION_BIG_INT = BigInt(1e16);\n        const newestBlockNumber = blockchain.blocks\n            .getEffectiveNumber(newestBlock)\n            .toBigInt();\n        // blockCount must be within MIN_BLOCKS and MAX_BLOCKS. blockCount > newestBlock is\n        // technically valid per the spec but we cannot go past the Genesis Block. Values\n        // above MAX_BLOCKS are technically within spec, however we cap totalBlocks because\n        // of the resource needs and potential abuse of a very large blockCount.\n        const totalBlocks = Number((0, utils_1.min)((0, utils_1.max)(utils_1.Quantity.toBigInt(blockCount), MIN_BLOCKS), newestBlockNumber + 1n, MAX_BLOCKS));\n        const baseFeePerGas = new Array(totalBlocks);\n        const gasUsedRatio = new Array(totalBlocks);\n        let reward;\n        // percentiles must be unique and in ascending order between 0 and 100\n        if (rewardPercentiles.length > 0) {\n            const ERR_INVALID_PERCENTILE = \"invalid reward percentile: percentiles must be unique and in ascending order\";\n            if (rewardPercentiles[0] < 0)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[0]}`);\n            if (rewardPercentiles[rewardPercentiles.length - 1] > 100)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[rewardPercentiles.length - 1]}`);\n            for (let i = 1; i < rewardPercentiles.length; i++) {\n                if (rewardPercentiles[i] <= rewardPercentiles[i - 1]) {\n                    throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[i]} ${rewardPercentiles[i - 1]}`);\n                }\n            }\n            reward = new Array(totalBlocks);\n        }\n        // totalBlocks is inclusive of newestBlock\n        const oldestBlockNumber = newestBlockNumber - BigInt(totalBlocks - 1);\n        let currentBlock;\n        let currentPosition = 0;\n        while (currentPosition < totalBlocks) {\n            currentBlock = await blockchain.blocks.get(utils_1.Quantity.toBuffer(oldestBlockNumber + BigInt(currentPosition)));\n            baseFeePerGas[currentPosition] = currentBlock.header.baseFeePerGas;\n            const gasUsed = currentBlock.header.gasUsed.toBigInt();\n            const gasLimit = currentBlock.header.gasLimit.toBigInt();\n            if (gasUsed === gasLimit) {\n                gasUsedRatio[currentPosition] = 1;\n            }\n            else {\n                gasUsedRatio[currentPosition] = Number(`0.${((gasUsed * PRECISION_BIG_INT) / gasLimit)\n                    .toString()\n                    .padStart(PAD_PRECISION, \"0\")}`);\n            }\n            // For each percentile, find the cost of the unit of gas at that percentage\n            if (reward !== undefined) {\n                const transactions = currentBlock.getTransactions();\n                // If there are no transactions, all reward percentiles are 0.\n                if (transactions.length === 0) {\n                    reward[currentPosition] = rewardPercentiles.map(() => utils_1.Quantity.Zero);\n                }\n                else {\n                    // For all transactions, effectiveGasReward = normalized fee per unit of gas\n                    // earned by the miner regardless of transaction type\n                    const baseFee = baseFeePerGas[currentPosition].toBigInt();\n                    const receipts = await Promise.all(transactions.map(tx => blockchain.transactionReceipts.get(tx.hash.toBuffer())));\n                    // Effective Reward is the amount paid per unit of gas\n                    const effectiveRewardAndGasUsed = transactions\n                        .map((tx, idx) => {\n                        let effectiveGasReward;\n                        if (\"maxPriorityFeePerGas\" in tx) {\n                            const maxPriorityFeePerGas = tx.maxPriorityFeePerGas.toBigInt();\n                            effectiveGasReward = BigInt((0, utils_1.min)(tx.maxFeePerGas.toBigInt() - baseFee, maxPriorityFeePerGas));\n                        }\n                        else {\n                            effectiveGasReward = tx.gasPrice.toBigInt() - baseFee;\n                        }\n                        return {\n                            effectiveGasReward: effectiveGasReward,\n                            gasUsed: utils_1.Quantity.toBigInt(receipts[idx].gasUsed)\n                        };\n                    })\n                        .sort((a, b) => {\n                        if (a.effectiveGasReward > b.effectiveGasReward)\n                            return 1;\n                        if (a.effectiveGasReward < b.effectiveGasReward)\n                            return -1;\n                        return 0;\n                    });\n                    // All of the block transactions are ordered, ascending, from least to greatest by\n                    // the fee the tx paid per unit of gas. For each percentile of block gas consumed,\n                    // what was the fee paid for the unit of gas at that percentile.\n                    reward[currentPosition] = rewardPercentiles.map(percentile => {\n                        let totalGasUsed = 0n;\n                        const targetGas = (gasUsed * BigInt(percentile * PRECISION_FLOAT)) /\n                            PRECISION_BIG_INT;\n                        for (const values of effectiveRewardAndGasUsed) {\n                            totalGasUsed = totalGasUsed + values.gasUsed;\n                            if (targetGas <= totalGasUsed) {\n                                return utils_1.Quantity.from(values.effectiveGasReward);\n                            }\n                        }\n                    });\n                }\n            }\n            currentPosition++;\n        }\n        // baseFeePerGas is calculated based on the header of the previous block, including the block after newestBlock.\n        baseFeePerGas[totalBlocks] = utils_1.Quantity.from(ethereum_block_1.Block.calcNextBaseFee(currentBlock));\n        return {\n            oldestBlock: utils_1.Quantity.from(oldestBlockNumber),\n            baseFeePerGas,\n            gasUsedRatio,\n            reward\n        };\n    }\n    //#endregion\n    //#region debug\n    /**\n     * Attempt to run the transaction in the exact same manner as it was executed\n     * on the network. It will replay any transaction that may have been executed\n     * prior to this one before it will finally attempt to execute the transaction\n     * that corresponds to the given hash.\n     *\n     * In addition to the hash of the transaction you may give it a secondary\n     * optional argument, which specifies the options for this specific call.\n     * The possible options are:\n     *\n     * * `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n     * * `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n     * * `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n     *\n     * @param transactionHash - Hash of the transaction to trace.\n     * @param options - See options in source.\n     * @returns Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n     *\n     * The `structLogs` are an array of logs, which contains the following fields:\n     * * `depth`: The execution depth.\n     * * `error`: Information about an error, if one occurred.\n     * * `gas`: The number of gas remaining.\n     * * `gasCost`: The cost of gas in wei.\n     * * `memory`: An array containing the contract's memory data.\n     * * `op`: The current opcode.\n     * * `pc`: The current program counter.\n     * * `stack`: The EVM execution stack.\n     * * `storage`: An object containing the contract's storage data.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\n     * console.log(transactionTrace);\n     * ```\n     */\n    async debug_traceTransaction(transactionHash, options) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").traceTransaction(transactionHash, options || {});\n    }\n    // TODO: example doesn't return correct value\n    // Issue: https://github.com/trufflesuite/ganache/issues/3203\n    /**\n     * Attempts to replay the transaction as it was executed on the network and\n     * return storage data given a starting key and max number of entries to return.\n     *\n     * @param blockHash - Hash of a block.\n     * @param transactionIndex - Integer of the transaction index position.\n     * @param contractAddress - Address of the contract.\n     * @param startKey - Hash of the start key for grabbing storage entries.\n     * @param maxResult - Integer of maximum number of storage entries to return.\n     * @returns Returns a storage object with the keys being keccak-256 hashes of the storage keys,\n     * and the values being the raw, unhashed key and value for that specific storage slot. Also\n     * returns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n     *\n     * // set value to 19\n     * const data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\n     * console.log(storage);\n     * ```\n     */\n    async debug_storageRangeAt(blockHash, transactionIndex, contractAddress, startKey, maxResult) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").storageRangeAt(blockHash, utils_1.Quantity.toNumber(transactionIndex), contractAddress, startKey, utils_1.Quantity.toNumber(maxResult));\n    }\n    //#endregion\n    //#region personal\n    /**\n     * Returns all the Ethereum account addresses of all keys that have been\n     * added.\n     * @returns The Ethereum account addresses of all keys that have been added.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"personal_listAccounts\"));\n     * ```\n     */\n    async personal_listAccounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Generates a new account with private key. Returns the address of the new\n     * account.\n     * @param passphrase - The passphrase to encrypt the private key with.\n     * @returns The new account's address.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const address = await provider.send(\"personal_newAccount\", [passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_newAccount(passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet.createRandomAccount();\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.\n     *\n     * @param rawKey - The raw, unencrypted private key to import.\n     * @param passphrase - The passphrase to encrypt with.\n     * @returns Returns the address of the new account.\n     * @example\n     * ```javascript\n     * const rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\n     * const passphrase = \"passphrase\";\n     *\n     * const address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_importRawKey(rawKey, passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet_1.default.createAccountFromPrivateKey(utils_1.Data.from(rawKey));\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Locks the account. The account can no longer be used to send transactions.\n     * @param address - The account address to be locked.\n     * @returns Returns `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.send(\"personal_listAccounts\");\n     * const isLocked = await provider.send(\"personal_lockAccount\", [account] );\n     * console.log(isLocked);\n     * ```\n     */\n    async personal_lockAccount(address) {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").lockAccount(address.toLowerCase());\n    }\n    /**\n     * Unlocks the account for use.\n     *\n     * The unencrypted key will be held in memory until the unlock duration\n     * expires. The unlock duration defaults to 300 seconds. An explicit duration\n     * of zero seconds unlocks the key until geth exits.\n     *\n     * The account can be used with `eth_sign` and `eth_sendTransaction` while it is\n     * unlocked.\n     * @param address - 20 Bytes - The address of the account to unlock.\n     * @param passphrase - Passphrase to unlock the account.\n     * @param duration - (default: 300) Duration in seconds how long the account\n     * should remain unlocked for. Set to 0 to disable automatic locking.\n     * @returns `true` if it worked. Throws an error or returns `false` if it did not.\n     * @example\n     * ```javascript\n     * // generate an account\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\n     * console.log(isUnlocked);\n     * ```\n     */\n    async personal_unlockAccount(address, passphrase, duration = 300) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockAccount(addy, passphrase, duration);\n    }\n    /**\n     * Validate the given passphrase and submit transaction.\n     *\n     * The transaction is the same argument as for `eth_sendTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified, signed and\n     * send onto the network. The account is not unlocked globally in the node\n     * and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param txData - The transaction call object as seen in source.\n     * @param passphrase - The passphrase to decrpyt the private key belonging to `tx.from`.\n     * @returns The transaction hash or if unsuccessful an error.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const [to] = await provider.send(\"personal_listAccounts\");\n     *\n     * // use account and passphrase to send the transaction\n     * const txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\n     * console.log(txHash);\n     * ```\n     */\n    async personal_sendTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        const from = tx.from;\n        if (from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, utils_1.Data.from(secretKey));\n    }\n    /**\n     * Validates the given passphrase and signs a transaction that can be\n     * submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * The transaction is the same argument as for `eth_signTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified and signed.\n     * The account is not unlocked globally in the node and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\";\n     * const from = await provider.send(\"personal_newAccount\", [passphrase] );\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\n     * console.log(signedTx)\n     * ```\n     */\n    async personal_signTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        tx.signAndHash(secretKey);\n        return utils_1.Data.from(tx.serialized);\n    }\n    //#endregion\n    //#region rpc\n    /**\n     * Returns object of RPC modules.\n     * @returns RPC modules.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"rpc_modules\"));\n     * ```\n     */\n    async rpc_modules() {\n        return RPC_MODULES;\n    }\n    //#endregion\n    //#region shh\n    /**\n     * Creates new whisper identity in the client.\n     *\n     * @returns - The address of the new identity.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newIdentity\"));\n     * ```\n     */\n    async shh_newIdentity() {\n        return \"0x00\";\n    }\n    /**\n     * Checks if the client hold the private keys for a given identity.\n     *\n     * @param address - The identity address to check.\n     * @returns Returns `true` if the client holds the private key for that identity, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_hasIdentity(address) {\n        return false;\n    }\n    /**\n     * Creates a new group.\n     *\n     * @returns The address of the new group.\n     */\n    async shh_newGroup() {\n        return \"0x00\";\n    }\n    /**\n     * Adds a whisper identity to the group.\n     *\n     * @param address - The identity address to add to a group.\n     * @returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_addToGroup(address) {\n        return false;\n    }\n    /**\n     * Creates filter to notify, when client receives whisper message matching the filter options.\n     *\n     * @param to - (optional) Identity of the receiver. When present it will try to decrypt any incoming message\n     *  if the client holds the private key to this identity.\n     * @param topics - Array of topics which the incoming message's topics should match.\n     * @returns Returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n     * ```\n     */\n    async shh_newFilter(to, topics) {\n        return false;\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     * Additionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns `true` if the filter was successfully uninstalled, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_uninstallFilter(id) {\n        return false;\n    }\n    /**\n     * Polling method for whisper filters. Returns new messages since the last call of this method.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getFilterChanges(id) {\n        return [];\n    }\n    /**\n     * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns See: `shh_getFilterChanges`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getMessages(id) {\n        return false;\n    }\n    /**\n     * Creates a whisper message and injects it into the network for distribution.\n     *\n     * @param postData -\n     * @returns Returns `true` if the message was sent, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_post\", [{}] ));\n     * ```\n     */\n    async shh_post(postData) {\n        return false;\n    }\n    /**\n     * Returns the current whisper protocol version.\n     *\n     * @returns The current whisper protocol version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_version\"));\n     * ```\n     */\n    async shh_version() {\n        return \"2\";\n    }\n    //#endregion\n    //#region txpool\n    /**\n     * Returns the current content of the transaction pool.\n     *\n     * @returns The transactions currently pending or queued in the transaction pool.\n     * @example\n     * ```javascript\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\n     * const queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\n     * const pool = await provider.send(\"txpool_content\");\n     * console.log(pool);\n     * ```\n     */\n    async txpool_content() {\n        const { transactions, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const { transactionPool: { executables, origins } } = transactions;\n        const processMap = (map) => {\n            let res = {};\n            for (let [_, { array, length }] of map) {\n                for (let i = 0; i < length; ++i) {\n                    const transaction = array[i];\n                    const from = transaction.from.toString();\n                    if (res[from] === undefined) {\n                        res[from] = {};\n                    }\n                    // The nonce keys are actual decimal numbers (as strings) and not\n                    // hex literals (based on what geth returns).\n                    const nonce = transaction.nonce.toBigInt().toString();\n                    res[from][nonce] = transaction.toJSON(common);\n                }\n            }\n            return res;\n        };\n        return {\n            pending: processMap(executables.pending),\n            queued: processMap(origins)\n        };\n    }\n}\n_EthereumApi_getId = new WeakMap(), _EthereumApi_filters = new WeakMap(), _EthereumApi_subscriptions = new WeakMap(), _EthereumApi_options = new WeakMap(), _EthereumApi_blockchain = new WeakMap(), _EthereumApi_wallet = new WeakMap();\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_hive\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_info\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_mine\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountNonce\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"evm_setAccountStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_increaseTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_setTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_revert\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"miner_start\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"miner_stop\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setGasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setEtherbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setExtra\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"web3_clientVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"web3_sha3\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_listening\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_peerCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_estimateGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_protocolVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_syncing\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_coinbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getProof\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getCompilers\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_submitWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_submitHashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_mining\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_hashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_gasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_maxPriorityFeePerGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_accounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_blockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_chainId\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionReceipt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendRawTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_sign\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData_v4\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_subscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_unsubscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newBlockFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newPendingTransactionFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"eth_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getTransactionCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 3)\n], EthereumApi.prototype, \"eth_call\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_feeHistory\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"personal_listAccounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_newAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_importRawKey\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_lockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"personal_unlockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"rpc_modules\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_hasIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_addToGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"shh_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getMessages\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_post\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"txpool_content\", null);\nexports.default = EthereumApi;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n// TODO: support http2\n// Issue: https://github.com/trufflesuite/ganache/issues/3474\nconst http_1 = __importStar(require(\"http\"));\nconst https_1 = __importStar(require(\"https\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass HttpHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.url = options.fork.url;\n        this.headers.accept = this.headers[\"content-type\"] = \"application/json\";\n        if (this.url.protocol === \"http:\") {\n            this._request = http_1.default.request;\n            this.agent = new http_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n        else {\n            this._request = https_1.default.request;\n            this.agent = new https_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n    }\n    async handleLengthedResponse(res, length) {\n        return await new Promise((resolve, reject) => {\n            const buffer = Buffer.allocUnsafe(length);\n            let offset = 0;\n            function data(message) {\n                const messageLength = message.length;\n                // note: Node will NOT send us more data than the content-length header\n                // denotes, so we don't have to worry about it.\n                message.copy(buffer, offset, 0, messageLength);\n                offset += messageLength;\n            }\n            function end() {\n                // note: Node doesn't check if the content-length matches (we might\n                // receive less data than expected), so we do that here\n                if (offset !== length) {\n                    // if we didn't receive enough data, throw\n                    reject(new Error(\"content-length mismatch\"));\n                }\n                else {\n                    resolve(buffer);\n                }\n            }\n            res.on(\"data\", data);\n            res.on(\"end\", end);\n            res.on(\"error\", reject);\n        });\n    }\n    async handleChunkedResponse(res) {\n        const chunks = [];\n        let totalLength = 0;\n        for await (let chunk of res) {\n            chunks.push(chunk);\n            totalLength += chunk.length;\n        }\n        return chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, totalLength);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        const key = JSON.stringify({ method, params });\n        const { protocol, hostname: host, port, pathname, search } = this.url;\n        const requestOptions = {\n            protocol,\n            host,\n            port,\n            path: pathname + search,\n            headers: this.headers,\n            method: \"POST\",\n            agent: this.agent,\n            // Node v15 supports AbortSignals directly\n            signal: this.abortSignal\n        };\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const deferred = (0, deferred_1.default)();\n            const postData = `${JSONRPC_PREFIX}${this.id++},${key.slice(1)}`;\n            this.headers[\"content-length\"] = postData.length;\n            const req = this._request(requestOptions);\n            req.on(\"response\", res => {\n                const { headers } = res;\n                let buffer;\n                // in the browser we can't detect if the response is compressed (gzip),\n                // but it doesn't matter since the browser has decompressed already\n                // anyway\n                if (process.env.IS_BROWSER) {\n                    buffer = this.handleChunkedResponse(res);\n                }\n                else {\n                    // if we have a transfer-encoding we don't care about \"content-length\"\n                    // (per HTTP spec). We also don't care about invalid lengths\n                    if (\"transfer-encoding\" in headers) {\n                        buffer = this.handleChunkedResponse(res);\n                    }\n                    else {\n                        const length = headers[\"content-length\"] / 1;\n                        if (isNaN(length) || length <= 0) {\n                            buffer = this.handleChunkedResponse(res);\n                        }\n                        else {\n                            // we have a content-length; use it to pre-allocate the required memory\n                            buffer = this.handleLengthedResponse(res, length);\n                        }\n                    }\n                }\n                // TODO: handle invalid JSON (throws on parse)?\n                // Issue: https://github.com/trufflesuite/ganache/issues/3475\n                buffer.then(buffer => {\n                    try {\n                        deferred.resolve({\n                            response: JSON.parse(buffer),\n                            raw: buffer\n                        });\n                    }\n                    catch {\n                        const resStr = buffer.toString();\n                        let shortStr;\n                        if (resStr.length > 340) {\n                            // truncate long errors so we don't blow up the user's logs\n                            shortStr = resStr.slice(0, 320) + \"…\";\n                        }\n                        else {\n                            shortStr = resStr;\n                        }\n                        let msg = `Invalid JSON response from fork provider:\\n\\n ${shortStr}`;\n                        if ((resStr.startsWith(\"invalid project id\") ||\n                            resStr.startsWith(\"project id required in the url\")) &&\n                            this.url.host.endsWith(\"infura.io\")) {\n                            msg += `\\n\\nThe provided fork url, ${this.url}, may be an invalid or incorrect Infura endpoint.`;\n                            msg += `\\nVisit https://infura.io/docs/ethereum for Infura documentation.`;\n                        }\n                        deferred.reject(new Error(msg));\n                    }\n                });\n            });\n            // after 5 seconds of idle abort the request\n            req.setTimeout(5000, req.abort.bind(req, null));\n            req.on(\"error\", deferred.reject);\n            req.write(postData);\n            req.end();\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n}\nexports.HttpHandler = HttpHandler;\n//# sourceMappingURL=http-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersistentCache = void 0;\nconst tree_1 = require(\"./tree\");\nconst fs_1 = require(\"fs\");\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ancestry_1 = require(\"./ancestry\");\nconst helpers_1 = require(\"./helpers\");\nconst levelup = require(\"levelup\");\nconst levelupOptions = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nconst leveldownOpts = { prefix: \"\" };\nconst maxValueByteBuffer = Buffer.from([0xff]);\n/**\n * A leveldb-backed cache that enables associating immutable data as it existed\n * at a specific height on a blockchain.\n *\n * The design affords faster db reads (one read to get known closest ancestors\n * and descendants) and fast db writes (one write per node in a relationship).\n */\nclass PersistentCache {\n    constructor() {\n        this.version = utils_1.BUFFER_ZERO;\n        /**\n         * `reBalancePromise` is used at shutdown to ensure we are done balancing the\n         * tree\n         *\n         */\n        this._reBalancePromise = null;\n        this.status = \"open\";\n    }\n    static async deleteDb(dbSuffix) {\n        return new Promise((resolve, reject) => {\n            const directory = PersistentCache.getDbDirectory(dbSuffix);\n            leveldown_1.default.destroy(directory, err => {\n                if (err)\n                    return void reject(err);\n                resolve(void 0);\n            });\n        });\n    }\n    /**\n     * Serializes the entire database world state into a JSON tree\n     */\n    static async serializeDb(dbSuffix) {\n        const cache = await PersistentCache.create(dbSuffix);\n        return await new Promise(async (resolve) => {\n            const rs = cache.ancestorDb.createReadStream({\n                gte: utils_1.BUFFER_ZERO,\n                keys: true,\n                values: true\n            });\n            const tree = {};\n            const collection = {};\n            for await (const data of rs) {\n                const { key, value } = data;\n                const node = tree_1.Tree.deserialize(key, value);\n                node.height = node.decodeKey().height.toNumber();\n                const keyHex = key.toString(\"hex\");\n                const parentKeyHex = node.closestKnownAncestor.toString(\"hex\");\n                collection[keyHex] = node;\n                if (node.closestKnownAncestor.length === 0) {\n                    tree[keyHex] = node;\n                }\n                else {\n                    const descendants = collection[parentKeyHex].descendants || {};\n                    descendants[keyHex] = node;\n                    collection[parentKeyHex].descendants = descendants;\n                }\n                node.hash = utils_1.Data.toString(node.hash);\n                node.parent =\n                    node.closestKnownAncestor.length > 0\n                        ? utils_1.Data.toString(collection[parentKeyHex].hash)\n                        : null;\n                delete node.key;\n                // delete node.hash;\n                delete node.closestKnownDescendants;\n                delete node.closestKnownAncestor;\n            }\n            await cache.close();\n            resolve(JSON.parse(JSON.stringify(tree)));\n        });\n    }\n    static getDbDirectory(suffix = \"\") {\n        const { data: directory } = (0, env_paths_1.default)(\"Ganache/db\", {\n            suffix\n        });\n        return directory;\n    }\n    static async create(dbSuffix) {\n        const cache = new PersistentCache();\n        const directory = PersistentCache.getDbDirectory(dbSuffix);\n        await fs_1.promises.mkdir(directory, { recursive: true });\n        const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n        const db = await new Promise((resolve, reject) => {\n            const db = levelup(store, (err) => {\n                if (err)\n                    return void reject(err);\n                resolve(db);\n            });\n        });\n        cache.db = db;\n        cache.cacheDb = (0, subleveldown_1.default)(db, \"c\", levelupOptions);\n        cache.ancestorDb = (0, subleveldown_1.default)(db, \"a\", levelupOptions);\n        await cache.cacheDb.open();\n        await cache.ancestorDb.open();\n        await (0, helpers_1.setDbVersion)(cache.db, cache.version);\n        return cache;\n    }\n    async initialize(height, hash, request) {\n        this.hashBuffer = hash.toBuffer();\n        this.request = request;\n        const { targetBlock, closestAncestor, previousClosestAncestor } = await (0, helpers_1.resolveTargetAndClosestAncestor)(this.ancestorDb, this.request, height, hash);\n        this.ancestry = new ancestry_1.Ancestry(this.ancestorDb, closestAncestor);\n        const atomicBatch = this.ancestorDb.batch();\n        // if we changed closest ancestors remove our targetBlock from the previous\n        // ancestor so our target block doesn't appear in the database more than\n        // once, and update our targetBlock to point to this new ancestor\n        if (previousClosestAncestor &&\n            !previousClosestAncestor.key.equals(closestAncestor.key)) {\n            targetBlock.closestKnownAncestor = closestAncestor.key;\n            const index = previousClosestAncestor.closestKnownDescendants.findIndex(buf => buf.equals(targetBlock.key));\n            previousClosestAncestor.closestKnownDescendants.splice(index, 1);\n            atomicBatch.put(previousClosestAncestor.key, previousClosestAncestor.serialize());\n        }\n        let allKnownDescendants = [...targetBlock.closestKnownDescendants];\n        // if we don't have a closestAncestor it because the target block is block 0\n        if (closestAncestor == null) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        }\n        else {\n            const ancestorsDescendants = [targetBlock.key];\n            await Promise.all(closestAncestor.closestKnownDescendants.map(async (descendantKey) => {\n                // don't match ourself\n                if (descendantKey.equals(targetBlock.key))\n                    return;\n                const { height: descendantHeight } = tree_1.Tree.decodeKey(descendantKey);\n                // if the block number is less than our own it can't be our descendant\n                if (descendantHeight.toBigInt() <= height.toBigInt()) {\n                    ancestorsDescendants.push(descendantKey);\n                    return;\n                }\n                const descendantValue = await this.ancestorDb.get(descendantKey);\n                const descendantNode = tree_1.Tree.deserialize(descendantKey, descendantValue);\n                const descendantRawBlock = await this.getBlock(descendantHeight);\n                // if the block doesn't exist on our chain, it can't be our child,\n                // keep it in the parent\n                if (descendantRawBlock == null ||\n                    descendantRawBlock.hash !== utils_1.Data.toString(descendantNode.hash, 32)) {\n                    ancestorsDescendants.push(descendantKey);\n                }\n                else {\n                    targetBlock.closestKnownDescendants.push(descendantNode.key);\n                    // keep track of *all* known descendants so we don't bother\n                    // checking if they are a known closest descendant later on\n                    allKnownDescendants.push(...descendantNode.closestKnownDescendants);\n                    descendantNode.closestKnownAncestor = targetBlock.key;\n                    // update the descendant node with its newly assigned\n                    // closestKnownAncestor\n                    atomicBatch.put(descendantNode.key, descendantNode.serialize());\n                }\n            }));\n            closestAncestor.closestKnownDescendants = ancestorsDescendants;\n            atomicBatch.put(closestAncestor.key, closestAncestor.serialize());\n        }\n        // TODO(perf): we always re-save the targetBlock but could optimize to only\n        // resave if it is needed.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3485\n        atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        await atomicBatch.write();\n        // we DO want to re-balance the descendants, but we don't want to wait for\n        // it because it can't effect our current fork block's cache results since\n        // these caches will be for blocks higher than our own fork block\n        // Do not `await` this.\n        this._reBalancePromise = this.reBalanceDescendantTree(height, targetBlock, allKnownDescendants)\n            // we don't care if it fails because this is an optimization that only\n            // matters for _future_ runs of ganache for blocks beyond our current fork\n            // block\n            .catch(_ => { })\n            .finally(() => {\n            this._reBalancePromise = null;\n        });\n    }\n    async getBlock(height) {\n        return await (0, helpers_1.getBlockByNumber)(this.request, height);\n    }\n    async reBalanceDescendantTree(height, targetBlock, allKnownDescendants) {\n        const atomicBatch = this.ancestorDb.batch();\n        const closestKnownDescendants = targetBlock.closestKnownDescendants;\n        const startSize = closestKnownDescendants.length;\n        for await (const maybeDescendant of (0, helpers_1.findClosestDescendants)(this.ancestorDb, this.request, height)) {\n            const key = maybeDescendant.key;\n            // don't match with our own self\n            if (targetBlock.key.equals(key))\n                continue;\n            // this possibleDescendent's descendants can't be our direct descendants\n            // because trees can't merge\n            allKnownDescendants.push(...maybeDescendant.closestKnownDescendants);\n            // if this already is a descendent of ours we can skip it\n            if (closestKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // if this already is a descendent of one of our descendants skip it\n            if (allKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // move the descendant from the parent to the target\n            const parentTree = tree_1.Tree.deserialize(maybeDescendant.closestKnownAncestor, await this.ancestorDb.get(maybeDescendant.closestKnownAncestor));\n            parentTree.closestKnownDescendants.splice(parentTree.closestKnownDescendants.findIndex(d => d.equals(key)), 1);\n            maybeDescendant.closestKnownAncestor = targetBlock.key;\n            closestKnownDescendants.push(maybeDescendant.key);\n            atomicBatch.put(parentTree.key, parentTree.serialize());\n            atomicBatch.put(maybeDescendant.key, maybeDescendant.serialize());\n            // if the cache has been closed stop doing work so we can flush what we\n            // have to the database; descendant resolution shouldn't prevent us from\n            // fulling closing.\n            if (this.status === \"closed\") {\n                break;\n            }\n        }\n        // only write if we have changes to write\n        if (startSize !== closestKnownDescendants.length) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n            // check `this.ancestorDb.isOpen()` as we don't need to try to write if\n            // the db was shutdown in the meantime. This can happen if ganache was\n            // closed while we were still updating the descendants\n            if (atomicBatch.length > 0 && this.ancestorDb.isOpen())\n                await atomicBatch.write();\n        }\n    }\n    async get(method, params, key) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return;\n        const height = utils_1.Quantity.from(blockNumber);\n        const bufKey = Buffer.from(key);\n        const start = lexico.encode([height.toBuffer(), bufKey]);\n        const end = Buffer.concat([start, maxValueByteBuffer]);\n        const readStream = this.cacheDb.createReadStream({\n            gt: start,\n            lt: end,\n            keys: true,\n            values: true\n        });\n        for await (const data of readStream) {\n            const { key: k, value } = data;\n            const [_height, _key, blockHash] = lexico.decode(k);\n            // if our key no longer matches make sure we don't keep searching\n            if (!_key.equals(bufKey))\n                return;\n            if (this.hashBuffer.equals(blockHash) ||\n                (await this.ancestry.has(blockHash))) {\n                return value;\n            }\n        }\n    }\n    async put(method, params, key, value) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return false;\n        const height = utils_1.Quantity.from(blockNumber);\n        const dbKey = lexico.encode([\n            height.toBuffer(),\n            Buffer.from(key),\n            this.hashBuffer\n        ]);\n        await this.cacheDb.put(dbKey, value);\n        return true;\n    }\n    async close() {\n        if (this.status === \"closed\")\n            return;\n        this.status = \"closed\";\n        if (this.cacheDb) {\n            await this.cacheDb.close();\n        }\n        if (this.ancestorDb) {\n            await this._reBalancePromise;\n            await this.ancestorDb.close();\n        }\n        if (this.db) {\n            await this.db.close();\n        }\n    }\n}\nexports.PersistentCache = PersistentCache;\n//# sourceMappingURL=persistent-cache.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Server_options, _Server_providerOptions, _Server_status, _Server_app, _Server_httpServer, _Server_listenSocket, _Server_connector, _Server_websocketServer, _Server_initializer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports._DefaultServerOptions = exports.ServerStatus = void 0;\nconst options_1 = require(\"./options\");\nconst aggregate_error_1 = __importDefault(require(\"aggregate-error\"));\nconst uws_js_unofficial_1 = require(\"@trufflesuite/uws-js-unofficial\");\n// Set the \"silent\" config option so we don't output the \"uwebsockets\" header\n// we check for truthiness because `uws` is omitted from the browser build\nuws_js_unofficial_1._cfg &&\n    (0, uws_js_unofficial_1._cfg)(new Uint8Array([115, 105, 108, 101, 110, 116]));\nconst flavors_1 = require(\"@ganache/flavors\");\nconst connector_loader_1 = __importDefault(require(\"./connector-loader\"));\nconst ws_server_1 = __importDefault(require(\"./servers/ws-server\"));\nconst http_server_1 = __importDefault(require(\"./servers/http-server\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst DEFAULT_HOST = \"127.0.0.1\";\n/**\n * Server ready state constants.\n *\n * These are bit flags. This means that you can check if the status is:\n *  * ready: `status === Status.ready` or `status & Status.ready !== 0`\n *  * opening: `status === Status.opening` or `status & Status.opening !== 0`\n *  * open: `status === Status.open` or `status & Status.open !== 0`\n *  * opening || open: `status & Status.openingOrOpen !== 0` or `status & (Status.opening | Status.open) !== 0`\n *  * closing: `status === Status.closing` or `status & Status.closing !== 0`\n *  * closed: `status === Status.closed` or `status & Status.closed !== 0`\n *  * closing || closed: `status & Status.closingOrClosed !== 0` or `status & (Status.closing | Status.closed) !== 0`\n */\nvar ServerStatus;\n(function (ServerStatus) {\n    /**\n     * The Server is in an unknown state; perhaps construction didn't succeed\n     */\n    ServerStatus[ServerStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * The Server has been constructed and is ready to be opened.\n     */\n    ServerStatus[ServerStatus[\"ready\"] = 1] = \"ready\";\n    /**\n     * The Server has started to open, but has not yet finished initialization.\n     */\n    ServerStatus[ServerStatus[\"opening\"] = 2] = \"opening\";\n    /**\n     * The Server is open and ready for connection.\n     */\n    ServerStatus[ServerStatus[\"open\"] = 4] = \"open\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"openingOrOpen\"] = 6] = \"openingOrOpen\";\n    /**\n     * The Server is in the process of closing.\n     */\n    ServerStatus[ServerStatus[\"closing\"] = 8] = \"closing\";\n    /**\n     * The Server is closed and not accepting new connections.\n     */\n    ServerStatus[ServerStatus[\"closed\"] = 16] = \"closed\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"closingOrClosed\"] = 24] = \"closingOrClosed\";\n})(ServerStatus = exports.ServerStatus || (exports.ServerStatus = {}));\n/**\n * For private use. May change in the future.\n * I don't don't think these options should be held in this `core` package.\n * @ignore\n * @internal\n */\nexports._DefaultServerOptions = options_1.serverDefaults;\n/**\n * @public\n */\nclass Server extends emittery_1.default {\n    constructor(providerAndServerOptions = {\n        flavor: flavors_1.DefaultFlavor\n    }) {\n        super();\n        _Server_options.set(this, void 0);\n        _Server_providerOptions.set(this, void 0);\n        _Server_status.set(this, ServerStatus.unknown);\n        _Server_app.set(this, null);\n        _Server_httpServer.set(this, null);\n        _Server_listenSocket.set(this, null);\n        _Server_connector.set(this, void 0);\n        _Server_websocketServer.set(this, null);\n        _Server_initializer.set(this, void 0);\n        __classPrivateFieldSet(this, _Server_options, options_1.serverOptionsConfig.normalize(providerAndServerOptions), \"f\");\n        __classPrivateFieldSet(this, _Server_providerOptions, providerAndServerOptions, \"f\");\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.ready, \"f\");\n        // we need to start initializing now because `initialize` sets the\n        // `provider` property... and someone might want to do:\n        //   const server = Ganache.server();\n        //   const provider = server.provider;\n        //   await server.listen(8545)\n        const loader = connector_loader_1.default.initialize(__classPrivateFieldGet(this, _Server_providerOptions, \"f\"));\n        const connector = (__classPrivateFieldSet(this, _Server_connector, loader.connector, \"f\"));\n        // Since the ConnectorLoader starts an async promise that we intentionally\n        // don't await yet we keep the promise around for something else to handle\n        // later.\n        __classPrivateFieldSet(this, _Server_initializer, Promise.all([\n            loader.promise,\n            this.initialize(connector)\n        ]), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Server_connector, \"f\").provider;\n    }\n    get status() {\n        return __classPrivateFieldGet(this, _Server_status, \"f\");\n    }\n    async initialize(connector) {\n        const _app = (__classPrivateFieldSet(this, _Server_app, (0, uws_js_unofficial_1.App)(), \"f\"));\n        if (__classPrivateFieldGet(this, _Server_options, \"f\").server.ws) {\n            __classPrivateFieldSet(this, _Server_websocketServer, new ws_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        }\n        __classPrivateFieldSet(this, _Server_httpServer, new http_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        await connector.once(\"ready\");\n    }\n    listen(port, host, callback) {\n        if (typeof host === \"function\") {\n            callback = host;\n            host = null;\n        }\n        const callbackIsFunction = typeof callback === \"function\";\n        // Method signature specifies port: number, but we parse a string if provided\n        // inspiration taken from nodejs internal port validator\n        // https://github.com/nodejs/node/blob/8c4b8b201ada6b76d5306c9c7f352e45087fb4a9/lib/internal/validators.js#L208-L219\n        if ((typeof port !== \"number\" && typeof port !== \"string\") ||\n            (typeof port === \"string\" && port.trim().length === 0) ||\n            +port !== +port >>> 0 ||\n            port > 0xffff ||\n            port === 0) {\n            const err = new Error(`Port should be >= 0 and < 65536. Received ${port}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        const portNumber = +port;\n        const status = __classPrivateFieldGet(this, _Server_status, \"f\");\n        if (status === ServerStatus.closing) {\n            // if closing\n            const err = new Error(`Cannot start server while it is closing.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        else if ((status & ServerStatus.openingOrOpen) !== 0) {\n            // if opening or open\n            const err = new Error(`Server is already open, or is opening, on port: ${portNumber}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.opening, \"f\");\n        const promise = Promise.allSettled([\n            __classPrivateFieldGet(this, _Server_initializer, \"f\"),\n            new Promise((resolve) => {\n                // Make sure we have *exclusive* use of this port.\n                // https://github.com/uNetworking/uSockets/commit/04295b9730a4d413895fa3b151a7337797dcb91f#diff-79a34a07b0945668e00f805838601c11R51\n                const LIBUS_LISTEN_EXCLUSIVE_PORT = 1;\n                host\n                    ? __classPrivateFieldGet(this, _Server_app, \"f\").listen(host, portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve)\n                    : __classPrivateFieldGet(this, _Server_app, \"f\").listen(portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve);\n            }).then(listenSocket => {\n                if (listenSocket) {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.open, \"f\");\n                    __classPrivateFieldSet(this, _Server_listenSocket, listenSocket, \"f\");\n                }\n                else {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n                    const err = new Error(`listen EADDRINUSE: address already in use ${host || DEFAULT_HOST}:${portNumber}.`);\n                    // emulate part of node's EADDRINUSE error:\n                    err.code = \"EADDRINUSE\";\n                    throw err;\n                }\n            })\n        ]).then(async (promiseResults) => {\n            const errors = [];\n            if (promiseResults[0].status === \"rejected\") {\n                errors.push(promiseResults[0].reason);\n            }\n            if (promiseResults[1].status === \"rejected\") {\n                errors.push(promiseResults[1].reason);\n            }\n            if (errors.length === 0) {\n                this.emit(\"open\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Server_status, ServerStatus.unknown, \"f\");\n                try {\n                    await this.close();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n                if (errors.length > 1) {\n                    throw new aggregate_error_1.default(errors);\n                }\n                else {\n                    throw errors[0];\n                }\n            }\n        });\n        if (callbackIsFunction) {\n            promise.then(() => callback(null)).catch(callback);\n        }\n        else {\n            return promise;\n        }\n    }\n    async close() {\n        if (__classPrivateFieldGet(this, _Server_status, \"f\") === ServerStatus.opening) {\n            // if opening\n            throw new Error(`Cannot close server while it is opening.`);\n        }\n        else if ((__classPrivateFieldGet(this, _Server_status, \"f\") & ServerStatus.closingOrClosed) !== 0) {\n            // if closing or closed\n            throw new Error(`Server is already closing or closed.`);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closing, \"f\");\n        // clean up the websocket objects\n        const _listenSocket = __classPrivateFieldGet(this, _Server_listenSocket, \"f\");\n        __classPrivateFieldSet(this, _Server_listenSocket, null, \"f\");\n        // close the socket to prevent any more connections\n        if (_listenSocket !== null) {\n            (0, uws_js_unofficial_1.us_listen_socket_close)(_listenSocket);\n        }\n        // close all the connected websockets:\n        if (__classPrivateFieldGet(this, _Server_websocketServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_websocketServer, \"f\").close();\n        }\n        // and do all http cleanup, if any\n        if (__classPrivateFieldGet(this, _Server_httpServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_httpServer, \"f\").close();\n        }\n        // cleanup the connector, provider, etc.\n        if (__classPrivateFieldGet(this, _Server_connector, \"f\") !== null) {\n            await __classPrivateFieldGet(this, _Server_connector, \"f\").close();\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n        __classPrivateFieldSet(this, _Server_app, null, \"f\");\n        await this.emit(\"close\");\n    }\n}\nexports.Server = Server;\n_Server_options = new WeakMap(), _Server_providerOptions = new WeakMap(), _Server_status = new WeakMap(), _Server_app = new WeakMap(), _Server_httpServer = new WeakMap(), _Server_listenSocket = new WeakMap(), _Server_connector = new WeakMap(), _Server_websocketServer = new WeakMap(), _Server_initializer = new WeakMap();\nexports.default = Server;\n//# sourceMappingURL=server.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connector\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./api\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionPool_options, _TransactionPool_priceBump, _TransactionPool_blockchain, _TransactionPool_accountPromises, _TransactionPool_validateTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriageOption = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\n/**\n * Checks if the `replacer` is eligible to replace the `replacee` transaction\n * in the transaction pool queue. Replacement eligibility requires that\n * the transactions have the same nonce and the `replacer` has a gas price\n * that is `gasPrice * priceBump` better than our `replacee`.\n * @param replacee -\n * @param replaceeNonce -\n * @param replacerNonce -\n * @param replacerGasPrice -\n * @param priceBump -\n */\nfunction shouldReplace(replacee, replacerNonce, replacer, priceBump) {\n    const replaceeNonce = replacee.nonce.toBigInt();\n    // if the nonces differ, our replacer is not eligible to replace\n    if (replaceeNonce !== replacerNonce) {\n        return false;\n    }\n    // if the transaction being replaced is in the middle of being mined, we can't\n    // replpace it so let's back out early\n    if (replacee.locked) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.TRANSACTION_LOCKED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    const replacerTip = \"maxPriorityFeePerGas\" in replacer\n        ? replacer.maxPriorityFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replacerMaxFee = \"maxFeePerGas\" in replacer\n        ? replacer.maxFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replaceeTip = \"maxPriorityFeePerGas\" in replacee\n        ? replacee.maxPriorityFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const replaceeMaxFee = \"maxFeePerGas\" in replacee\n        ? replacee.maxFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const tipPremium = replaceeTip + (replaceeTip * priceBump) / 100n;\n    const maxFeePremium = replaceeMaxFee + (replaceeMaxFee * priceBump) / 100n;\n    // if both the tip and max fee of the new transaction aren't\n    // `priceBumpPercent` more than the existing transaction, this transaction is\n    // underpriced\n    if (replacerTip < tipPremium || replacerMaxFee < maxFeePremium) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.UNDERPRICED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    else {\n        return true;\n    }\n}\nfunction byNonce(values, a, b) {\n    return ((values[b].nonce.toBigInt() || 0n) > (values[a].nonce.toBigInt() || 0n));\n}\n/**\n * Used to track a transaction's placement in the transaction pool based off\n * of the its nonce.\n */\nvar TriageOption;\n(function (TriageOption) {\n    /**\n     * Default value. A tx will be added to the future queue if it is not yet\n     * executable based off of the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"FutureQueue\"] = 0] = \"FutureQueue\";\n    /**\n     * The transaction is currently executable based off the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"Executable\"] = 1] = \"Executable\";\n    /**\n     * The transaction is currently executable, has the same nonce as a pending\n     * transaction of the same origin, and has a gas price that is high enough to\n     * replace the currently pending transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesPendingExecutable\"] = 2] = \"ReplacesPendingExecutable\";\n    /**\n     * The transaction is not currently executable but has the same nonce as a\n     * future queued transaction of the same origin and has a gas price that is\n     * high enough to replace the future queued transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesFutureTransaction\"] = 3] = \"ReplacesFutureTransaction\";\n})(TriageOption = exports.TriageOption || (exports.TriageOption = {}));\nclass TransactionPool extends emittery_1.default {\n    constructor(options, blockchain, origins = new Map()) {\n        super();\n        _TransactionPool_options.set(this, void 0);\n        /**\n         * Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\n         */\n        _TransactionPool_priceBump.set(this, void 0);\n        _TransactionPool_blockchain.set(this, void 0);\n        this.executables = {\n            inProgress: new Set(),\n            pending: new Map()\n        };\n        _TransactionPool_accountPromises.set(this, new Map());\n        this.drain = () => {\n            // notify listeners (the blockchain, then the miner, eventually) that we\n            // have executable transactions ready\n            this.emit(\"drain\");\n        };\n        _TransactionPool_validateTransaction.set(this, (transaction) => {\n            // Check the transaction doesn't exceed the current block limit gas.\n            if (transaction.gas > __classPrivateFieldGet(this, _TransactionPool_options, \"f\").blockGasLimit) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.GAS_LIMIT, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            // Should supply enough intrinsic gas\n            const gas = transaction.calculateIntrinsicGas();\n            if (gas === -1n || transaction.gas.toBigInt() < gas) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INTRINSIC_GAS_TOO_LOW, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            return null;\n        });\n        __classPrivateFieldSet(this, _TransactionPool_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _TransactionPool_options, options, \"f\");\n        this.origins = origins;\n        __classPrivateFieldSet(this, _TransactionPool_priceBump, options.priceBump, \"f\");\n    }\n    /**\n     * Inserts a transaction into the pending queue, if executable, or future pool\n     * if not.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns data that can be used to drain the queue\n     */\n    async prepareTransaction(transaction, secretKey) {\n        let err;\n        err = __classPrivateFieldGet(this, _TransactionPool_validateTransaction, \"f\").call(this, transaction);\n        if (err != null) {\n            throw err;\n        }\n        const from = transaction.from;\n        let txNonce;\n        if (!transaction.nonce.isNull()) {\n            txNonce = transaction.nonce.toBigInt();\n        }\n        const origin = from.toString();\n        // We await the `transactorNoncePromise` async request to ensure we process\n        // transactions in FIFO order *by account*. We look up accounts because\n        // ganache fills in missing nonces automatically, and we need to do it in\n        // order.\n        // The trick here is that we might actually get the next nonce from the\n        // account's pending executable transactions, not the account...\n        // But another transaction might currently be getting the nonce from the\n        // account, if it is, we need to wait for it to be done doing that. Hence:\n        let transactorPromise = __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").get(origin);\n        if (transactorPromise) {\n            await transactorPromise;\n        }\n        // if the user called sendTransaction or sendRawTransaction, effectiveGasPrice\n        // hasn't been set yet on the tx. calculating the effectiveGasPrice requires\n        // the block context, so we need to set it outside of the transaction. this\n        // value is updated in the miner as we're more sure of what block the tx will\n        // actually go on, but we still need to set it here to check for valid\n        // transaction replacements of same origin/nonce transactions\n        if (!transaction.effectiveGasPrice &&\n            __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(1559)) {\n            const baseFeePerGas = ethereum_block_1.Block.calcNextBaseFee(__classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").blocks.latest);\n            transaction.updateEffectiveGasPrice(baseFeePerGas);\n        }\n        // we should _probably_ cache `highestNonce`, but it's actually a really hard thing to cache as the current highest\n        // nonce might be invalidated (like if the sender doesn't have enough funds), so we'd have to go back to the previous\n        // highest nonce... but what if that previous highest nonce was also invalidated?! we have to go back to the... you\n        // get the picture.\n        // So... we currently do things sub-optimally:\n        // if we currently have txs in `executableOriginTransactions`, we iterate over them to find the highest nonce\n        // and use that. Otherwise, we just fetch it from the database.\n        // Beware! There might still be race conditions here:\n        //  * if the highest tx executes, which causes it to be removed from the `executableOriginTransactions` heap,\n        // then a new tx comes in _before_ the block is persisted to the database, the nonce might be of the second\n        // tx would be too low.\n        //  * rough idea for a fix: transactions have a `finalize` method that is called _after_ the tx is saved. Maybe\n        // when tx's are executed their nonce is moved to a `highNonceByOrigin` map? We'd check this map in addition to the\n        // `executableOriginTransactions` map, always taking the highest of the two.\n        let highestNonce = 0n;\n        if (!transactorPromise) {\n            transactorPromise = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").accounts.getNonceAndBalance(from);\n            __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").set(origin, transactorPromise);\n            transactorPromise.then(() => {\n                __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").delete(origin);\n            });\n        }\n        const transactor = await transactorPromise;\n        const cost = transaction.gas.toBigInt() * transaction.maxGasPrice().toBigInt() +\n            transaction.value.toBigInt();\n        if (transactor.balance.toBigInt() < cost) {\n            throw new ethereum_utils_1.CodedError(ethereum_utils_1.INSUFFICIENT_FUNDS, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n        }\n        const origins = this.origins;\n        const queuedOriginTransactions = origins.get(origin);\n        let transactionPlacement = TriageOption.FutureQueue;\n        const executables = this.executables.pending;\n        let executableOriginTransactions = executables.get(origin);\n        const priceBump = __classPrivateFieldGet(this, _TransactionPool_priceBump, \"f\");\n        let length;\n        if (executableOriginTransactions &&\n            (length = executableOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // executables queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const pendingArray = executableOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const pendingTx = pendingArray[i];\n                if (shouldReplace(pendingTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    pendingArray[i] = transaction;\n                    // we don't want to mark this transaction as \"executable\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesPendingExecutable;\n                    pendingTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n                // track the highest nonce for all transactions pending from this\n                // origin. If this transaction can't be used as a replacement, it will\n                // use this next highest nonce.\n                const pendingTxNonce = pendingTx.nonce.toBigInt();\n                if (pendingTxNonce > highestNonce)\n                    highestNonce = pendingTxNonce;\n            }\n            if (txNonce === void 0) {\n                // if we aren't signed and don't have a transactionNonce yet set it now\n                txNonce = highestNonce + 1n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce === highestNonce + 1n) {\n                // if our transaction's nonce is 1 higher than the last transaction in the\n                // origin's heap we are executable.\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        else {\n            // since we don't have any executable transactions at the moment, we need\n            // to find our nonce from the account itself...\n            const transactorNonce = transactor.nonce.toBigInt();\n            if (txNonce === void 0) {\n                // if we don't have a transactionNonce, just use the account's next\n                // nonce and mark as executable\n                txNonce = transactorNonce ? transactorNonce : 0n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce < transactorNonce) {\n                // it's an error if the transaction's nonce is <= the persisted nonce\n                throw new ethereum_utils_1.CodedError(`the tx doesn't have the correct nonce. account has nonce of: ${transactorNonce} tx has nonce of: ${txNonce}`, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            else if (txNonce === transactorNonce) {\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        // we have future transactions for this origin, this transaction is not yet\n        // executable, and this transaction is not replacing a previously queued/\n        // executable transaction, then this is potentially eligible to replace a\n        // future transaction\n        if (queuedOriginTransactions &&\n            transactionPlacement !== TriageOption.Executable &&\n            transactionPlacement !== TriageOption.ReplacesPendingExecutable &&\n            (length = queuedOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // future queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const queuedArray = queuedOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const queuedTx = queuedArray[i];\n                if (shouldReplace(queuedTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    queuedArray[i] = transaction;\n                    // we don't want to mark this transaction as \"FutureQueue\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesFutureTransaction;\n                    queuedTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n            }\n        }\n        // now that we know we have a transaction nonce we can sign the transaction\n        // (if we have the secret key)\n        if (secretKey) {\n            transaction.signAndHash(secretKey.toBuffer());\n        }\n        switch (transactionPlacement) {\n            case TriageOption.Executable:\n                // if it is executable add it to the executables queue\n                if (executableOriginTransactions) {\n                    executableOriginTransactions.push(transaction);\n                }\n                else {\n                    // if we don't yet have an executables queue for this origin make one now\n                    executableOriginTransactions = utils_1.Heap.from(transaction, byNonce);\n                    executables.set(origin, executableOriginTransactions);\n                }\n                // Now we need to drain any queued transactions that were previously\n                // not executable due to nonce gaps into the origin's queue...\n                if (queuedOriginTransactions) {\n                    let nextExpectedNonce = txNonce + 1n;\n                    while (true) {\n                        const nextTx = queuedOriginTransactions.peek();\n                        const nextTxNonce = nextTx.nonce.toBigInt() || 0n;\n                        if (nextTxNonce !== nextExpectedNonce) {\n                            break;\n                        }\n                        // we've got a an executable nonce! Put it in the executables queue.\n                        executableOriginTransactions.push(nextTx);\n                        // And then remove this transaction from its origin's queue\n                        if (!queuedOriginTransactions.removeBest()) {\n                            // removeBest() returns `false` when there are no more items after\n                            // the removed item. Let's do some cleanup when that happens.\n                            origins.delete(origin);\n                            break;\n                        }\n                        nextExpectedNonce += 1n;\n                    }\n                }\n                return true;\n            case TriageOption.FutureQueue:\n                // otherwise, put it in the future queue\n                if (queuedOriginTransactions) {\n                    queuedOriginTransactions.push(transaction);\n                }\n                else {\n                    origins.set(origin, utils_1.Heap.from(transaction, byNonce));\n                }\n                return false;\n            case TriageOption.ReplacesPendingExecutable:\n                // we've replaced the best transaction from this origin for this nonce,\n                // and it is executable\n                return true;\n            case TriageOption.ReplacesFutureTransaction:\n                // we've replaced the best transaction from this origin for a future\n                // nonce, so this one isn't executable\n                return false;\n        }\n    }\n    clear() {\n        this.origins.clear();\n        __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").clear();\n        this.executables.pending.clear();\n    }\n    /**\n     * Returns the transaction matching the given hash.\n     *\n     * This isn't the fastest thing... but querying for pending transactions is\n     * likely rare, so leaving this slow so other code paths can be faster might\n     * be okay.\n     *\n     * @param transactionHash -\n     */\n    find(transactionHash) {\n        const { pending, inProgress } = this.executables;\n        // first search pending transactions\n        for (let [_, transactions] of this.origins) {\n            if (transactions === undefined)\n                continue;\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // then transactions eligible for execution\n        for (let [_, transactions] of pending) {\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // and finally transactions that have just been processed, but not yet saved\n        for (let tx of inProgress) {\n            if (tx.hash.toBuffer().equals(transactionHash)) {\n                return tx;\n            }\n        }\n        return null;\n    }\n}\nexports.default = TransactionPool;\n_TransactionPool_options = new WeakMap(), _TransactionPool_priceBump = new WeakMap(), _TransactionPool_blockchain = new WeakMap(), _TransactionPool_accountPromises = new WeakMap(), _TransactionPool_validateTransaction = new WeakMap();\n//# sourceMappingURL=transaction-pool.js.map","\"use strict\";\n/*!\n * @ganache/ethereum\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/connector\"), exports);\n__exportStar(require(\"./src/api-types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Connector_provider, _Connector_handle;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst provider_1 = require(\"./provider\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bufferify_1 = require(\"./helpers/bufferify\");\nfunction isHttp(connection) {\n    return (connection.constructor.name === \"uWS.HttpRequest\" ||\n        connection.constructor.name === \"HttpRequest\");\n}\nclass Connector extends emittery_1.default {\n    constructor(providerOptions = null, executor) {\n        super();\n        _Connector_provider.set(this, void 0);\n        this.BUFFERIFY_THRESHOLD = Connector.BUFFERIFY_THRESHOLD;\n        _Connector_handle.set(this, (payload, connection) => {\n            const method = payload.method;\n            if (method === \"eth_subscribe\") {\n                if (isHttp(connection)) {\n                    return Promise.reject(new ethereum_utils_1.CodedError(\"notifications not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_SUPPORTED));\n                }\n            }\n            const params = payload.params;\n            return __classPrivateFieldGet(this, _Connector_provider, \"f\")._requestRaw({ method, params });\n        });\n        __classPrivateFieldSet(this, _Connector_provider, new provider_1.EthereumProvider(providerOptions, executor), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\");\n    }\n    async connect() {\n        await __classPrivateFieldGet(this, _Connector_provider, \"f\").initialize();\n        // no need to wait for #provider.once(\"connect\") as the initialize()\n        // promise has already accounted for that after the promise is resolved\n        await this.emit(\"ready\");\n    }\n    parse(message) {\n        try {\n            return JSON.parse(message);\n        }\n        catch (e) {\n            throw new ethereum_utils_1.CodedError(e.message, utils_1.JsonRpcErrorCode.PARSE_ERROR);\n        }\n    }\n    handle(payload, connection) {\n        if (Array.isArray(payload)) {\n            // handle batch transactions\n            const promises = payload.map(payload => __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection)\n                .then(({ value }) => value)\n                .catch(e => e));\n            return Promise.resolve({ value: Promise.all(promises) });\n        }\n        else {\n            return __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection);\n        }\n    }\n    format(results, payload) {\n        if (Array.isArray(payload)) {\n            return JSON.stringify(payload.map((payload, i) => {\n                const result = results[i];\n                if (result instanceof Error) {\n                    return (0, utils_1.makeError)(payload.id, result);\n                }\n                else {\n                    return (0, utils_1.makeResponse)(payload.id, result);\n                }\n            }));\n        }\n        else {\n            const json = (0, utils_1.makeResponse)(payload.id, results);\n            if (payload.method === \"debug_traceTransaction\" &&\n                typeof results === \"object\" &&\n                Array.isArray(results.structLogs) &&\n                // for \"large\" debug_traceTransaction results we convert to individual\n                // parts of the response to Buffers, yielded via a Generator function,\n                // instead of using JSON.stringify. This is necessary because we:\n                //   * avoid V8's maximum string length limit of 1GB\n                //   * avoid and the max Buffer length limit of ~2GB (on 64bit\n                //     architectures).\n                //   * avoid heap allocation failures due to trying to hold too much\n                //     data in memory (which can happen if we don't immediately consume\n                //     the `format` result -- by buffering everything into one array,\n                //     for example)\n                //\n                // We don't do this for everything because the bufferfication is so very\n                // very slow.\n                //\n                // TODO(perf): an even better way of solving this would be to convert\n                // `debug_traceTransaction` to a generator that yields chunks (of\n                // Buffer) as soon as they're available. We could then `write` these\n                // individual chunks immediately and our memory use would stay\n                // relatively low and constant.\n                results.structLogs.length > this.BUFFERIFY_THRESHOLD) {\n                return (0, bufferify_1.bufferify)(json, \"\");\n            }\n            else {\n                return JSON.stringify(json);\n            }\n        }\n    }\n    formatError(error, payload) {\n        const json = (0, utils_1.makeError)(payload && payload.id ? payload.id : null, error);\n        return JSON.stringify(json);\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\").disconnect();\n    }\n}\nexports.Connector = Connector;\n_Connector_provider = new WeakMap(), _Connector_handle = new WeakMap();\nConnector.BUFFERIFY_THRESHOLD = 100000;\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumProvider_options, _EthereumProvider_api, _EthereumProvider_wallet, _EthereumProvider_executor, _EthereumProvider_blockchain, _EthereumProvider_send, _EthereumProvider_logRequest, _EthereumProvider_legacySendPayloads, _EthereumProvider_legacySendPayload;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProvider = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst api_1 = __importDefault(require(\"./api\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst blockchain_1 = __importDefault(require(\"./blockchain\"));\nconst fork_1 = require(\"./forking/fork\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseCoinbase(coinbase, initialAccounts) {\n    switch (typeof coinbase) {\n        case \"object\":\n            return coinbase;\n        case \"number\":\n            const account = initialAccounts[coinbase];\n            if (account) {\n                return account.address;\n            }\n            else {\n                throw new Error(`invalid coinbase address index: ${coinbase}`);\n            }\n        case \"string\":\n            return ethereum_address_1.Address.from(coinbase);\n        default: {\n            throw new Error(`coinbase address must be string or number, received: ${coinbase}`);\n        }\n    }\n}\n/**\n * Detects when a ganache:vm:tx:step listener is active and signals the onChange\n * function when the status changes\n * @param provider -\n * @param onChange -\n */\nfunction hookEventSystem(provider, onChange) {\n    let listenerCount = 0;\n    provider.on(emittery_1.default.listenerAdded, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            if (listenerCount === 0) {\n                onChange(true);\n            }\n            listenerCount++;\n        }\n    });\n    provider.on(emittery_1.default.listenerRemoved, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            listenerCount--;\n            if (listenerCount === 0) {\n                onChange(false);\n            }\n        }\n    });\n}\nclass EthereumProvider extends emittery_1.default {\n    constructor(options = {}, executor) {\n        super();\n        _EthereumProvider_options.set(this, void 0);\n        _EthereumProvider_api.set(this, void 0);\n        _EthereumProvider_wallet.set(this, void 0);\n        _EthereumProvider_executor.set(this, void 0);\n        _EthereumProvider_blockchain.set(this, void 0);\n        /**\n         * Remove an event subscription\n         */\n        this.removeListener = this.off;\n        _EthereumProvider_send.set(this, (arg1, arg2) => {\n            let method;\n            let params;\n            let response;\n            if (typeof arg1 === \"string\") {\n                // this signature is (not) non-standard and is only a ganache thing!!!\n                // we should probably remove it, but I really like it so I haven't yet.\n                method = arg1;\n                params = arg2;\n                response = this.request({ method, params });\n            }\n            else if (typeof arg2 === \"function\") {\n                // handle backward compatibility with callback-style ganache-core\n                if (Array.isArray(arg1)) {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayloads, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n                else {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n            }\n            else {\n                throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\n                    \"is no longer synchronous and must be passed a callback as its final argument.\");\n            }\n            return response;\n        });\n        _EthereumProvider_logRequest.set(this, (method, params) => {\n            const options = __classPrivateFieldGet(this, _EthereumProvider_options, \"f\");\n            if (options.logging.verbose) {\n                options.logging.logger.log(`   >  ${method}: ${params == null\n                    ? params\n                    : JSON.stringify(params, null, 2).split(\"\\n\").join(\"\\n   > \")}`);\n            }\n            else {\n                options.logging.logger.log(method);\n            }\n        });\n        /**\n         * Disconnect the provider instance. This will cause the underlying blockchain to be stopped, and any pending\n         * tasks to be rejected. Emits a `disconnect` event once successfully disconnected.\n         * @returns Fullfills with `undefined` once the provider has been disconnected.\n         */\n        this.disconnect = async () => {\n            // executor.stop() will stop accepting new tasks, but will not wait for inflight tasks. These may reject with\n            // (unhelpful) internal errors. See https://github.com/trufflesuite/ganache/issues/3499\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").stop();\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").end();\n            this.emit(\"disconnect\");\n        };\n        //#region legacy\n        _EthereumProvider_legacySendPayloads.set(this, (payloads) => {\n            return Promise.all(payloads.map(__classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\"))).then(results => {\n                let mainError = null;\n                const responses = [];\n                results.forEach(({ error, result }, i) => {\n                    responses.push(result);\n                    if (error) {\n                        if (mainError == null) {\n                            mainError = new Error(\"Batch error:\");\n                        }\n                        mainError.errors[i] = error;\n                    }\n                });\n                return { error: mainError, result: responses };\n            });\n        });\n        _EthereumProvider_legacySendPayload.set(this, async (payload) => {\n            const method = payload.method;\n            const params = payload.params;\n            try {\n                const result = await this.request({ method, params });\n                return {\n                    error: null,\n                    result: (0, utils_1.makeResponse)(payload.id, JSON.parse(JSON.stringify(result)))\n                };\n            }\n            catch (error) {\n                let result;\n                // In order to provide `vmErrorsOnRPCResponse`, the `error` might have\n                // a `result` property that we need to move to the result field. Yes,\n                // it's super weird behavior!\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    result = error.result;\n                    delete error.result;\n                }\n                return { error, result: (0, utils_1.makeError)(payload.id, error, result) };\n            }\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_executor, executor, \"f\");\n        const providerOptions = (__classPrivateFieldSet(this, _EthereumProvider_options, ethereum_options_1.EthereumOptionsConfig.normalize(options), \"f\"));\n        const wallet = (__classPrivateFieldSet(this, _EthereumProvider_wallet, new wallet_1.default(providerOptions.wallet, providerOptions.logging), \"f\"));\n        const accounts = wallet.initialAccounts;\n        const fork = providerOptions.fork.url ||\n            providerOptions.fork.provider ||\n            providerOptions.fork.network;\n        const fallback = fork ? new fork_1.Fork(providerOptions, accounts) : null;\n        const coinbase = parseCoinbase(providerOptions.miner.coinbase, accounts);\n        const blockchain = new blockchain_1.default(providerOptions, coinbase, fallback);\n        __classPrivateFieldSet(this, _EthereumProvider_blockchain, blockchain, \"f\");\n        blockchain.on(\"ganache:vm:tx:before\", event => {\n            this.emit(\"ganache:vm:tx:before\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:step\", event => {\n            this.emit(\"ganache:vm:tx:step\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:after\", event => {\n            this.emit(\"ganache:vm:tx:after\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:console.log\", event => {\n            this.emit(\"ganache:vm:tx:console.log\", event);\n        });\n        hookEventSystem(this, (enable) => {\n            blockchain.toggleStepEvent(enable);\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_api, new api_1.default(providerOptions, wallet, blockchain), \"f\");\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").initialize(__classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").initialAccounts);\n        this.emit(\"connect\");\n    }\n    /**\n     * Returns the options, including defaults and generated, used to start Ganache.\n     */\n    getOptions() {\n        return (0, lodash_clonedeep_1.default)(__classPrivateFieldGet(this, _EthereumProvider_options, \"f\"));\n    }\n    /**\n     * Returns the unlocked accounts\n     */\n    getInitialAccounts() {\n        const accounts = {};\n        const wallet = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\");\n        const unlockedAccounts = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").unlockedAccounts;\n        wallet.initialAccounts.forEach(account => {\n            const address = account.address.toString();\n            accounts[address] = {\n                secretKey: account.privateKey.toString(),\n                balance: account.balance.toBigInt(),\n                unlocked: unlockedAccounts.has(address)\n            };\n        });\n        return accounts;\n    }\n    send(arg1, arg2) {\n        return __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    sendAsync(arg1, arg2) {\n        __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    /**\n     * EIP-1193 style request method\n     * @param args -\n     * @returns A Promise that resolves with the method's result or rejects with a CodedError\n     * @EIP [1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md)\n     */\n    async request(args) {\n        const rawResult = await this._requestRaw(args);\n        const value = await rawResult.value;\n        return JSON.parse(JSON.stringify(value));\n    }\n    /**\n     * INTERNAL. Used when the caller wants to access the original `PromiEvent`,\n     * which would otherwise be flattened into a regular Promise through the\n     * Promise chain.\n     * @param request - the request\n     */\n    async _requestRaw({ method, params }) {\n        __classPrivateFieldGet(this, _EthereumProvider_logRequest, \"f\").call(this, method, params);\n        const result = await __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").execute(__classPrivateFieldGet(this, _EthereumProvider_api, \"f\"), method, params);\n        const promise = result.value;\n        if (promise instanceof utils_1.PromiEvent) {\n            promise.on(\"message\", data => {\n                const normalizedData = JSON.parse(JSON.stringify(data));\n                // EIP-1193\n                this.emit(\"message\", normalizedData);\n                // legacy\n                this.emit(\"data\", {\n                    jsonrpc: \"2.0\",\n                    method: \"eth_subscription\",\n                    params: normalizedData.data\n                });\n            });\n        }\n        const value = promise.catch((error) => {\n            if (__classPrivateFieldGet(this, _EthereumProvider_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    // stringify the result here\n                    // TODO: not sure why the stringification is even needed.\n                    error.result = JSON.parse(JSON.stringify(error.result));\n                }\n            }\n            // then rethrow\n            throw error;\n        });\n        return { value: value };\n    }\n}\nexports.EthereumProvider = EthereumProvider;\n_EthereumProvider_options = new WeakMap(), _EthereumProvider_api = new WeakMap(), _EthereumProvider_wallet = new WeakMap(), _EthereumProvider_executor = new WeakMap(), _EthereumProvider_blockchain = new WeakMap(), _EthereumProvider_send = new WeakMap(), _EthereumProvider_logRequest = new WeakMap(), _EthereumProvider_legacySendPayloads = new WeakMap(), _EthereumProvider_legacySendPayload = new WeakMap();\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Database_options, _Database_cleanupDirectory, _Database_closed, _Database_rootStore, _Database_cleanup;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst tmp_promise_1 = require(\"tmp-promise\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst trie_db_1 = require(\"./trie-db\");\nconst levelup = require(\"levelup\");\n(0, tmp_promise_1.setGracefulCleanup)();\nconst tmpOptions = { prefix: \"ganache_\", unsafeCleanup: true };\nconst noop = () => Promise.resolve();\nclass Database extends emittery_1.default {\n    /**\n     * The Database handles the creation of the database, and all access to it.\n     * Once the database has been fully initialized it will emit a `ready`\n     * event.\n     * @param options - Supports one of two options: `db` (a leveldown compliant\n     * store instance) or `dbPath` (the path to store/read the db instance)\n     * @param blockchain -\n     */\n    constructor(options, blockchain) {\n        super();\n        _Database_options.set(this, void 0);\n        _Database_cleanupDirectory.set(this, noop);\n        _Database_closed.set(this, false);\n        this.directory = null;\n        this.db = null;\n        _Database_rootStore.set(this, void 0);\n        this.initialize = async () => {\n            const levelupOptions = {\n                keyEncoding: \"binary\",\n                valueEncoding: \"binary\"\n            };\n            const store = __classPrivateFieldGet(this, _Database_options, \"f\").db;\n            let db;\n            if (store) {\n                __classPrivateFieldSet(this, _Database_rootStore, (0, encoding_down_1.default)(store, levelupOptions), \"f\");\n                db = levelup(__classPrivateFieldGet(this, _Database_rootStore, \"f\"), {});\n            }\n            else {\n                let directory = __classPrivateFieldGet(this, _Database_options, \"f\").dbPath;\n                if (!directory) {\n                    const dirInfo = await (0, tmp_promise_1.dir)(tmpOptions);\n                    directory = dirInfo.path;\n                    __classPrivateFieldSet(this, _Database_cleanupDirectory, dirInfo.cleanup, \"f\");\n                    // don't continue if we closed while we were waiting for the dir\n                    if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                        return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n                }\n                this.directory = directory;\n                // specify an empty `prefix` for browser-based leveldown (level-js)\n                const leveldownOpts = { prefix: \"\" };\n                const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n                __classPrivateFieldSet(this, _Database_rootStore, store, \"f\");\n                db = levelup(store);\n            }\n            // don't continue if we closed while we were waiting for the db\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            const open = db.open();\n            const sublevelTrie = (0, subleveldown_1.default)(db, \"T\", levelupOptions);\n            this.trie = new trie_db_1.TrieDB(sublevelTrie);\n            this.db = db;\n            await open;\n            // don't continue if we closed while we were waiting for it to open\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            this.blocks = (0, subleveldown_1.default)(db, \"b\", levelupOptions);\n            this.blockIndexes = (0, subleveldown_1.default)(db, \"i\", levelupOptions);\n            this.blockLogs = (0, subleveldown_1.default)(db, \"l\", levelupOptions);\n            this.transactions = (0, subleveldown_1.default)(db, \"t\", levelupOptions);\n            this.transactionReceipts = (0, subleveldown_1.default)(db, \"r\", levelupOptions);\n            this.storageKeys = (0, subleveldown_1.default)(db, \"s\", levelupOptions);\n            return this.emit(\"ready\");\n        };\n        /**\n         * Cleans up the database connections and our tmp directory.\n         */\n        _Database_cleanup.set(this, async () => {\n            const db = this.db;\n            if (db) {\n                await new Promise((resolve, reject) => db.close(err => {\n                    if (err)\n                        return void reject(err);\n                    resolve(void 0);\n                }));\n                await Promise.all([\n                    this.blocks.close(),\n                    this.blockIndexes.close(),\n                    this.blockIndexes.close(),\n                    this.transactionReceipts.close(),\n                    this.transactions.close(),\n                    this.storageKeys.close(),\n                    this.trie.close()\n                ]);\n            }\n            return __classPrivateFieldGet(this, _Database_cleanupDirectory, \"f\").call(this);\n        });\n        __classPrivateFieldSet(this, _Database_options, options, \"f\");\n        this.blockchain = blockchain;\n    }\n    /**\n     * Call `batch` to batch `put` and `del` operations within the same\n     * event loop tick of the provided function. All db operations within the\n     * batch _must_ be executed synchronously.\n     * @param fn - Within this function's event loop tick, all `put` and\n     * `del` database operations are applied in a single atomic operation. This\n     * provides a single write call and if any individual put/del's fail the\n     * entire operation fails and no modifications are made.\n     * @returns a Promise that resolves to the return value\n     * of the provided function.\n     */\n    batch(fn) {\n        const rootDb = __classPrivateFieldGet(this, _Database_rootStore, \"f\").db;\n        const batch = this.db.batch();\n        const originalPut = rootDb.put;\n        const originalDel = rootDb.del;\n        rootDb.put = batch.put.bind(batch);\n        rootDb.del = batch.del.bind(batch);\n        let prom;\n        try {\n            const ret = fn();\n            // PSA: don't let vscode (or yourself) rewrite this to `await` the\n            // `batch.write` call. The `finally` block needs to run _before_ the\n            // write promise has resolved.\n            prom = batch.write().then(() => ret);\n        }\n        finally {\n            rootDb.put = originalPut;\n            rootDb.del = originalDel;\n        }\n        return prom;\n    }\n    /**\n     * Gracefully closes the database and cleans up the file system and waits for\n     * it to fully shut down. Emits a `close` event once complete.\n     * Note: only emits `close` once.\n     */\n    async close() {\n        const wasClosed = __classPrivateFieldGet(this, _Database_closed, \"f\");\n        __classPrivateFieldSet(this, _Database_closed, true, \"f\");\n        await __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n        // only emit `close` once\n        if (!wasClosed) {\n            this.emit(\"close\");\n            return;\n        }\n    }\n}\nexports.default = Database;\n_Database_options = new WeakMap(), _Database_cleanupDirectory = new WeakMap(), _Database_closed = new WeakMap(), _Database_rootStore = new WeakMap(), _Database_cleanup = new WeakMap();\n//# sourceMappingURL=database.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockLogManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst filter_parsing_1 = require(\"../helpers/filter-parsing\");\nclass BlockLogManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_utils_1.BlockLogs);\n        _BlockLogManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _BlockLogManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const log = await super.get(key);\n        if (log) {\n            log.blockNumber = utils_1.Quantity.from(key);\n        }\n        else if (__classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback) {\n            const block = utils_1.Quantity.from(key);\n            const res = await __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback.request(\"eth_getLogs\", [{ fromBlock: block, toBlock: block }]);\n            return ethereum_utils_1.BlockLogs.fromJSON(res);\n        }\n        return log;\n    }\n    async getLogs(filter) {\n        const blockchain = __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\");\n        if (\"blockHash\" in filter) {\n            const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter);\n            const blockNumber = await blockchain.blocks.getNumberFromHash(filter.blockHash);\n            if (!blockNumber)\n                return [];\n            const logs = await this.get(blockNumber);\n            return logs ? [...logs.filter(addresses, topics)] : [];\n        }\n        else {\n            const { addresses, topics, fromBlock, toBlockNumber } = (0, filter_parsing_1.parseFilter)(filter, blockchain);\n            const pendingLogsPromises = [\n                this.get(fromBlock.toBuffer())\n            ];\n            const fromBlockNumber = fromBlock.toNumber();\n            // if we have a range of blocks to search, do that here:\n            if (fromBlockNumber !== toBlockNumber) {\n                // fetch all the blockLogs in-between `fromBlock` and `toBlock` (excluding\n                // from, because we already started fetching that one)\n                for (let i = fromBlockNumber + 1, l = toBlockNumber + 1; i < l; i++) {\n                    pendingLogsPromises.push(this.get(utils_1.Quantity.toBuffer(i)));\n                }\n            }\n            // now filter and compute all the blocks' blockLogs (in block order)\n            return Promise.all(pendingLogsPromises).then(blockLogsRange => {\n                const filteredBlockLogs = [];\n                blockLogsRange.forEach(blockLogs => {\n                    // TODO(perf): this loops over all addresses for every block.\n                    // Maybe make it loop only once?\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3482\n                    if (blockLogs)\n                        filteredBlockLogs.push(...blockLogs.filter(addresses, topics));\n                });\n                return filteredBlockLogs;\n            });\n        }\n    }\n}\nexports.default = BlockLogManager;\n_BlockLogManager_blockchain = new WeakMap();\n//# sourceMappingURL=blocklog-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionManager_queue, _TransactionManager_paused, _TransactionManager_resumer, _TransactionManager_resolver, _TransactionManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst transaction_pool_1 = __importDefault(require(\"../transaction-pool\"));\nconst promise_queue_1 = __importDefault(require(\"@ganache/promise-queue\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n// since our Manager needs to receive and Instantiable class with a\n// consistent return type and our transaction factory can return\n// any number of transaction types, we pass in this empty\n// no op class to fool the Manager\nclass NoOp {\n}\nclass TransactionManager extends manager_1.default {\n    constructor(options, common, blockchain, base) {\n        super(base, ethereum_transaction_1.TransactionFactory, common);\n        _TransactionManager_queue.set(this, new promise_queue_1.default());\n        _TransactionManager_paused.set(this, false);\n        _TransactionManager_resumer.set(this, void 0);\n        _TransactionManager_resolver.set(this, void 0);\n        _TransactionManager_blockchain.set(this, void 0);\n        this.fromFallback = async (transactionHash) => {\n            const { fallback } = __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\");\n            const tx = await fallback.request(\"eth_getTransactionByHash\", [\n                utils_1.Data.toString(transactionHash)\n            ]);\n            if (tx == null)\n                return null;\n            const blockHash = utils_1.Data.from(tx.blockHash, 32);\n            const blockNumber = utils_1.Quantity.from(tx.blockNumber);\n            const index = utils_1.Quantity.from(tx.transactionIndex);\n            // don't get the transaction if the requested transaction is _after_ our\n            // fallback's blocknumber because it doesn't exist in our local chain.\n            if (!fallback.isValidForkBlockNumber(blockNumber))\n                return null;\n            const extra = [\n                ethereum_address_1.Address.toBuffer(tx.from),\n                utils_1.Data.toBuffer(tx.hash, 32),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                index.toBuffer(),\n                utils_1.Quantity.toBuffer(tx.gasPrice)\n            ];\n            const common = fallback.getCommonForBlockNumber(fallback.common, blockNumber.toBigInt());\n            const runTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, extra);\n            return runTx.serializeForDb(blockHash, blockNumber, index);\n        };\n        /**\n         * Resume processing transactions. Has no effect if not paused.\n         */\n        this.resume = () => {\n            if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\"))\n                return;\n            __classPrivateFieldSet(this, _TransactionManager_paused, false, \"f\");\n            __classPrivateFieldGet(this, _TransactionManager_resolver, \"f\").call(this);\n        };\n        __classPrivateFieldSet(this, _TransactionManager_blockchain, blockchain, \"f\");\n        this.transactionPool = new transaction_pool_1.default(options, blockchain);\n    }\n    async getRaw(transactionHash) {\n        return super.getRaw(transactionHash).then(block => {\n            if (block == null && __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\").fallback) {\n                return this.fromFallback(transactionHash);\n            }\n            return block;\n        });\n    }\n    async get(key) {\n        const factory = (await super.get(key));\n        if (!factory)\n            return null;\n        return factory.tx;\n    }\n    /**\n     * Adds the transaction to the transaction pool.\n     *\n     * Returns a promise that is only resolved in the order it was added.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns `true` if the `transaction` is immediately executable, `false` if\n     * it may be valid in the future. Throws if the transaction is invalid.\n     */\n    async add(transaction, secretKey) {\n        if (__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _TransactionManager_resumer, \"f\");\n        }\n        // Because ganache requires determinism, we can't allow varying IO times to\n        // potentially affect the order in which transactions are inserted into the\n        // pool, so we use a FIFO queue to _return_ transaction insertions in the\n        // order the were received.\n        const insertion = this.transactionPool.prepareTransaction(transaction, secretKey);\n        const result = await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").add(insertion);\n        if (result) {\n            this.transactionPool.drain();\n        }\n        return result;\n    }\n    /**\n     * Immediately ignores all transactions that were in the process of being\n     * added to the pool. These transactions' `push` promises will be resolved\n     * immediately with the value `false` and will _not_ be added to the pool.\n     *\n     * Also clears all transactions that were already added to the pool.\n     *\n     * Transactions that are currently in the process of being mined may still be\n     * mined.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").clear(false);\n        this.transactionPool.clear();\n    }\n    /**\n     * Stop processing _new_ transactions; puts new requests in a queue. Has no\n     * affect if already paused.\n     */\n    async pause() {\n        if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            // stop processing new transactions immediately\n            __classPrivateFieldSet(this, _TransactionManager_paused, true, \"f\");\n            __classPrivateFieldSet(this, _TransactionManager_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _TransactionManager_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        // then wait until all async things we were already processing are done\n        // before returning\n        if (__classPrivateFieldGet(this, _TransactionManager_queue, \"f\").isBusy()) {\n            await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").emit(\"idle\");\n        }\n    }\n}\nexports.default = TransactionManager;\n_TransactionManager_queue = new WeakMap(), _TransactionManager_paused = new WeakMap(), _TransactionManager_resumer = new WeakMap(), _TransactionManager_resolver = new WeakMap(), _TransactionManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-manager.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PromiseQueue_queue, _PromiseQueue_tryResolve, _PromiseQueue_tryResolveChain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst entry_1 = __importDefault(require(\"./src/entry\"));\nconst emitteryMethods = [\"emit\", \"once\"];\n/**\n * Creates a FIFO queue that ensures promises are _resolved_ in the order\n * they were added.\n *\n * This is different than a FIFO queue that _executes_ functions that\n * return promises; this queue is for the promises themselves.\n *\n * @example\n * ```javascript\n * const queue = new PromiseQueue();\n *\n * const slow = new Promise(resolve => setTimeout(resolve, 1000, \"slow\"));\n * const fast = Promise.resolve(\"fast\");\n *\n * await Promise.race([\n *   queue.add(slow),\n *   queue.add(fast)\n * ]); // returns \"slow\"\n *\n * // Additionally, the queued promise chain can be cleared via `queue.clear(value)`.\n * // This will cause the chain of promises to all resolve immediately with the\n * // given value. *\n * //\n * // * note: whatever the promise starting doing when it was created will still\n * // happen, no promises are aborted; rather, the return value is ignored.\n * ```\n */\nlet PromiseQueue = class PromiseQueue {\n    constructor() {\n        // TODO(perf): a singly linked list is probably a better option here\n        _PromiseQueue_queue.set(this, []);\n        _PromiseQueue_tryResolve.set(this, (queue, entry) => {\n            // if this is now the highest priority entry, resolve the outer\n            // Promise\n            if (entry === queue[0]) {\n                queue.shift();\n                entry.resolve(entry.value);\n                // then try resolving the rest\n                __classPrivateFieldGet(this, _PromiseQueue_tryResolveChain, \"f\").call(this, queue);\n            }\n            else {\n                entry.resolved = true;\n            }\n        });\n        /**\n         * Removes all _resolved_ promises from the front of the chain of promises.\n         */\n        _PromiseQueue_tryResolveChain.set(this, (queue) => {\n            let first = queue[0];\n            while (first && first.resolved) {\n                queue.shift();\n                first.resolve(first.value);\n                first = queue[0];\n            }\n            // if there is nothing left to do emit `\"idle\"`\n            if (queue.length === 0) {\n                this.emit(\"idle\");\n            }\n        });\n    }\n    /**\n     * Returns true if there are promises pending in the queue\n     */\n    isBusy() {\n        return __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").length !== 0;\n    }\n    /**\n     * Adds the promise to the end of the queue.\n     * @param promise -\n     * @returns a promise that resolves with the given promise's result. If the\n     * queue was `clear`ed before the promise could be shifted off the return\n     * value will be the `value` passed to `clear`.\n     */\n    add(promise) {\n        const queue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\");\n        const entry = new entry_1.default(promise, queue, __classPrivateFieldGet(this, _PromiseQueue_tryResolve, \"f\"));\n        queue.push(entry);\n        return entry.promise;\n    }\n    /**\n     * Clears all promises from the queue and sets their resolved values to the\n     * given value.\n     */\n    clear(value) {\n        // remove all entries from the queue and mark them.\n        const cancelledQueue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").splice(0);\n        cancelledQueue.forEach(entry => {\n            entry.queue = cancelledQueue;\n            entry.value = value;\n        });\n    }\n};\n_PromiseQueue_queue = new WeakMap(), _PromiseQueue_tryResolve = new WeakMap(), _PromiseQueue_tryResolveChain = new WeakMap();\nPromiseQueue = __decorate([\n    emittery_1.default.mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiseQueue);\nexports.default = PromiseQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkTrie = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"../helpers/trie\");\nconst trie_2 = require(\"@ethereumjs/trie\");\nconst lexico = __importStar(require(\"./lexicographic-key-codec\"));\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst trie_db_1 = require(\"../trie-db\");\nconst DELETED_VALUE = Buffer.allocUnsafe(1).fill(1);\nconst GET_CODE = \"eth_getCode\";\nconst GET_NONCE = \"eth_getTransactionCount\";\nconst GET_BALANCE = \"eth_getBalance\";\nconst GET_STORAGE_AT = \"eth_getStorageAt\";\nconst MetadataSingletons = new WeakMap();\nconst LEVELDOWN_OPTIONS = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nfunction isEqualKey(encodedKey, address, key) {\n    const decodedKey = lexico.decode(encodedKey);\n    const [_, keyAddress, deletedKey] = decodedKey;\n    return keyAddress.equals(address) && deletedKey.equals(key);\n}\nclass ForkTrie extends trie_1.GanacheTrie {\n    constructor(db, root, blockchain) {\n        super(db, root, blockchain);\n        this.address = null;\n        this.isPreForkBlock = false;\n        /**\n         * Gets an account from the fork/fallback.\n         *\n         * @param address - the address of the account\n         * @param blockNumber - the block number at which to query the fork/fallback.\n         * @param stateRoot - the state root at the given blockNumber\n         */\n        this.accountFromFallback = async (address, blockNumber) => {\n            const { fallback } = this.blockchain;\n            const number = this.blockchain.fallback.selectValidForkBlockNumber(blockNumber);\n            // get nonce, balance, and code from the fork/fallback\n            const codeProm = fallback.request(GET_CODE, [address, number]);\n            const promises = [\n                fallback.request(GET_NONCE, [address, number]),\n                fallback.request(GET_BALANCE, [address, number]),\n                null\n            ];\n            // create an account so we can serialize everything later\n            const account = new ethereum_utils_1.Account(address);\n            // because code requires additional asynchronous processing, we await and\n            // process it ASAP\n            try {\n                const codeHex = await codeProm;\n                if (codeHex !== \"0x\") {\n                    const code = utils_1.Data.toBuffer(codeHex);\n                    // the codeHash is just the keccak hash of the code itself\n                    account.codeHash = (0, utils_1.keccak)(code);\n                    if (!account.codeHash.equals(util_1.KECCAK256_NULL)) {\n                        // insert the code directly into the database with a key of `codeHash`\n                        promises[2] = this.db.put(account.codeHash, code);\n                    }\n                }\n            }\n            catch (e) {\n                // Since we fired off some promises that may throw themselves we need to\n                // catch these errors and discard them.\n                Promise.all(promises).catch(e => { });\n                throw e;\n            }\n            // finally, set the `nonce` and `balance` on the account before returning\n            // the serialized data\n            const [nonce, balance] = await Promise.all(promises);\n            account.nonce =\n                nonce === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(nonce, true);\n            account.balance =\n                balance === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(balance);\n            return account.serialize();\n        };\n        this.storageFromFallback = async (address, key, blockNumber) => {\n            const result = await this.blockchain.fallback.request(GET_STORAGE_AT, [\n                `0x${address.toString(\"hex\")}`,\n                `0x${key.toString(\"hex\")}`,\n                this.blockchain.fallback.selectValidForkBlockNumber(blockNumber)\n            ]);\n            if (!result)\n                return null;\n            // remove the `0x` and all leading 0 pairs:\n            const compressed = result.replace(/^0x(00)*/, \"\");\n            const buf = Buffer.from(compressed, \"hex\");\n            return (0, rlp_1.encode)(buf);\n        };\n        this.accounts = blockchain.accounts;\n        this.blockNumber = this.blockchain.fallback.blockNumber;\n        this.forkBlockNumber = this.blockNumber.toBigInt();\n        let metadataDB = MetadataSingletons.get(db);\n        if (!metadataDB) {\n            metadataDB = db.sublevel(\"f\", LEVELDOWN_OPTIONS);\n            MetadataSingletons.set(db, metadataDB);\n        }\n        this.metadataDB = metadataDB;\n        this.checkpointedMetadata = new trie_2.CheckpointDB(new trie_db_1.TrieDB(this.metadataDB));\n    }\n    checkpoint() {\n        super.checkpoint();\n        this.checkpointedMetadata.checkpoint(this.root());\n    }\n    async commit() {\n        await Promise.all([super.commit(), this.checkpointedMetadata.commit()]);\n    }\n    async revert() {\n        await Promise.all([super.revert(), this.checkpointedMetadata.revert()]);\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this._root = stateRoot;\n        this.address = address;\n        this.blockNumber = blockNumber;\n        this.isPreForkBlock = blockNumber.toBigInt() < this.forkBlockNumber;\n    }\n    async put(key, val) {\n        return super.put(key, val);\n    }\n    /**\n     * Removes saved metadata from the given block range (inclusive)\n     * @param startBlockNumber - (inclusive)\n     * @param endBlockNumber - (inclusive)\n     */\n    async revertMetaData(startBlockNumber, endBlockNumber) {\n        const db = this.metadataDB;\n        const stream = db.createKeyStream({\n            gte: lexico.encode([startBlockNumber.toBuffer()]),\n            lt: lexico.encode([\n                utils_1.Quantity.from(endBlockNumber.toBigInt() + 1n).toBuffer()\n            ])\n        });\n        const batch = db.batch();\n        for await (const key of stream) {\n            batch.del(key);\n        }\n        await batch.write();\n    }\n    createDelKey(key) {\n        const blockNum = this.blockNumber.toBuffer();\n        return lexico.encode([blockNum, this.address, key]);\n    }\n    /**\n     * Checks if the key was deleted (locally -- not on the fork)\n     * @param key -\n     */\n    async keyWasDeleted(key) {\n        const selfAddress = this.address === null ? utils_1.BUFFER_EMPTY : this.address;\n        // check the uncommitted checkpoints for deleted keys before\n        // checking the database itself\n        // TODO(perf): there is probably a better/faster way of doing this for the\n        // common case.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3483\n        const { checkpoints } = this.checkpointedMetadata;\n        for (let i = checkpoints.length - 1; i >= 0; i--) {\n            for (let [encodedKeyStr, value] of checkpoints[i].keyValueMap.entries()) {\n                if (!value || !value.equals(DELETED_VALUE))\n                    continue;\n                const encodedKey = Buffer.from(encodedKeyStr, \"binary\");\n                if (isEqualKey(encodedKey, selfAddress, key))\n                    return true;\n            }\n        }\n        // since we didn't find proof of deletion in a checkpoint let's check the\n        // database for it.\n        // We start searching from our database key (blockNum + address + key)\n        // down to the earliest block we know about.\n        // TODO(perf): this is just going to be slow once we get lots of keys\n        // because it just checks every single key we've ever deleted (before this\n        // one).\n        // Issue: https://github.com/trufflesuite/ganache/issues/3484\n        const db = this.metadataDB;\n        const stream = db.createReadStream({\n            lte: this.createDelKey(key),\n            reverse: true\n        });\n        for await (const data of stream) {\n            const { key: encodedKey, value } = data;\n            if (!value || !value.equals(DELETED_VALUE))\n                continue;\n            if (isEqualKey(encodedKey, selfAddress, key))\n                return true;\n        }\n        // we didn't find proof of deletion so we return `false`\n        return false;\n    }\n    // note: this function is a slightly modified version of\n    // https://github.com/ethereumjs/ethereumjs-monorepo/blob/34f3dcdf37d2fbeffeb41dc3de693f59b91c46bc/packages/trie/src/trie/trie.ts#L218\n    async del(key) {\n        await this._lock.acquire();\n        // we only track if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock) {\n            const delKey = this.createDelKey(key);\n            const metaDataPutPromise = this.checkpointedMetadata.put(delKey, DELETED_VALUE);\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n            await metaDataPutPromise;\n        }\n        else {\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n        }\n        this._lock.release();\n    }\n    async get(key) {\n        const value = await super.get(key);\n        if (value != null)\n            return value;\n        // since we don't have this key in our local trie check if we've have\n        // deleted it (locally)\n        // we only check if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock && (await this.keyWasDeleted(key)))\n            return null;\n        if (this.address === null) {\n            // if the trie context's address isn't set, our key represents an address:\n            return this.accountFromFallback(ethereum_address_1.Address.from(key), this.blockNumber);\n        }\n        else {\n            // otherwise the key represents storage at the given address:\n            return this.storageFromFallback(this.address, key, this.blockNumber);\n        }\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of ForkTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will\n     * contain the checkpointing metadata and will use the same scratch as\n     * underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new ForkTrie(this.db.copy(), this.root(), this.blockchain);\n        secureTrie.accounts = this.accounts;\n        secureTrie.address = this.address;\n        secureTrie.blockNumber = this.blockNumber;\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n            // Our metadata checkpoints need to be the same reference to the\n            // parent's metadata checkpoints so that we can continue to track these\n            // changes on this copy, otherwise deletions made to a contract's storage\n            // may not be tracked.\n            // Note: db.checkpoints don't need this same treatment because of the way\n            // the statemanager uses a contract's trie: it doesn't ever save to it.\n            // Instead, it saves to its own internal cache, which eventually gets\n            // reverted or committed (flushed). Our metadata doesn't utilize a central\n            // cache.\n            secureTrie.checkpointedMetadata.checkpoints =\n                this.checkpointedMetadata.checkpoints;\n        }\n        return secureTrie;\n    }\n}\nexports.ForkTrie = ForkTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionReceiptManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nclass TransactionReceiptManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_transaction_1.InternalTransactionReceipt);\n        _TransactionReceiptManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _TransactionReceiptManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const receipt = await super.get(key);\n        if (receipt) {\n            return receipt;\n        }\n        else if (__classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback) {\n            const res = await __classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback.request(\"eth_getTransactionReceipt\", [typeof key === \"string\" ? key : utils_1.Data.from(key)]);\n            if (!res)\n                return null;\n            const status = res.status === \"0x1\" ? utils_1.Quantity.One.toBuffer() : utils_1.BUFFER_ZERO;\n            const cumulativeGasUsed = utils_1.Quantity.toBuffer(res.cumulativeGasUsed);\n            const logsBloom = utils_1.Data.toBuffer(res.logsBloom, 256);\n            const logs = res.logs.map(log => [\n                ethereum_address_1.Address.from(log.address).toBuffer(),\n                log.topics.map(topic => utils_1.Data.toBuffer(topic)),\n                Array.isArray(log.data)\n                    ? log.data.map(data => utils_1.Data.toBuffer(data))\n                    : utils_1.Data.toBuffer(log.data)\n            ]);\n            const gasUsed = utils_1.Quantity.toBuffer(res.gasUsed);\n            const contractAddress = res.contractAddress == null\n                ? utils_1.BUFFER_EMPTY\n                : ethereum_address_1.Address.from(res.contractAddress).toBuffer();\n            return ethereum_transaction_1.InternalTransactionReceipt.fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress);\n        }\n    }\n}\nexports.default = TransactionReceiptManager;\n_TransactionReceiptManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-receipt-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Fork_abortController, _Fork_handler, _Fork_options, _Fork_accounts, _Fork_hardfork, _Fork_setCommonFromChain, _Fork_setBlockDataFromChainAndOptions, _Fork_syncAccounts;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fork = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst abort_controller_1 = __importDefault(require(\"abort-controller\"));\nconst common_1 = require(\"@ethereumjs/common\");\nconst http_handler_1 = require(\"./handlers/http-handler\");\nconst ws_handler_1 = require(\"./handlers/ws-handler\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst block_manager_1 = __importDefault(require(\"../data-managers/block-manager\"));\nconst provider_handler_1 = require(\"./handlers/provider-handler\");\nconst persistent_cache_1 = require(\"./persistent-cache/persistent-cache\");\nconst url_1 = require(\"url\");\nasync function fetchChainId(fork) {\n    const chainIdHex = await fork.request(\"eth_chainId\", []);\n    return parseInt(chainIdHex, 16);\n}\nasync function fetchNetworkId(fork) {\n    const networkIdStr = await fork.request(\"net_version\", []);\n    return parseInt(networkIdStr, 10);\n}\nfunction fetchBlockNumber(fork) {\n    // {disableCache: true} required so we never cache the blockNumber, as forking\n    // shouldn't ever cache a method that can change!\n    return fork.request(\"eth_blockNumber\", [], { disableCache: true });\n}\nfunction fetchBlock(fork, blockNumber) {\n    return fork.request(\"eth_getBlockByNumber\", [blockNumber, true]);\n}\nasync function fetchNonce(fork, address, blockNumber) {\n    const nonce = await fork.request(\"eth_getTransactionCount\", [\n        address,\n        blockNumber\n    ]);\n    return utils_1.Quantity.from(nonce);\n}\nclass Fork {\n    constructor(options, accounts) {\n        _Fork_abortController.set(this, new abort_controller_1.default());\n        _Fork_handler.set(this, void 0);\n        _Fork_options.set(this, void 0);\n        _Fork_accounts.set(this, void 0);\n        _Fork_hardfork.set(this, void 0);\n        _Fork_setCommonFromChain.set(this, async (chainIdPromise) => {\n            const [chainId, networkId] = await Promise.all([\n                chainIdPromise,\n                fetchNetworkId(this)\n            ]);\n            this.chainId = chainId;\n            this.common = common_1.Common.custom({\n                name: \"ganache-fork\",\n                defaultHardfork: __classPrivateFieldGet(this, _Fork_hardfork, \"f\"),\n                // use the remote chain's network id mostly because truffle's debugger\n                // needs it to match in order to fetch sources\n                networkId,\n                // we use ganache's own chain id for blocks _after_ the fork to prevent\n                // replay attacks\n                chainId: __classPrivateFieldGet(this, _Fork_options, \"f\").chain.chainId,\n                comment: \"Local test network fork\"\n            }, { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n            // disable listeners to common since we don't actually cause any `emit`s,\n            // but other EVM parts to listen and will make node complain about too\n            // many listeners.\n            this.common.on = () => { };\n        });\n        _Fork_setBlockDataFromChainAndOptions.set(this, async (chainIdPromise) => {\n            const { fork: options } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n            if (options.blockNumber === ethereum_utils_1.Tag.latest) {\n                const [latestBlock, chainId] = await Promise.all([\n                    fetchBlock(this, ethereum_utils_1.Tag.latest),\n                    chainIdPromise\n                ]);\n                let blockNumber = parseInt(latestBlock.number, 16);\n                const effectiveBlockNumber = utils_1.KNOWN_CHAINIDS.has(chainId)\n                    ? Math.max(blockNumber - options.preLatestConfirmations, 0)\n                    : blockNumber;\n                let block;\n                if (effectiveBlockNumber !== blockNumber) {\n                    block = await fetchBlock(this, utils_1.Quantity.from(effectiveBlockNumber));\n                }\n                else {\n                    block = latestBlock;\n                }\n                options.blockNumber = effectiveBlockNumber;\n                this.blockNumber = utils_1.Quantity.from(effectiveBlockNumber);\n                this.stateRoot = utils_1.Data.from(block.stateRoot);\n                await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, this.blockNumber);\n                return block;\n            }\n            else if (Number.isInteger(options.blockNumber) &&\n                options.blockNumber >= 0) {\n                const blockNumber = utils_1.Quantity.from(options.blockNumber);\n                const [block] = await Promise.all([\n                    fetchBlock(this, blockNumber).then(async (block) => {\n                        this.stateRoot = block.stateRoot;\n                        await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, blockNumber);\n                        return block;\n                    }),\n                    fetchBlockNumber(this).then((latestBlockNumberHex) => {\n                        const latestBlockNumberInt = parseInt(latestBlockNumberHex, 16);\n                        // if our block number option is _after_ the current block number\n                        // throw, as it likely wasn't intentional and doesn't make sense.\n                        if (options.blockNumber > latestBlockNumberInt) {\n                            throw new Error(`\\`fork.blockNumber\\` (${options.blockNumber}) must not be greater than the current block number (${latestBlockNumberInt})`);\n                        }\n                        else {\n                            this.blockNumber = blockNumber;\n                        }\n                    })\n                ]);\n                return block;\n            }\n            else {\n                throw new Error(`Invalid value for \\`fork.blockNumber\\` option: \"${options.blockNumber}\". Must be a positive integer or the string \"latest\".`);\n            }\n        });\n        _Fork_syncAccounts.set(this, (blockNumber) => {\n            return Promise.all(__classPrivateFieldGet(this, _Fork_accounts, \"f\").map(async (account) => {\n                const nonce = await fetchNonce(this, account.address, blockNumber);\n                account.nonce = nonce;\n            }));\n        });\n        __classPrivateFieldSet(this, _Fork_options, options, \"f\");\n        const forkingOptions = options.fork;\n        __classPrivateFieldSet(this, _Fork_hardfork, options.chain.hardfork, \"f\");\n        __classPrivateFieldSet(this, _Fork_accounts, accounts, \"f\");\n        const { url, network } = forkingOptions;\n        if (url) {\n            const { protocol } = url;\n            switch (protocol) {\n                case \"ws:\":\n                case \"wss:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                case \"http:\":\n                case \"https:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new http_handler_1.HttpHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                default: {\n                    throw new Error(`Unsupported protocol: ${protocol}`);\n                }\n            }\n        }\n        else if (forkingOptions.provider) {\n            __classPrivateFieldSet(this, _Fork_handler, new provider_handler_1.ProviderHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n        else if (network) {\n            let normalizedNetwork;\n            if (network === \"görli\") {\n                forkingOptions.network = normalizedNetwork = \"goerli\";\n            }\n            else {\n                normalizedNetwork = network;\n            }\n            // Note: `process.env.INFURA_KEY` is replaced by webpack with an infura\n            // key.\n            const infuraKey = process.env.INFURA_KEY;\n            if (!infuraKey) {\n                throw new Error(\"The INFURA_KEY environment variable was not given and is required when using Ganache's integrated archive network feature.\");\n            }\n            // any because the `network` check above narrowed the type to one\n            // that doesn't include `url`, but we still want to add it.\n            forkingOptions.url = new url_1.URL(`wss://${normalizedNetwork}.infura.io/ws/v3/${infuraKey}`);\n            __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n    }\n    async initialize() {\n        let cacheProm;\n        const { fork: forkOptions, chain: chainOptions, miner: minerOptions } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n        if (forkOptions.deleteCache)\n            await persistent_cache_1.PersistentCache.deleteDb();\n        if (forkOptions.disableCache === false) {\n            // ignore cache start up errors as it is possible there is an `open`\n            // conflict if another ganache fork is running at the time this one is\n            // started. The cache isn't required (though performance will be\n            // degraded without it)\n            cacheProm = persistent_cache_1.PersistentCache.create().catch(_e => null);\n        }\n        else {\n            cacheProm = null;\n        }\n        const chainIdPromise = fetchChainId(this);\n        const [block, cache] = await Promise.all([\n            __classPrivateFieldGet(this, _Fork_setBlockDataFromChainAndOptions, \"f\").call(this, chainIdPromise),\n            cacheProm,\n            __classPrivateFieldGet(this, _Fork_setCommonFromChain, \"f\").call(this, chainIdPromise)\n        ]);\n        const common = this.getCommonForBlockNumber(this.common, this.blockNumber.toBigInt());\n        this.block = new ethereum_block_1.Block(block_manager_1.default.rawFromJSON(block, common), common);\n        if (!chainOptions.time && minerOptions.timestampIncrement !== \"clock\") {\n            chainOptions.time = new Date((this.block.header.timestamp.toNumber() +\n                minerOptions.timestampIncrement.toNumber()) *\n                1000);\n        }\n        if (cache)\n            await this.initCache(cache);\n    }\n    async initCache(cache) {\n        await cache.initialize(this.block.header.number, this.block.hash(), this.request.bind(this));\n        __classPrivateFieldGet(this, _Fork_handler, \"f\").setCache(cache);\n    }\n    request(method, params, options = { disableCache: false }) {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").request(method, params, options);\n    }\n    abort() {\n        return __classPrivateFieldGet(this, _Fork_abortController, \"f\").abort();\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").close();\n    }\n    isValidForkBlockNumber(blockNumber) {\n        return blockNumber.toBigInt() <= this.blockNumber.toBigInt();\n    }\n    selectValidForkBlockNumber(blockNumber) {\n        return this.isValidForkBlockNumber(blockNumber)\n            ? blockNumber\n            : this.blockNumber;\n    }\n    /**\n     * If the `blockNumber` is before our `fork.blockNumber`, return a `Common`\n     * instance, applying the rules from the remote chain's `common` via its\n     * original `chainId`. If the remote chain's `chainId` is now \"known\", return\n     * a `Common` with our local `common`'s rules applied, but with the remote\n     * chain's `chainId`. If the block is greater than or equal to our\n     * `fork.blockNumber` return `common`.\n     * @param common -\n     * @param blockNumber -\n     */\n    getCommonForBlockNumber(common, blockNumber) {\n        if (blockNumber <= this.blockNumber.toBigInt()) {\n            // we are at or before our fork block\n            if (utils_1.KNOWN_CHAINIDS.has(this.chainId)) {\n                // we support this chain id, so let's use its rules\n                let hardfork;\n                // hardforks are iterated from earliest to latest\n                for (const hf of common.hardforks()) {\n                    if (hf.block === null)\n                        continue;\n                    if (blockNumber >= BigInt(hf.block)) {\n                        hardfork = hf.name;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return new common_1.Common({ chain: this.chainId, hardfork });\n            }\n            // we don't know about this chain or hardfork, so just carry on per usual,\n            // but with the fork's chainId (instead of our local chainId)\n            return common_1.Common.custom({\n                chainId: this.chainId,\n                defaultHardfork: common.hardfork()\n            }, { baseChain: 1 });\n        }\n        else {\n            return common;\n        }\n    }\n}\nexports.Fork = Fork;\n_Fork_abortController = new WeakMap(), _Fork_handler = new WeakMap(), _Fork_options = new WeakMap(), _Fork_accounts = new WeakMap(), _Fork_hardfork = new WeakMap(), _Fork_setCommonFromChain = new WeakMap(), _Fork_setBlockDataFromChainAndOptions = new WeakMap(), _Fork_syncAccounts = new WeakMap();\n//# sourceMappingURL=fork.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _HttpServer_connector, _HttpServer_options, _HttpServer_isClosing, _HttpServer_handlePost, _HttpServer_handleOptions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst content_types_1 = __importDefault(require(\"./utils/content-types\"));\nconst http_response_codes_1 = __importDefault(require(\"./utils/http-response-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nconst noop = () => { };\n/**\n * uWS doesn't let us use the request after the request method has completed.\n * But we can't set headers until after the statusCode is set. But we don't\n * know the status code until the provider returns asynchronously.\n * So this does request-related work immediately and returns a function to do the\n * rest of the work later.\n * @param method -\n * @param request -\n */\nfunction prepareCORSResponseHeaders(method, request) {\n    // https://fetch.spec.whatwg.org/#http-requests\n    const origin = request.getHeader(\"origin\");\n    const acrh = request.getHeader(\"access-control-request-headers\");\n    return (response) => {\n        const isCORSRequest = origin !== \"\";\n        if (isCORSRequest) {\n            // OPTIONS preflight requests need a little extra treatment\n            if (method === \"OPTIONS\") {\n                // we only allow POST requests, so it doesn't matter which method the request is asking for\n                response.writeHeader(\"Access-Control-Allow-Methods\", \"POST\");\n                // echo all requested access-control-request-headers back to the response\n                if (acrh !== \"\") {\n                    response.writeHeader(\"Access-Control-Allow-Headers\", acrh);\n                }\n                // Make browsers and compliant clients cache the OPTIONS preflight response for 10\n                // minutes (this is the maximum time Chromium allows)\n                response.writeHeader(\"Access-Control-Max-Age\", \"600\"); // seconds\n            }\n            // From the spec: https://fetch.spec.whatwg.org/#http-responses\n            // \"For a CORS-preflight request, request’s credentials mode is always \"omit\",\n            // but for any subsequent CORS requests it might not be. Support therefore\n            // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\", so this\n            // header is added to all requests.\n            // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\n            // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\n            // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\n            // returned even when no credentials are set in the browser this header must always be return on all requests.\n            // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\n            //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\n            //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\n            response.writeHeader(\"Access-Control-Allow-Credentials\", \"true\");\n            // From the spec: \"It cannot be reliably identified as participating in the CORS protocol\n            // as the `Origin` header is also included for all requests whose method is neither\n            // `GET` nor `HEAD`.\"\n            // Explicitly set the origin instead of using *, since credentials\n            // can't be used in conjunction with *. This will always be set\n            /// for valid preflight requests.\n            response.writeHeader(\"Access-Control-Allow-Origin\", origin);\n        }\n    };\n}\nfunction sendResponse(response, closeConnection, statusCode, contentType, data, writeHeaders = noop) {\n    response.cork(() => {\n        response.writeStatus(statusCode);\n        writeHeaders(response);\n        if (contentType != null) {\n            response.writeHeader(\"Content-Type\", contentType);\n        }\n        if (data !== null) {\n            response.end(data, closeConnection);\n        }\n        else {\n            // in the case that body is not provided, it must specifically be <undefined> and not <null>\n            response.end(undefined, closeConnection);\n        }\n    });\n}\nfunction sendChunkedResponse(response, closeConnection, statusCode, contentType, data, chunkSize, writeHeaders = noop) {\n    const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n    // get our first fragment\n    const { value: firstFragment } = fragments.next();\n    // check if there is any more fragments after this one\n    let { value: nextFragment, done } = fragments.next();\n    // if there are no more fragments send the \"firstFragment\" via `sendResponse`,\n    // as we don't need to chunk it.\n    if (done) {\n        sendResponse(response, closeConnection, statusCode, contentType, firstFragment, writeHeaders);\n    }\n    else {\n        response.cork(() => {\n            response.writeStatus(statusCode);\n            writeHeaders(response);\n            response.writeHeader(\"Content-Type\", contentType);\n            // since we have at least two fragments send both now\n            response.write(firstFragment);\n            response.write(nextFragment);\n            // and then keep sending the rest\n            for (nextFragment of fragments) {\n                response.write(nextFragment);\n            }\n            response.end(undefined, closeConnection);\n        });\n    }\n}\nclass HttpServer {\n    constructor(app, connector, options) {\n        _HttpServer_connector.set(this, void 0);\n        _HttpServer_options.set(this, void 0);\n        _HttpServer_isClosing.set(this, false);\n        _HttpServer_handlePost.set(this, (response, request) => {\n            // handle JSONRPC post requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"POST\", request);\n            // TODO(perf): pre-allocate the buffer if we know the Content-Length\n            let buffer;\n            let aborted = false;\n            response.onAborted(() => {\n                aborted = true;\n            });\n            response.onData((message, isLast) => {\n                const chunk = Buffer.from(message);\n                if (isLast) {\n                    // we have to use any here because typescript isn't smart enough\n                    // to understand the ambiguity of RequestFormat and ReturnType\n                    // on the Connector interface must match up appropriately\n                    const connector = __classPrivateFieldGet(this, _HttpServer_connector, \"f\");\n                    let payload;\n                    try {\n                        const message = buffer\n                            ? Buffer.concat([buffer, chunk], buffer.length + chunk.length)\n                            : chunk;\n                        payload = connector.parse(message);\n                    }\n                    catch (e) {\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request: \" + e.message, writeHeaders);\n                        return;\n                    }\n                    connector\n                        .handle(payload, request)\n                        .then(({ value }) => value)\n                        .then(result => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.format(result, payload);\n                        if (util_1.types.isGeneratorObject(data)) {\n                            sendChunkedResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, __classPrivateFieldGet(this, _HttpServer_options, \"f\").chunkSize, writeHeaders);\n                        }\n                        else {\n                            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                        }\n                    })\n                        .catch(error => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.formatError(error, payload);\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                    });\n                }\n                else {\n                    if (buffer) {\n                        buffer = Buffer.concat([buffer, chunk], buffer.length + chunk.length);\n                    }\n                    else {\n                        buffer = Buffer.concat([chunk], chunk.length);\n                    }\n                }\n            });\n        });\n        _HttpServer_handleOptions.set(this, (response, request) => {\n            // handle CORS preflight requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"OPTIONS\", request);\n            // OPTIONS responses don't have a body, so respond with `204 No Content`...\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NO_CONTENT, null, null, writeHeaders);\n        });\n        __classPrivateFieldSet(this, _HttpServer_connector, connector, \"f\");\n        __classPrivateFieldSet(this, _HttpServer_options, options, \"f\");\n        // JSON-RPC routes...\n        app\n            .post(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handlePost, \"f\"))\n            .options(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handleOptions, \"f\"));\n        // because Easter Eggs are fun...\n        app.get(\"/418\", response => {\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.IM_A_TEAPOT, content_types_1.default.PLAIN, \"418 I'm a teapot\");\n        });\n        // fallback routes...\n        app.any(\"/*\", (response, request) => {\n            const connectionHeader = request.getHeader(\"connection\");\n            if (connectionHeader && connectionHeader.toLowerCase() === \"upgrade\") {\n                // if we got here it means the websocket server wasn't enabled but\n                // a client tried to connect via websocket. This is a Bad Request.\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request\");\n            }\n            else {\n                // all other requests don't mean anything to us, so respond with `404 Not Found`...\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NOT_FOUND, content_types_1.default.PLAIN, \"404 Not Found\");\n            }\n        });\n    }\n    close() {\n        // flags the server as closing, indicating the connection should be closed with subsequent responses\n        // as there is no way presently to close existing connections outside of the request/response context\n        // see discussion: https://github.com/uNetworking/uWebSockets.js/issues/663#issuecomment-1026283415\n        __classPrivateFieldSet(this, _HttpServer_isClosing, true, \"f\");\n    }\n}\nexports.default = HttpServer;\n_HttpServer_connector = new WeakMap(), _HttpServer_options = new WeakMap(), _HttpServer_isClosing = new WeakMap(), _HttpServer_handlePost = new WeakMap(), _HttpServer_handleOptions = new WeakMap();\n//# sourceMappingURL=http-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkOptions = exports.KNOWN_NETWORKS = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst url_1 = require(\"url\");\nconst version = process.env.VERSION || \"DEV\";\n// we aren't going to treat block numbers as a bigint, so we don't want to\n// accept block numbers we can't add to\nconst MAX_BLOCK_NUMBER = Math.floor(Number.MAX_SAFE_INTEGER / 2);\nexports.KNOWN_NETWORKS = [\n    \"mainnet\",\n    \"goerli\",\n    \"görli\",\n    \"sepolia\"\n];\nconst reColonSplit = /:\\s?(?:.+)/;\nfunction coerceHeaders(headers, input) {\n    // split *1* time on the first colon, this also ignores leading whitespace\n    // from the value per RFC7230\n    const [name, value] = input.split(reColonSplit);\n    headers.push({ name, value });\n    return headers;\n}\nconst ALLOWED_PROTOCOLS = [\"ws:\", \"wss:\", \"http:\", \"https:\"];\nconst arrayToOxfordList = (arr, conjunction = \"and\") => {\n    const last = arr.pop();\n    switch (arr.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return last;\n        case 2:\n            return arr[0] + ` ${conjunction} ` + last;\n        default:\n            return arr.join(\", \") + `, ${conjunction} ` + last;\n    }\n};\nexports.ForkOptions = {\n    // url's definition _must_ come before blockNumber, username, and password\n    // as the defaults are processed in order, and they rely on the `fork.url`\n    url: {\n        normalize: rawInput => {\n            // because `url` is an alias of `fork`, along with `provider` and\n            // `network` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput !== \"string\" ||\n                exports.KNOWN_NETWORKS.includes(rawInput)) {\n                // if the string matches a network name ignore it\n                return;\n            }\n            let url = new url_1.URL(rawInput);\n            const path = url.pathname + url.search;\n            const lastIndex = path.lastIndexOf(\"@\");\n            // pull the blockNumber out of the URL\n            if (lastIndex !== -1) {\n                // remove everything after the last @\n                url = new url_1.URL(path.substr(0, lastIndex), url);\n                const blockNumber = path.substr(lastIndex + 1);\n                if (blockNumber && blockNumber !== ethereum_utils_1.Tag.latest) {\n                    // don't use parseInt because strings like `\"123abc\"` parse\n                    // to `123`, and there is probably an error on the user's side we'd\n                    // want to uncover.\n                    const asNum = blockNumber - 0;\n                    // don't allow invalid, negative, or decimals\n                    if (isNaN(asNum) ||\n                        asNum < 0 ||\n                        (asNum | 0) !== asNum ||\n                        asNum > MAX_BLOCK_NUMBER) {\n                        console.warn(`Ignoring invalid block number in fork url: \"${blockNumber}\". Block number must be an integer from [0 - ${MAX_BLOCK_NUMBER}].`);\n                    }\n                    else {\n                        url._blockNumber = asNum;\n                    }\n                }\n                if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n                    throw new Error(`Invalid protocol for fork url: ${url.protocol}. Supported protocols are: ${arrayToOxfordList(ALLOWED_PROTOCOLS)}.`);\n                }\n            }\n            return url;\n        },\n        cliDescription: `Fork from another currently running Ethereum client at a given block. Input should be the URL of the node, e.g. \\`\"http://localhost:1337\"\\`. You can optionally specify the block to fork from using an @ sign: \\`\"http://localhost:1337@8675309\"\\`.\n\nYou can specify Basic Authentication credentials in the URL as well. e.g., \\`\"wss://user:password@example.com/\"\\`. If you need to use an Infura Project Secret, you would use it like this: \\`\"wss://:{YOUR-PROJECT-SECRET}@mainnet.infura.com/...\"\\`\n\nAlternatively, you can use the \\`fork.username\\` and \\`fork.password\\` options.`,\n        legacyName: \"fork\",\n        cliAliases: [\"f\", \"fork\"],\n        conflicts: [\"provider\", \"network\"]\n    },\n    provider: {\n        normalize: rawInput => {\n            // because `provider` is an alias of `fork`, along with `network` and\n            // `url` the runtime type isn't always going to match the TypeScript type.\n            // if rawInput is a string it will be handled by the `url` or `network`\n            // handlers.\n            if (typeof rawInput === \"string\" || // like `--fork http://url` (url shorthand)\n                (typeof rawInput === \"object\" &&\n                    (typeof rawInput.url === \"string\" || // like `--fork.url http://url`\n                        typeof rawInput.url === \"boolean\" || // like `--fork` (implied \"mainnet\" network shorthand)\n                        typeof rawInput.network === \"string\" || // like `--fork.network mainnet`\n                        typeof rawInput.network === \"boolean\")) // like `--fork.network true`\n            ) {\n                return;\n            }\n            else {\n                return rawInput;\n            }\n        },\n        cliDescription: \"Specify an EIP-1193 provider to use instead of a url.\",\n        disableInCLI: true,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"network\"]\n    },\n    network: {\n        normalize: rawInput => {\n            // because `network` is an alias of `fork`, along with `provider` and\n            // `url` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput === \"string\" && exports.KNOWN_NETWORKS.includes(rawInput))\n                return rawInput;\n            if (\n            // handle `ganache --fork` case, which gets weird because both url\n            // and network can use the `--fork` flag (the `url` handler ignores\n            // non-strings, like `true` and strings that match our known networks)\n            typeof rawInput === \"object\") {\n                if (\"url\" in rawInput) {\n                    const { url } = rawInput;\n                    if (url === true) {\n                        return \"mainnet\";\n                    }\n                    else if (exports.KNOWN_NETWORKS.includes(url)) {\n                        return rawInput.url;\n                    }\n                }\n            }\n        },\n        cliDescription: `A network name to fork from; uses Infura's archive nodes.\n\nUse the shorthand command \\`ganache --fork\\` to automatically fork from Mainnet at the latest block.\n`,\n        cliChoices: exports.KNOWN_NETWORKS,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"provider\"]\n    },\n    blockNumber: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Block number the provider should fork from.\",\n        legacyName: \"fork_block_number\",\n        default: ({ url, provider, network }) => {\n            if (url) {\n                // use the url's _blockNumber, if present, otherwise use \"latest\"\n                if (url._blockNumber) {\n                    return url._blockNumber;\n                }\n                else {\n                    return ethereum_utils_1.Tag.latest;\n                }\n            }\n            else if (provider || network) {\n                return ethereum_utils_1.Tag.latest;\n            }\n            else {\n                return;\n            }\n        },\n        defaultDescription: `Latest block number`\n        //implies: [\"url\"]\n    },\n    preLatestConfirmations: {\n        normalize: helpers_1.normalize,\n        cliDescription: 'When the `fork.blockNumber` is set to \"latest\" (default), the number of blocks before the remote node\\'s \"latest\" block to fork from.',\n        default: () => 5,\n        defaultDescription: \"5\",\n        cliType: \"number\"\n    },\n    username: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Username to use for Basic Authentication. Does not require setting \\`fork.password\\`.\n    \nWhen combined with \\`fork.password\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's username, if present\n            if (url) {\n                if (url.username) {\n                    return url.username;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    password: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Password to use for Basic Authentication. Does not require setting \\`fork.username\\`.\n\nWhen combined with \\`fork.username\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's password, if present\n            if (url) {\n                if (url.password) {\n                    return url.password;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    jwt: {\n        normalize: helpers_1.normalize,\n        cliDescription: `_Encoded_ JSON Web Token (JWT) used for authenticating to some servers.\n\nShorthand for \\`fork: { headers: { \"Authorization\": \"Bearer {YOUR-ENCODED-JWT}\" } }\\`\n\n If the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ the JWT Bearer token.`\n        //implies: [\"url\"]\n    },\n    userAgent: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The User-Agent header sent to the fork on each request.\n\nSent as Api-User-Agent when used in the browser.\n \nWill be overridden by a \\`\"User-Agent\"\\` defined in the \\`fork.headers\\` option, if provided.`,\n        default: () => {\n            return `Ganache/${version} (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)`;\n        }\n        // implies: [\"url\"]\n    },\n    origin: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The Origin header sent to the fork on each request.\n\nIgnored in the browser.\n\nWill be overridden by an \\`\"Origin\"\\` value defined in the \\`fork.headers\\` option, if provided.`\n        //implies: [\"url\"]\n    },\n    headers: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Headers to supply on each request to the forked provider.\n\nHeaders set here override headers set by other options, unless otherwise specified.\n\nDefaults to: \\`[\"User-Agent: Ganache/VERSION (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)\"]\\``,\n        cliType: \"array:string\",\n        implies: [\"url\"],\n        cliCoerce: rawInput => rawInput.reduce(coerceHeaders, [])\n    },\n    requestsPerSecond: {\n        normalize(rawValue) {\n            if (rawValue < 0) {\n                throw new Error(`fork.requestsPerSecond is invalid: \"${rawValue}\"; must be a positive number`);\n            }\n            return rawValue;\n        },\n        default: () => 0,\n        cliDescription: \"Restrict the number of requests per second sent to the fork provider. `0` means no limit is applied.\",\n        cliType: \"number\"\n        //implies: [\"url\"]\n    },\n    disableCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Disables caching of all forking requests.\",\n        cliType: \"boolean\"\n    },\n    deleteCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Deletes the persistent cache before starting.\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=fork-options.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _WebsocketServer_connections;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PAYLOAD_SIZE = exports.sendFragmented = void 0;\nconst websocket_close_codes_1 = __importDefault(require(\"./utils/websocket-close-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nfunction sendFragmented(ws, data, useBinary, chunkSize) {\n    ws.cork(() => {\n        // fragment send: https://github.com/uNetworking/uWebSockets.js/issues/635\n        const shouldCompress = false;\n        const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n        // get our first fragment\n        const { value: firstFragment } = fragments.next();\n        // check if there is any more fragments after this one\n        let { value: maybeLastFragment, done } = fragments.next();\n        // if there are no more fragments send the \"firstFragment\" via `send`, as\n        // we don't need to chunk it.\n        if (done) {\n            ws.send(firstFragment, useBinary);\n        }\n        else {\n            // since we have at least two fragments send the first one now that it\n            // is \"full\"\n            ws.sendFirstFragment(firstFragment, useBinary);\n            // at this point `maybeLastFragment` is the next fragment that should be\n            // sent. We iterate over all fragments, sending the _previous_ fragment\n            // (`maybeLastFragment`) then cache the current fragment (`fragment`)\n            // in the `maybeLastFragment` variable, which will be sent in the next\n            // iteration, or via `sendLastFragment`, below, if `fragment` was also the\n            // very last one.\n            for (const fragment of fragments) {\n                // definitely not the last fragment, send it!\n                ws.sendFragment(maybeLastFragment, shouldCompress);\n                maybeLastFragment = fragment;\n            }\n            ws.sendLastFragment(\n            // definitely the last fragment at this point\n            maybeLastFragment, shouldCompress);\n        }\n    });\n}\nexports.sendFragmented = sendFragmented;\n// matches geth's limit of 15 MebiBytes: https://github.com/ethereum/go-ethereum/blob/3526f690478482a02a152988f4d31074c176b136/rpc/websocket.go#L40\nexports.MAX_PAYLOAD_SIZE = 15 * 1024 * 1024;\nclass WebsocketServer {\n    constructor(app, connector, options) {\n        _WebsocketServer_connections.set(this, new Map());\n        const connections = __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\");\n        const wsBinary = options.wsBinary;\n        const autoBinary = wsBinary === \"auto\";\n        app.ws(options.rpcEndpoint, {\n            /* WS Options */\n            maxPayloadLength: exports.MAX_PAYLOAD_SIZE,\n            idleTimeout: 120,\n            // Note that compression is disabled (the default option)\n            // due to not being able to link against electron@12\n            // with compression included\n            /* Handlers */\n            open: (ws) => {\n                ws.closed = false;\n                connections.set(ws, new Set());\n            },\n            message: async (ws, message, isBinary) => {\n                // We have to use type any instead of ReturnType<typeof connector.parse>\n                // on `payload` because Typescript isn't smart enough to understand the\n                // ambiguity doesn't actually exist\n                let payload;\n                const useBinary = autoBinary ? isBinary : wsBinary;\n                try {\n                    payload = connector.parse(Buffer.from(message));\n                }\n                catch (err) {\n                    const response = connector.formatError(err, payload);\n                    ws.send(response, useBinary);\n                    return;\n                }\n                let data;\n                try {\n                    const { value } = await connector.handle(payload, ws);\n                    // The socket may have closed while we were waiting for the response\n                    // Don't bother trying to send to it if it was.\n                    if (ws.closed)\n                        return;\n                    const resultEmitter = value;\n                    const result = await resultEmitter;\n                    if (ws.closed)\n                        return;\n                    data = connector.format(result, payload);\n                    // if the result is an emitter listen to its `\"message\"` event\n                    // We check if `on` is a function rather than check if\n                    // `resultEmitter instanceof PromiEvent` because `@ganache/filecoin`\n                    // and `ganache` webpack `@ganache/utils` separately. This causes\n                    // instanceof to fail here. Since we know `resultEmitter` is MergePromiseT\n                    // we can safely assume that if `on` is a function, then we have a PromiEvent\n                    if (typeof resultEmitter[\"on\"] === \"function\") {\n                        const resultEmitterPromiEvent = resultEmitter;\n                        resultEmitterPromiEvent.on(\"message\", (result) => {\n                            // note: we _don't_ need to check if `ws.closed` here because when\n                            // `ws.closed` is set we remove this event handler anyway.\n                            const message = JSON.stringify({\n                                jsonrpc: \"2.0\",\n                                method: result.type,\n                                params: result.data\n                            });\n                            ws.send(message, isBinary);\n                        });\n                        // keep track of listeners to dispose off when the ws disconnects\n                        connections.get(ws).add(resultEmitterPromiEvent.dispose);\n                    }\n                }\n                catch (err) {\n                    // ensure the connector's `handle` fn doesn't throw outside of a Promise\n                    if (ws.closed)\n                        return;\n                    data = connector.formatError(err, payload);\n                }\n                if (util_1.types.isGeneratorObject(data)) {\n                    sendFragmented(ws, data, useBinary, options.chunkSize);\n                }\n                else {\n                    ws.send(data, useBinary);\n                }\n            },\n            drain: (ws) => {\n                // This is there so tests can detect if a small amount of backpressure\n                // is happening and that things will still work if it does. We actually\n                // don't do anything to manage excessive backpressure.\n                // TODO: handle back pressure for real!\n                // options.logger.log(\"WebSocket backpressure: \" + ws.getBufferedAmount());\n            },\n            close: (ws) => {\n                ws.closed = true;\n                connections.get(ws).forEach(dispose => dispose());\n                connections.delete(ws);\n            }\n        });\n    }\n    close() {\n        __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\").forEach((_, ws) => ws.end(websocket_close_codes_1.default.CLOSE_NORMAL, \"Server closed by client\"));\n    }\n}\nexports.default = WebsocketServer;\n_WebsocketServer_connections = new WeakMap();\n//# sourceMappingURL=ws-server.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Executor_requestCoordinator;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Executor = void 0;\nconst has_own_1 = require(\"./has-own\");\nclass Executor {\n    /**\n     * The Executor handles execution of methods on the given API\n     */\n    constructor(requestCoordinator) {\n        _Executor_requestCoordinator.set(this, void 0);\n        __classPrivateFieldSet(this, _Executor_requestCoordinator, requestCoordinator, \"f\");\n    }\n    /**\n     * Stop processing requests. We pass this call through to the requestCoordinator, which means that api\n     * validation will continue to work after calling stop() in execute().\n     */\n    stop() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").stop();\n    }\n    /**\n     * Finalise shutdown of the underlying RequestCoordinator.\n     */\n    end() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").end();\n    }\n    /**\n     * Executes the method with the given methodName on the API\n     * @param methodName - The name of the JSON-RPC method to execute.\n     * @param params - The params to pass to the JSON-RPC method.\n     */\n    execute(api, methodName, params) {\n        // The methodName is user-entered data and can be all sorts of weird hackery\n        // Make sure we only accept what we expect to avoid headache and heartache\n        if (typeof methodName === \"string\") {\n            // Only allow executing our *own* methods. We allow:\n            //  * functions added to the Instance by the class, e.g.,\n            //      class SomeClass {\n            //        method = () => {} // api.hasOwnProperty(\"method\") === true\n            //      }\n            //  * Or by the class' prototype:\n            //      class SomeClass {\n            //        method(){} // api.__proto__.hasOwnProperty(\"method\") === true\n            //      }\n            if (((0, has_own_1.hasOwn)(api.__proto__, methodName) && methodName !== \"constructor\") ||\n                (0, has_own_1.hasOwn)(api, methodName)) {\n                // cast methodName from `KnownKeys<T> & string` back to KnownKeys<T> so our return type isn't weird.\n                const fn = api[methodName];\n                // just double check, in case a API breaks the rules and adds non-fns\n                // to their API interface.\n                if (typeof fn === \"function\") {\n                    // The function referenced by requestcoordinator.queue will be changed\n                    // when requestCoordinator.stop() is called. Ensure that no references\n                    // to the function are held, otherwise internal errors may be\n                    // surfaced.\n                    // queue up this method for actual execution:\n                    return __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").queue(fn, api, params);\n                }\n            }\n        }\n        throw new Error(`The method ${String(methodName)} does not exist/is not available`);\n    }\n}\nexports.Executor = Executor;\n_Executor_requestCoordinator = new WeakMap();\n//# sourceMappingURL=executor.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RequestCoordinator_paused, _RequestCoordinator_process;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestCoordinator = void 0;\nconst noop = () => { };\n/**\n * Responsible for managing global concurrent requests.\n */\nclass RequestCoordinator {\n    /**\n     * Promise-based FIFO queue.\n     * @param limit - The number of requests that can be processed at a time.\n     * Default value is is no limit (`0`).\n     */\n    constructor(limit) {\n        /**\n         * The pending requests. You can't do anything with this array.\n         */\n        this.pending = [];\n        /**\n         * The number of tasks currently being processed.\n         */\n        this.runningTasks = 0;\n        _RequestCoordinator_paused.set(this, true);\n        /**\n         * Pause processing. This will *not* cancel any promises that are currently\n         * running.\n         */\n        this.pause = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, true, \"f\");\n        };\n        /**\n         * Resume processing.\n         */\n        this.resume = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, false, \"f\");\n            __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n        };\n        _RequestCoordinator_process.set(this, () => {\n            // if we aren't paused and the number of things we're processing is under\n            // our limit and we have things to process: do it!\n            while (!this.paused &&\n                this.pending.length > 0 &&\n                (!this.limit || this.runningTasks < this.limit)) {\n                const current = this.pending.shift();\n                this.runningTasks++;\n                current\n                    .execute()\n                    // By now, we've resolved the fn's `value` by sending it to the parent scope.\n                    // But over here, we're also waiting for this fn's _value_ to settle _itself_ (it might be a promise) before\n                    // continuing through the `pending` queue. Because we wait for it again here, it could potentially throw here,\n                    // in which case we just need to catch it and throw the result away. We could probably use\n                    // `Promise.allSettled([current()]).finally` to do this instead of the `current().catch(noop).finally`. /shrug\n                    .catch(noop)\n                    .finally(() => {\n                    this.runningTasks--;\n                    __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n                });\n            }\n        });\n        /**\n         * Insert a new function into the queue.\n         */\n        this.queue = (fn, thisArgument, argumentsList) => {\n            return new Promise((resolve, reject) => {\n                // const execute is `async` to force the return value into a Promise.\n                const execute = async () => {\n                    try {\n                        const value = Reflect.apply(fn, thisArgument, argumentsList || []);\n                        resolve({ value });\n                        return value;\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                };\n                this.pending.push({ execute, reject });\n                __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n            });\n        };\n        this.limit = limit;\n    }\n    get paused() {\n        return __classPrivateFieldGet(this, _RequestCoordinator_paused, \"f\");\n    }\n    /**\n     * Stop processing tasks - calls to queue(), and resume() will reject with an\n     * error indicating that Ganache is disconnected. This is an irreversible\n     * action. If you wish to be able to resume processing, use pause() instead.\n     *\n     * Note: this changes the references of this.resume and this.queue. Any code\n     * that maintains references to the values referenced by this.resume or\n     * this.queue, could have unintended consequences after calling this.stop().\n     */\n    stop() {\n        this.pause();\n        this.resume = () => {\n            throw new Error(\"Cannot resume processing requests, Ganache is disconnected.\");\n        };\n        this.queue = async () => {\n            throw new Error(\"Cannot process request, Ganache is disconnected.\");\n        };\n    }\n    /**\n     * Finalise shutdown of the RequestCoordinator. Rejects all pending tasks in order. Should be\n     * called after all in-flight tasks have resolved in order to maintain overall FIFO order.\n     */\n    end() {\n        while (this.pending.length > 0) {\n            this.pending\n                .shift()\n                .reject(new Error(\"Cannot process request, Ganache is disconnected.\"));\n        }\n    }\n}\nexports.RequestCoordinator = RequestCoordinator;\n_RequestCoordinator_paused = new WeakMap(), _RequestCoordinator_process = new WeakMap();\n//# sourceMappingURL=request-coordinator.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar PromiEvent_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst emitteryMethods = [\n    \"clearListeners\",\n    \"once\",\n    \"on\",\n    \"emit\",\n    \"onAny\"\n];\n// A hack to fix Emittery's `mixin` type.\n// issue: https://github.com/sindresorhus/emittery/issues/79\nconst mixin = emittery_1.default.mixin.bind(emittery_1.default);\nlet PromiEvent = PromiEvent_1 = class PromiEvent extends Promise {\n    constructor(executor) {\n        super(executor);\n        /**\n         * Used to immediately clear all event listeners on the instance and prevent\n         * any additional binding or emission from the Emitter.\n         *\n         * Once disposed no listeners can be bound to this emitter.\n         *\n         * Note: `dispose` is pre-bound to the `this`, making it possible to pass the\n         * method around detached from it's context.\n         */\n        this.dispose = () => {\n            if (!this.clearListeners)\n                throw new Error(\"PromiEvent already disposed\");\n            this.clearListeners();\n            // Ensure that once disposed no listeners can be bound to this emitter.\n            const fn = () => {\n                throw new Error(\"PromiEvent bound after dispose\");\n            };\n            emitteryMethods\n                .filter(m => m !== \"emit\")\n                .forEach(methodName => {\n                Object.defineProperty(this, methodName, {\n                    enumerable: false,\n                    value: fn\n                });\n            });\n        };\n    }\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected - The callback to execute when the Promise is rejected.\n     * @returns A PromiEvent for the completion of the callback.\n     */\n    catch(onrejected) {\n        const prom = new PromiEvent_1((resolve, reject) => {\n            this.onAny((eventName, eventData) => {\n                return prom.emit(eventName, eventData);\n            });\n            const p = super.catch(onrejected);\n            p.then(resolve, reject);\n        });\n        return prom;\n    }\n    static resolve(value) {\n        return new PromiEvent_1(resolve => {\n            resolve(value);\n        });\n    }\n};\nPromiEvent = PromiEvent_1 = __decorate([\n    mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiEvent);\nexports.default = PromiEvent;\n//# sourceMappingURL=promievent.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OptionsConfig_defaults, _OptionsConfig_namespaces;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsConfig = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst checkForConflicts = (name, namespace, suppliedOptions, conflicts) => {\n    if (!conflicts)\n        return;\n    for (const conflict of conflicts) {\n        if (suppliedOptions.has(conflict)) {\n            throw new Error(`Values for both \"${namespace}.${name}\" and ` +\n                `\"${namespace}.${conflict}\" cannot ` +\n                `be specified; they are mutually exclusive.`);\n        }\n    }\n};\nfunction fill(defaults, options, target, namespace) {\n    const def = defaults[namespace];\n    const config = (target[namespace] = target[namespace] || {});\n    const flavor = options.flavor;\n    const suppliedOptions = new Set();\n    const keys = Object.keys(def);\n    if ((0, utils_1.hasOwn)(options, namespace)) {\n        const namespaceOptions = options[namespace];\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            let value = namespaceOptions[key];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(namespaceOptions[key]);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else {\n                const legacyName = propDefinition.legacyName || key;\n                value = options[legacyName];\n                if (value !== undefined) {\n                    const normalized = propDefinition.normalize(value);\n                    if (normalized !== undefined) {\n                        checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                        config[key] = normalized;\n                        suppliedOptions.add(key);\n                    }\n                }\n                else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                    config[key] = propDefinition.default(config, flavor);\n                }\n            }\n        }\n    }\n    else {\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            const legacyName = propDefinition.legacyName || key;\n            const value = options[legacyName];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                config[key] = propDefinition.default(config, flavor);\n            }\n        }\n    }\n}\nclass OptionsConfig {\n    constructor(defaults) {\n        _OptionsConfig_defaults.set(this, void 0);\n        _OptionsConfig_namespaces.set(this, void 0);\n        __classPrivateFieldSet(this, _OptionsConfig_defaults, defaults, \"f\");\n        __classPrivateFieldSet(this, _OptionsConfig_namespaces, Object.keys(defaults), \"f\");\n    }\n    normalize(options) {\n        const defaults = __classPrivateFieldGet(this, _OptionsConfig_defaults, \"f\");\n        const out = {};\n        __classPrivateFieldGet(this, _OptionsConfig_namespaces, \"f\").forEach(namespace => {\n            fill(defaults, options, out, namespace);\n        });\n        return out;\n    }\n}\nexports.OptionsConfig = OptionsConfig;\n_OptionsConfig_defaults = new WeakMap(), _OptionsConfig_namespaces = new WeakMap();\n//# sourceMappingURL=create.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AccountManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass AccountManager {\n    constructor(blockchain) {\n        _AccountManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _AccountManager_blockchain, blockchain, \"f\");\n    }\n    async get(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const raw = await this.getRaw(address, blockNumber);\n        if (raw == null)\n            return null;\n        return ethereum_utils_1.Account.fromBuffer(raw);\n    }\n    async getRaw(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), null, number);\n        // get the account from the trie\n        return await trieCopy.get(address.toBuffer());\n    }\n    async getStorageAt(address, key, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), address.toBuffer(), number);\n        // get the account from the trie\n        return await trieCopy.get(key);\n    }\n    async getNonce(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [nonce] = (0, rlp_1.decode)(data);\n        return nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce);\n    }\n    async getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [, balance] = (0, rlp_1.decode)(data);\n        return balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance);\n    }\n    async getNonceAndBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return { nonce: utils_1.Quantity.Zero, balance: utils_1.Quantity.Zero };\n        const [nonce, balance] = (0, rlp_1.decode)(data);\n        return {\n            nonce: nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce),\n            balance: balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance)\n        };\n    }\n    async getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Data.Empty;\n        const [, , , codeHash] = (0, rlp_1.decode)(data);\n        if (codeHash.equals(util_1.KECCAK256_NULL))\n            return utils_1.Data.Empty;\n        else\n            return __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\").trie.database().get(codeHash).then(utils_1.Data.from);\n    }\n}\nexports.default = AccountManager;\n_AccountManager_blockchain = new WeakMap();\n//# sourceMappingURL=account-manager.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst bip39_1 = require(\"bip39\");\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\n/**\n * WARNING: to maintain compatibility with ganache v2 this RNG only generates\n * numbers from 0-254 instead of 0-255! Hence the name, `notVeryRandomBytes`\n * @param length -\n * @param rng -\n */\nfunction notVeryRandomBytes(length, rng) {\n    const buf = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; i++) {\n        buf[i] = (rng() * 255) | 0;\n    }\n    return buf;\n}\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    accounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Account data in the form \\`<private_key>,<initial_balance>\\`, can be specified multiple times. Note that private keys are 64 characters long and must be entered as an 0x-prefixed hex string. Balance can either be input as an integer, or as a 0x-prefixed hex string with either form specifying the initial balance in wei.`,\n        legacyName: \"accounts\",\n        cliAliases: [\"account\"],\n        cliType: \"array:string\",\n        cliCoerce: rawInput => {\n            return rawInput.map(accountString => {\n                // split *1* time on the first comma\n                const [secretKey, balance] = accountString.split(/,(.+)/);\n                return {\n                    secretKey,\n                    balance: BigInt(balance)\n                };\n            });\n        },\n        conflicts: [\"totalAccounts\"]\n    },\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: config => (config.accounts == null ? 10 : 0),\n        legacyName: \"total_accounts\",\n        cliAliases: [\"a\", \"accounts\"],\n        cliType: \"number\",\n        conflicts: [\"accounts\"]\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\", \"deterministic\"],\n        cliType: \"boolean\",\n        conflicts: [\"mnemonic\", \"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        defaultDescription: \"Random value, unless wallet.deterministic is specified\",\n        legacyName: \"seed\",\n        cliAliases: [\"s\", \"seed\"],\n        cliType: \"string\",\n        conflicts: [\"mnemonic\", \"deterministic\"]\n    },\n    mnemonic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use a specific HD wallet mnemonic to generate initial addresses.\",\n        // The order of the options matter here! `wallet.seed`\n        // needs to be prior to `wallet.mnemonic` for `config.seed`\n        // below to be set correctly\n        default: config => (0, bip39_1.entropyToMnemonic)(notVeryRandomBytes(16, (0, seedrandom_1.default)(config.seed))),\n        defaultDescription: \"Generated from wallet.seed\",\n        legacyName: \"mnemonic\",\n        cliAliases: [\"m\", \"mnemonic\"],\n        cliType: \"string\",\n        conflicts: [\"seed\", \"deterministic\"]\n    },\n    unlockedAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Array of addresses or address indexes specifying which accounts should be unlocked.\",\n        legacyName: \"unlocked_accounts\",\n        cliAliases: [\"u\", \"unlock\"],\n        cliType: \"array:string\"\n    },\n    lock: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Lock available accounts by default (good for third party transaction signing).\",\n        default: () => false,\n        legacyName: \"secure\",\n        cliAliases: [\"n\", \"secure\", \"lock\"],\n        cliType: \"boolean\"\n    },\n    passphrase: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Passphrase to use when locking accounts.\",\n        default: () => \"\",\n        cliAliases: [\"passphrase\"],\n        cliType: \"string\"\n    },\n    accountKeysPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specifies a file to save accounts and private keys to, for testing.\",\n        legacyName: \"account_keys_path\",\n        cliAliases: [\"account_keys_path\", \"acctKeys\"],\n        cliType: \"string\"\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in ether.\",\n        default: () => 1000,\n        legacyName: \"default_balance_ether\",\n        cliAliases: [\"e\", \"defaultBalanceEther\"],\n        cliType: \"number\"\n    },\n    hdPath: {\n        normalize: (path) => {\n            return path.split(\"/\");\n        },\n        cliDescription: \"The hierarchical deterministic path to use when generating accounts.\",\n        default: () => [\"m\", \"44'\", \"60'\", \"0'\", \"0\"],\n        legacyName: \"hd_path\",\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak = void 0;\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst RATE = 1088;\nconst CAPACITY = 512;\nconst instance = (0, keccak_1.default)(\"keccak256\");\n/**\n * keccak256, but faster if you use it a lot.\n * @param buffer -\n */\nfunction keccak(buffer) {\n    instance._state.absorb(buffer);\n    const digest = instance._state.squeeze(32);\n    // reset and remove result from memory\n    instance._state.initialize(RATE, CAPACITY);\n    // make this re-usable\n    instance._finalized = false;\n    return digest;\n}\nexports.keccak = keccak;\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomNumberGenerator = void 0;\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nclass RandomNumberGenerator {\n    // I was planning on using `state` here to restore the RNG\n    // from a saved state (via the db on run or upon a revert),\n    // but this functionality was postponed. I'm keeping the arg\n    // here as it still applies and is valid code.\n    // https://github.com/trufflesuite/ganache/issues/756\n    constructor(seed, state) {\n        if (typeof seed === \"string\" && typeof state === \"undefined\") {\n            this.rng = seedrandom_1.default.alea(seed, { state: true });\n        }\n        else if (typeof state === \"object\") {\n            // We can ignore seed even if it was provided.\n            // The user is reseeding the rng from a prior state,\n            // so let's initialize accordingly\n            this.rng = seedrandom_1.default.alea(\"\", { state });\n        }\n        else {\n            const entropy = Math.random() * Date.now();\n            this.rng = seedrandom_1.default.alea(`${entropy}`, { state: true });\n        }\n    }\n    getNumber(upperExclusiveBound = 1) {\n        // I believe this check may be a tiny bit faster than\n        // always multiplying by 1\n        if (upperExclusiveBound !== 1) {\n            return this.rng() * upperExclusiveBound;\n        }\n        else {\n            return this.rng();\n        }\n    }\n    getNumbers(length, upperExclusiveBound = 1) {\n        const numbers = [];\n        for (let i = 0; i < length; i++) {\n            numbers.push(this.getNumber(upperExclusiveBound));\n        }\n        return numbers;\n    }\n    getBuffer(length) {\n        return Buffer.from(this.getNumbers(length, 256));\n    }\n    state() {\n        return this.rng.state();\n    }\n}\nexports.RandomNumberGenerator = RandomNumberGenerator;\n//# sourceMappingURL=random-number-generator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecsignLegacy = exports.ecsign = void 0;\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nfunction ecsign(msgHash, privateKey) {\n    const output = {\n        signature: new Uint8Array(64),\n        recid: null\n    };\n    const status = secp256k1_1.default.ecdsaSign(output, msgHash, privateKey);\n    if (status !== 0) {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n    const { signature, recid } = output;\n    const buffer = signature.buffer;\n    const r = Buffer.from(buffer, 0, 32);\n    const s = Buffer.from(buffer, 32, 32);\n    const v = BigInt(recid);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction ecsignLegacy(msgHash, privateKey, chainId) {\n    const { v, r, s } = ecsign(msgHash, privateKey);\n    const legacyV = chainId === undefined ? v + 27n : v + 35n + BigInt(chainId) * 2n;\n    return { r, s, v: legacyV };\n}\nexports.ecsignLegacy = ecsignLegacy;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.InternalTag = void 0;\nvar InternalTag;\n(function (InternalTag) {\n    InternalTag[\"earliest\"] = \"earliest\";\n    InternalTag[\"finalized\"] = \"finalized\";\n    InternalTag[\"latest\"] = \"latest\";\n    InternalTag[\"safe\"] = \"safe\";\n    InternalTag[\"pending\"] = \"pending\";\n})(InternalTag = exports.InternalTag || (exports.InternalTag = {}));\nvar Tag;\n(function (Tag) {\n    Tag.earliest = \"earliest\";\n    Tag.finalized = \"finalized\";\n    Tag.latest = \"latest\";\n    Tag.safe = \"safe\";\n    Tag.pending = \"pending\";\n})(Tag = exports.Tag || (exports.Tag = {}));\n//# sourceMappingURL=tags.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveFromIndex = exports.deriveFromPath = exports.createAccountFromSeed = exports.createAccountGeneratorFromSeedAndPath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MASTER_SECRET = Buffer.from(\"Bitcoin seed\", \"utf8\");\nfunction createAccountGeneratorFromSeedAndPath(seedBuffer, hdPath) {\n    const parent = createAccountFromSeed(seedBuffer);\n    const path = deriveFromPath(hdPath, parent);\n    return (index) => {\n        return deriveFromIndex(index, path);\n    };\n}\nexports.createAccountGeneratorFromSeedAndPath = createAccountGeneratorFromSeedAndPath;\nfunction createAccountFromSeed(seedBuffer) {\n    const I = (0, crypto_1.createHmac)(\"sha512\", MASTER_SECRET).update(seedBuffer).digest();\n    const privateKey = I.slice(0, 32);\n    const chainCode = I.slice(32);\n    const publicKey = makePublicKey(privateKey);\n    return {\n        privateKey,\n        chainCode,\n        publicKey\n    };\n}\nexports.createAccountFromSeed = createAccountFromSeed;\nfunction deriveFromPath(fullPath, child) {\n    fullPath.forEach(function (c, i) {\n        if (i === 0) {\n            if (!/^[mM]{1}/.test(c)) {\n                throw new Error('Path must start with \"m\" or \"M\"');\n            }\n            return;\n        }\n        const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n        let childIndex = parseInt(c, 10);\n        if (childIndex >= HARDENED_OFFSET)\n            throw new Error(\"Invalid index\");\n        if (hardened)\n            childIndex += HARDENED_OFFSET;\n        child = deriveChild(childIndex, hardened, child.privateKey, child.publicKey, child.chainCode);\n    });\n    return child;\n}\nexports.deriveFromPath = deriveFromPath;\nfunction deriveFromIndex(index, child) {\n    if (index >= HARDENED_OFFSET)\n        throw new Error(\"Invalid index\");\n    return deriveChild(index, false, child.privateKey, child.publicKey, child.chainCode);\n}\nexports.deriveFromIndex = deriveFromIndex;\nfunction makePublicKey(privateKey) {\n    const publicKey = Buffer.allocUnsafe(33);\n    switch (secp256k1_1.default.publicKeyCreate(publicKey, privateKey)) {\n        case 0:\n            return publicKey;\n        case 1:\n            throw new Error(\"Private Key is invalid\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n}\n/**\n * A buffer of size 4 that can be reused as long as all changes are consumed\n * within the same event loop.\n */\nconst SHARED_BUFFER_4 = Buffer.allocUnsafe(4);\nfunction deriveChild(index, isHardened, privateKey, publicKey, chainCode) {\n    const indexBuffer = SHARED_BUFFER_4;\n    indexBuffer.writeUInt32BE(index, 0);\n    let data;\n    const privateKeyLength = privateKey.length;\n    if (isHardened) {\n        // Hardened child\n        // privateKeyLength + 1 (BUFFER_ZERO.length) + 4 (indexBuffer.length)\n        const dataLength = privateKeyLength + 1 + 4;\n        data = Buffer.concat([utils_1.BUFFER_ZERO, privateKey, indexBuffer], dataLength);\n    }\n    else {\n        // Normal child\n        data = Buffer.concat([publicKey, indexBuffer], publicKey.length + 4);\n    }\n    const I = (0, crypto_1.createHmac)(\"sha512\", chainCode).update(data).digest();\n    const IL = I.slice(0, 32);\n    try {\n        const newPrivK = Buffer.allocUnsafe(privateKeyLength);\n        privateKey.copy(newPrivK, 0, 0, privateKeyLength);\n        switch (secp256k1_1.default.privateKeyTweakAdd(newPrivK, IL)) {\n            case 0:\n                return {\n                    privateKey: newPrivK,\n                    publicKey: makePublicKey(newPrivK),\n                    chainCode: I.slice(32)\n                };\n            case 1:\n                throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n        }\n    }\n    catch {\n        return deriveChild(index + 1, isHardened, privateKey, publicKey, chainCode);\n    }\n}\n//# sourceMappingURL=hdkey.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst bn = (val = 0) => new bn_js_1.default(val);\nconst STIPEND = bn(2300);\nconst bigIntToBN = (val) => {\n    return new bn_js_1.default(val.toString());\n};\nconst MULTIPLE = 64 / 63;\nconst check = (set) => (opname) => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\nconst stepTracker = () => {\n    const sysOps = [];\n    const allOps = [];\n    const preCompile = new Set();\n    let preCompileCheck = false;\n    let precompileCallDepth = 0;\n    return {\n        collect: (info) => {\n            if (preCompileCheck) {\n                if (info.depth === precompileCallDepth) {\n                    // If the current depth is unchanged.\n                    // we record its position.\n                    preCompile.add(allOps.length - 1);\n                }\n                // Reset the flag immediately here\n                preCompileCheck = false;\n            }\n            if (isCall(info.opcode.name)) {\n                info.stack = [...info.stack];\n                preCompileCheck = true;\n                precompileCallDepth = info.depth;\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            // This goes last so we can use the length for the index ^\n            allOps.push(info);\n        },\n        isPrecompile: (index) => preCompile.has(index),\n        done: () => !allOps.length ||\n            sysOps.length < 2 ||\n            !isTerminator(allOps[allOps.length - 1].opcode.name),\n        ops: allOps,\n        systemOps: sysOps\n    };\n};\nconst estimateGas = async (generateVM, runArgs, callback) => {\n    const vm = await generateVM();\n    exactimate(vm, runArgs, (err, result) => {\n        if (err)\n            return callback(err);\n        binSearch(generateVM, runArgs, result, (err, result) => {\n            if (err)\n                return callback(err);\n            callback(null, result);\n        });\n    });\n};\nconst binSearch = async (generateVM, runArgs, result, callback) => {\n    const MAX = bigIntToBN(runArgs.block.header.gasLimit);\n    const gasRefund = result.execResult.gasRefund;\n    const startingGas = gasRefund\n        ? bigIntToBN(result.gasEstimate + gasRefund)\n        : bigIntToBN(result.gasEstimate);\n    const range = { lo: startingGas, hi: startingGas };\n    const isEnoughGas = async (gas) => {\n        const vm = await generateVM(); // Generate fresh VM\n        runArgs.tx.gasLimit = utils_1.Quantity.toBigInt(gas.toBuffer());\n        await vm.stateManager.checkpoint();\n        const result = await vm\n            .runTx(runArgs)\n            .catch(vmerr => ({ vmerr }));\n        await vm.stateManager.revert();\n        return !(\"vmerr\" in result) && !result.execResult.exceptionError;\n    };\n    if (!(await isEnoughGas(range.hi))) {\n        do {\n            range.hi = range.hi.muln(MULTIPLE);\n        } while (!(await isEnoughGas(range.hi)));\n        while (range.lo.addn(1).lt(range.hi)) {\n            const mid = range.lo.add(range.hi).divn(2);\n            if (await isEnoughGas(mid)) {\n                range.hi = mid;\n            }\n            else {\n                range.lo = mid;\n            }\n        }\n        if (range.hi.gte(MAX)) {\n            if (!(await isEnoughGas(range.hi))) {\n                return callback(new Error(\"gas required exceeds allowance or always failing transaction\"));\n            }\n        }\n    }\n    result.gasEstimate = utils_1.Quantity.toBigInt(range.hi.toBuffer());\n    callback(null, result);\n};\nconst exactimate = async (vm, runArgs, callback) => {\n    const steps = stepTracker();\n    vm.evm.events.on(\"step\", steps.collect);\n    const Context = (index, fee) => {\n        const base = index === 0;\n        let start = index;\n        let stop = 0;\n        const cost = bn();\n        let sixtyFloorths = bn();\n        const op = steps.ops[index];\n        const next = steps.ops[index + 1];\n        const intermediateCost = bigIntToBN(op.gasLeft - next.gasLeft);\n        const callingFee = fee || bn();\n        let compositeContext = false;\n        function addGas(val) {\n            // Add to our current context, but accounted for in sixtyfloorths\n            if (sixtyFloorths.gtn(0)) {\n                if (val.gte(sixtyFloorths)) {\n                    sixtyFloorths = bn();\n                }\n                else {\n                    sixtyFloorths.isub(val);\n                }\n            }\n            cost.iadd(val);\n        }\n        return {\n            start: () => start,\n            stop: () => stop,\n            setStart: (val) => {\n                start = val;\n                compositeContext = true;\n            },\n            setStop: (val) => {\n                stop = val;\n            },\n            getCost: () => ({ cost, sixtyFloorths }),\n            transfer: ctx => {\n                const values = ctx.getCost();\n                addGas(values.cost);\n                sixtyFloorths.iadd(values.sixtyFloorths);\n            },\n            addSixtyFloorth: (sixtyFloorth) => {\n                sixtyFloorths.iadd(sixtyFloorth);\n            },\n            addRange: (fee = bn()) => {\n                const range = steps.ops[base || compositeContext ? start : start + 1].gasLeft -\n                    steps.ops[stop].gasLeft;\n                // only occurs on stack increasing ops\n                addGas(bigIntToBN(range).add(fee));\n            },\n            finalizeRange: () => {\n                let range;\n                // if we have a composite context and we are NOT at the final terminator\n                if (compositeContext && stop !== steps.ops.length - 1) {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop - 1].gasLeft);\n                    addGas(range);\n                    const tail = bigIntToBN(steps.ops[stop - 1].gasLeft - steps.ops[stop].gasLeft);\n                    range = tail.add(intermediateCost);\n                }\n                else {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop].gasLeft);\n                }\n                range.isub(callingFee);\n                addGas(range);\n                if (isCallOrCallcode(op.opcode.name) &&\n                    !(op.stack[op.stack.length - 3] === 0n)) {\n                    cost.iadd(sixtyFloorths);\n                    const innerCost = bigIntToBN(next.gasLeft - steps.ops[stop - 1].gasLeft);\n                    if (innerCost.gt(STIPEND)) {\n                        sixtyFloorths = cost.divn(63);\n                    }\n                    else if (innerCost.lte(STIPEND)) {\n                        sixtyFloorths = STIPEND.sub(innerCost);\n                    }\n                }\n                else if (stop !== steps.ops.length - 1) {\n                    cost.iadd(sixtyFloorths);\n                    sixtyFloorths = cost.divn(63);\n                }\n            }\n        };\n    };\n    const getTotal = () => {\n        const sysops = steps.systemOps;\n        const ops = steps.ops;\n        const opIndex = cursor => sysops[cursor].index;\n        const stack = [];\n        let cursor = 0;\n        let context = Context(0);\n        while (cursor < sysops.length) {\n            const currentIndex = opIndex(cursor);\n            const current = ops[currentIndex];\n            const name = current.opcode.name;\n            if (isCall(name) || isCreate(name)) {\n                if (steps.isPrecompile(currentIndex)) {\n                    context.setStop(currentIndex + 1);\n                    context.addRange();\n                    context.setStart(currentIndex + 1);\n                    context.addSixtyFloorth(STIPEND);\n                }\n                else {\n                    context.setStop(currentIndex);\n                    const feeBn = bn(current.opcode.fee);\n                    context.addRange(feeBn);\n                    stack.push(context);\n                    context = Context(currentIndex, feeBn); // setup next context\n                }\n            }\n            else if (isTerminator(name)) {\n                // only on the last operation\n                context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n                context.finalizeRange();\n                const ctx = stack.pop();\n                if (ctx) {\n                    ctx.transfer(context);\n                    context = ctx;\n                    context.setStart(currentIndex + 1);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                throw new Error(\"INVALID OPCODE\");\n            }\n            cursor++;\n        }\n        const gas = context.getCost();\n        return gas.cost.add(gas.sixtyFloorths);\n    };\n    await vm.stateManager.checkpoint();\n    const result = await vm\n        .runTx(runArgs)\n        .catch(vmerr => ({ vmerr }));\n    await vm.stateManager.revert();\n    if (\"vmerr\" in result) {\n        const vmerr = result.vmerr;\n        return callback(vmerr);\n    }\n    else if (result.execResult.exceptionError) {\n        const error = new ethereum_utils_1.RuntimeError(\n        // erroneous gas estimations don't have meaningful hashes\n        utils_1.Quantity.Empty, result, ethereum_utils_1.RETURN_TYPES.RETURN_VALUE);\n        return callback(error, result);\n    }\n    else {\n        const ret = result;\n        if (steps.done()) {\n            const estimate = result.totalGasSpent;\n            ret.gasEstimate = estimate;\n        }\n        else {\n            const gasLeftStart = steps.ops[0].gasLeft;\n            const gasLeftEnd = steps.ops[steps.ops.length - 1].gasLeft;\n            const actualUsed = bigIntToBN(gasLeftStart - gasLeftEnd);\n            const sixtyFloorths = getTotal().sub(actualUsed);\n            ret.gasEstimate =\n                result.totalGasSpent + utils_1.Quantity.toBigInt(sixtyFloorths.toBuffer());\n        }\n        callback(null, ret);\n    }\n};\nexports.default = estimateGas;\n//# sourceMappingURL=gas-estimator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst semaphore_1 = __importDefault(require(\"semaphore\"));\nconst limit_counter_1 = require(\"./limit-counter\");\n/**\n * Sleeps the specified number of milliseconds, then resolves the Promise.\n * Rejects with an `AbortError` if the provided `signal` is already aborted. If\n * the signal's `\"abort\"` event is invoked while sleeping, the the promise\n * rejects with an `AbortError`.\n *\n * @param ms - the number of milliseconds to wait before resolving\n * @param abortSignal - the\n * @returns a promise that resolves when `ms`milliseconds have elapsed, or\n * rejects if the `signal` is aborted.\n */\nconst sleep = (ms, signal) => {\n    if (signal.aborted)\n        return Promise.reject(new ethereum_utils_1.AbortError());\n    return new Promise((resolve, reject) => {\n        function abort() {\n            clearTimeout(timer);\n            signal.removeEventListener(\"abort\", abort);\n            reject(new ethereum_utils_1.AbortError());\n        }\n        const timer = setTimeout(() => {\n            signal.removeEventListener(\"abort\", abort);\n            resolve();\n        }, ms);\n        signal.addEventListener(\"abort\", abort);\n    });\n};\n/**\n * @param timestamp -\n * @param duration -\n * @returns the result of rounding `timestamp` toward zero to a multiple of\n * `duration`.\n */\nfunction timeTruncate(timestamp, duration) {\n    return timestamp - (timestamp % duration);\n}\n/**\n * @param result -\n * @returns true if the result is a JSON-RPC LIMIT_EXCEEDED error\n */\nfunction isExceededLimitError(response) {\n    return ((0, utils_1.hasOwn)(response, \"error\") &&\n        response.error != null &&\n        response.error.code === utils_1.JsonRpcErrorCode.LIMIT_EXCEEDED);\n}\n/**\n * A sliding window rate limiter.\n *\n * Rate estimation from\n * https://blog.cloudflare.com/counting-things-a-lot-of-different-things/\n *\n * Let's say we set a limit of 50 requests per minute. The counter can be\n * thought of like this:\n *\n * ```ascii\n *         ╔══════════════════════════════════╗\n *         ║   sampling period: 60 seconds    ║\n * ╭───────╫────────────────────────┬─────────╫──────────────────────╮\n * │       ║previous minute         │         current minute         │\n * │       ║  42 requests           │         ║18 requests           │\n * ╰───────╫────────────────────────┼─────────╫──────────────────────╯\n *         ║         45 secs        │ 15 secs ║\n *         ╚════════════════════════╧═════════╝\n * ```\n *\n * In this situation, we did 18 requests during the current minute, which\n * started 15 seconds ago, and 42 requests during the entire previous minute.\n * Based on this information, the rate approximation is calculated like this:\n *\n * ```javascript\n * rate = (42 * (45 / 60)) + 18\n *      = (42 * 0.75) + 18\n *      = 49.5 // requests\n *\n *      = 59.5 // requests\n * ```\n *\n * One more request during the next second and the rate limiter will kick in.\n *\n * This algorithm assumes a constant rate of requests during the previous\n * sampling period (which can be any time span), so the result is only\n * an approximation of the actual rate, but it is quick to calculate and\n * lightweight.\n */\nclass RateLimiter {\n    constructor(requestLimit, windowSizeMs, abortSignal) {\n        this.sem = (0, semaphore_1.default)(1);\n        this.take = () => new Promise(resolve => this.sem.take(resolve));\n        this.mustBackoff = null;\n        this.counter = 0;\n        this.requestLimit = requestLimit;\n        // the rate limiter splits the window in 2 to measure the RPS\n        this.windowSizeMs = windowSizeMs / 2;\n        this.limitCounter = new limit_counter_1.LimitCounter(this.windowSizeMs);\n        this.abortSignal = abortSignal;\n    }\n    /**\n     * @param now -\n     * @param currentWindow -\n     * @returns the current request rate and the allowed execution time of the\n     * next request\n     */\n    status(now, currentWindow) {\n        const limit = this.requestLimit;\n        const windowSizeMs = this.windowSizeMs;\n        const currWindow = currentWindow;\n        const prevWindow = currWindow - windowSizeMs;\n        const [currCount, prevCount] = this.limitCounter.get(currWindow, prevWindow);\n        let rate;\n        if (prevCount === 0) {\n            rate = currCount;\n        }\n        else {\n            // use the average for the previous window, plus everything for this\n            // window\n            rate =\n                prevCount * ((windowSizeMs - (now - currWindow)) / windowSizeMs) +\n                    currCount;\n        }\n        // limit <= 0 means the limiter is disabled\n        if (limit > 0 && rate + 1 > limit) {\n            const nextCount = currCount + 1;\n            const nextLimit = limit + 1;\n            const next = prevCount === 0\n                ? currWindow + windowSizeMs + windowSizeMs / nextLimit\n                : (windowSizeMs * (prevCount + nextCount - nextLimit)) / prevCount +\n                    currWindow;\n            return { rate, next };\n        }\n        return { rate, next: now };\n    }\n    /**\n     * Executes the given fn within the confines of the configured rate limit. If\n     * the function's return value is a JSON-RPC LIMIT_EXCEEDED error, it will\n     * automatically retry with the given `backoff_seconds`\n     * @param fn -\n     */\n    async handle(fn) {\n        // allow scheduling one fn at a time\n        await this.take();\n        try {\n            return await this.schedule(fn);\n        }\n        finally {\n            this.sem.leave();\n        }\n    }\n    async schedule(fn) {\n        const signal = this.abortSignal;\n        while (true) {\n            if (signal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if (this.mustBackoff)\n                await this.mustBackoff;\n            const now = Date.now();\n            const currentWindow = timeTruncate(now, this.windowSizeMs);\n            const { rate, next } = this.status(now, currentWindow);\n            // process.stdout.write(\n            //   `rate: ${rate}, wait: ${next - now}              \\r`\n            // );\n            // if this request would be over the rate limit and the amount of time\n            // we'd need to back off is > 1ms we need to schedule this in the future\n            if (rate + 1 > this.requestLimit && next > now) {\n                await sleep(Date.now() - next, signal);\n            }\n            else {\n                this.limitCounter.increment(currentWindow);\n                const result = await fn();\n                if (isExceededLimitError(result.response)) {\n                    if ((0, utils_1.hasOwn)(result.response.error.data, \"rate\")) {\n                        const backoffSeconds = result.response.error.data.rate.backoff_seconds;\n                        // console.log(`backing off for ${backoffSeconds}`);\n                        // console.log(result.error.data.rate);\n                        // TODO: I need to make all in-flight requests that will soon return\n                        // a LIMIT_EXCEEDED error behave, otherwise we'll just send ALL\n                        // requests back to Infura simultaneously after their initial 30\n                        // backoff_seconds have elapsed.\n                        // Issue: https://github.com/trufflesuite/ganache/issues/3480\n                        //\n                        // When we are *not* self-rate limited (meaning fork.rps isn't set)\n                        // we need to be able to go at full speed until we are, and THEN we\n                        // need to go at whatever infura wants.\n                        //\n                        // TODO: TODO: ask infura to add the X-Rate-Limit* headers to all\n                        // HTTP responses so we can poll for info to help us avoid ever\n                        // getting rate limited in the first place.\n                        // this is part of an attempt at solving the above comment\n                        this.requestLimit =\n                            result.response.error.data.rate.allowed_rps *\n                                (this.windowSizeMs / 1000);\n                        const limiter = (this.mustBackoff = sleep(backoffSeconds * 1000, signal));\n                        await this.mustBackoff;\n                        if (this.mustBackoff === limiter) {\n                            this.mustBackoff = null;\n                        }\n                        continue;\n                    }\n                    else {\n                        // we don't know how to parse this error, so we do nothing, I guess?\n                    }\n                }\n                return result;\n            }\n        }\n    }\n}\nexports.default = RateLimiter;\n//# sourceMappingURL=rate-limiter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ws_1 = __importDefault(require(\"ws\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass WsHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.inFlightRequests = new Map();\n        const { fork: { url, origin }, logging } = options;\n        this.connection = new ws_1.default(url.toString(), {\n            origin,\n            headers: this.headers\n        });\n        // `nodebuffer` is already the default, but I just wanted to be explicit\n        // here because when `nodebuffer` is the binaryType the `message` event's\n        // data type is guaranteed to be a `Buffer`. We don't need to check for\n        // different types of data.\n        // I mention all this because if `arraybuffer` or `fragment` is used for the\n        // binaryType the `\"message\"` event's `data` may end up being\n        // `ArrayBuffer | Buffer`, or `Buffer[] | Buffer`, respectively.\n        // If you need to change this, you probably need to change our `onMessage`\n        // handler too.\n        this.connection.binaryType = \"nodebuffer\";\n        this.open = this.connect(this.connection, logging);\n        this.connection.onclose = () => {\n            // try to connect again...\n            // Issue: https://github.com/trufflesuite/ganache/issues/3476\n            // TODO: backoff and eventually fail\n            // Issue: https://github.com/trufflesuite/ganache/issues/3477\n            this.open = this.connect(this.connection, logging);\n        };\n        this.abortSignal.addEventListener(\"abort\", () => {\n            this.connection.onclose = null;\n            this.connection.close(1000);\n        });\n        this.connection.onmessage = this.onMessage.bind(this);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        await this.open;\n        if (this.abortSignal.aborted)\n            return Promise.reject(new ethereum_utils_1.AbortError());\n        const key = JSON.stringify({ method, params });\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const messageId = this.id++;\n            const deferred = (0, deferred_1.default)();\n            // TODO: timeout an in-flight request after some amount of time\n            // Issue: https://github.com/trufflesuite/ganache/issues/3478\n            this.inFlightRequests.set(messageId, deferred);\n            this.connection.send(`${JSONRPC_PREFIX}${messageId},${key.slice(1)}`);\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n    onMessage(event) {\n        if (event.type !== \"message\")\n            return;\n        // data is always a `Buffer` because the websocket's binaryType is set to\n        // `nodebuffer`\n        const raw = event.data;\n        // TODO: handle invalid JSON (throws on parse)?\n        // Issue: https://github.com/trufflesuite/ganache/issues/3479\n        const response = JSON.parse(raw);\n        const id = response.id;\n        const prom = this.inFlightRequests.get(id);\n        if (prom) {\n            this.inFlightRequests.delete(id);\n            prom.resolve({ response, raw: raw });\n        }\n    }\n    connect(connection, logging) {\n        let open = new Promise((resolve, reject) => {\n            connection.onopen = resolve;\n            connection.onerror = reject;\n        });\n        open.then(() => {\n            connection.onopen = null;\n            connection.onerror = null;\n        }, err => {\n            logging.logger.log(err);\n        });\n        return open;\n    }\n    async close() {\n        await super.close();\n        this.connection.close();\n    }\n}\nexports.WsHandler = WsHandler;\n//# sourceMappingURL=ws-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinOptionsConfig = exports.FilecoinDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.FilecoinDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions\n};\nexports.FilecoinOptionsConfig = new options_1.OptionsConfig(exports.FilecoinDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: () => 10,\n        cliAliases: [\"a\"],\n        cliType: \"number\"\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\"],\n        cliType: \"boolean\",\n        conflicts: [\"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        cliAliases: [\"s\"],\n        cliType: \"string\",\n        conflicts: [\"deterministic\"]\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in FIL.\",\n        default: () => 100,\n        cliAliases: [\"b\"],\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntToBuffer = void 0;\nconst common_1 = require(\"../common\");\nconst constants_1 = require(\"./constants\");\nconst uint_to_buffer_1 = require(\"./uint-to-buffer\");\nconst allocUnsafe = Buffer.allocUnsafe;\nlet _bigIntToBuffer;\n/**\n * Returns the number of bytes contained in this given `value`.\n * @param value -\n */\nfunction bigIntByteLength(value) {\n    let length = 1;\n    while ((value >>= 8n))\n        length++;\n    return length;\n}\nconst MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\ntry {\n    // force fallback if only `toBufferBE` is missing (this can happen if toBufferBE isn't polyfilled for the browser,\n    // which, at the time of this writing... it isn't)\n    if (!common_1.toBufferBE)\n        throw new Error(\"Missing function `toBufferBE`!\");\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            const size = bigIntByteLength(value);\n            return (0, common_1.toBufferBE)(value, size);\n        }\n    };\n}\ncatch {\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            // if this value can be handled as a JS number safely, convert it that way\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            let length = bigIntByteLength(value);\n            const buf = allocUnsafe(length);\n            // process 1 byte at a time\n            do {\n                // truncate to right-most 32 bits and assign to buffer position `length`\n                buf[--length] = Number(value & 0xffffffffn);\n                // shift right-most byte off since we've used it\n                value >>= 8n;\n            } while (length);\n            return buf;\n        }\n    };\n}\n/**\n * Converts a bigint to a Buffer (Big Endian)\n */\nexports.bigIntToBuffer = _bigIntToBuffer;\n//# sourceMappingURL=bigint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToBigInt = void 0;\nconst bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\n/**\n * note: this doesn't handle negative values\n * @param value - Buffer representation of a bigint, most-significant bit first (Big-endian)\n */\nfunction bufferToBigInt(value) {\n    // Parsed as BE.\n    // This doesn't handle negative values. We may need to add logic to handle\n    // it because it is possible values returned from the VM could be negative\n    // and stored in a buffer.\n    const length = value.byteLength;\n    if (length === 0) {\n        return null;\n    }\n    // Buffers that are 6 bytes or less can be converted with built-in methods\n    if (length <= 6) {\n        return BigInt(value.readUIntBE(0, length));\n    }\n    let view;\n    // Buffers that are 7 bytes need to be padded to 8 bytes\n    if (length === 7) {\n        const padded = new Uint8Array(8);\n        // set byte 0 to 0, and bytes 1-8 to the value's 7 bytes:\n        padded.set(value, 1);\n        view = new DataView(padded.buffer);\n    }\n    else if (length === 8) {\n        view = new DataView(value.buffer, value.byteOffset, length);\n    }\n    else {\n        // TODO: toBigIntBE is a native lib with no pure JS fallback yet.\n        return (0, bigint_buffer_1.toBigIntBE)(value);\n    }\n    return view.getBigUint64(0);\n}\nexports.bufferToBigInt = bufferToBigInt;\n//# sourceMappingURL=buffer-to-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwn = void 0;\nconst _hasOwn = {}.hasOwnProperty.call.bind({}.hasOwnProperty);\n/**\n * /**\n * Determines whether an object has a property with the specified name.\n *\n * Safe for use on user-supplied data.\n *\n * @param obj - The object that will be checked.\n * @param prop - A property name.\n * @returns `true` if the object has a property with the specified name,\n * otherwise `false`.\n */\nconst hasOwn = (obj, prop) => {\n    return obj != null && _hasOwn(obj, prop);\n};\nexports.hasOwn = hasOwn;\n//# sourceMappingURL=has-own.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcErrorCode = exports.makeError = exports.makeResponse = exports.makeRequest = void 0;\nconst jsonrpc = \"2.0\";\nconst makeRequest = (json) => {\n    return {\n        id: json.id,\n        jsonrpc,\n        method: json.method,\n        params: json.params\n    };\n};\nexports.makeRequest = makeRequest;\nconst makeResponse = (id, result) => {\n    return {\n        id,\n        jsonrpc,\n        result\n    };\n};\nexports.makeResponse = makeResponse;\nconst makeError = (id, error, result) => {\n    // Error objects are weird, `message` isn't included in the property names,\n    // so it is pulled out separately.\n    const details = { message: error.message };\n    Object.getOwnPropertyNames(error).forEach(name => {\n        if (typeof name === \"string\") {\n            details[name] = error[name];\n        }\n    });\n    if (typeof details.code !== \"number\") {\n        details.code = -32700; // JSON-RPC Parse error\n    }\n    if (result !== undefined) {\n        return {\n            id,\n            jsonrpc,\n            error: details,\n            result\n        };\n    }\n    else {\n        return {\n            id,\n            jsonrpc,\n            error: details\n        };\n    }\n};\nexports.makeError = makeError;\nvar JsonRpcErrorCode;\n(function (JsonRpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * An error occurred on the server while parsing the JSON text.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Missing or invalid parameters\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_INPUT\"] = -32000] = \"INVALID_INPUT\";\n    /**\n     * Transaction creation failed\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"TRANSACTION_REJECTED\"] = -32003] = \"TRANSACTION_REJECTED\";\n    /**\n     * \tMethod is not implemented\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_SUPPORTED\"] = -32004] = \"METHOD_NOT_SUPPORTED\";\n    /**\n     * \tRequest exceeds defined limit\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"LIMIT_EXCEEDED\"] = -32005] = \"LIMIT_EXCEEDED\";\n    /**\n     * Version of JSON-RPC protocol is not supported\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"JSON_RPC_VERSION_NOT_SUPPORTED\"] = -32006] = \"JSON_RPC_VERSION_NOT_SUPPORTED\";\n})(JsonRpcErrorCode = exports.JsonRpcErrorCode || (exports.JsonRpcErrorCode = {}));\n//# sourceMappingURL=jsonrpc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst flavors_1 = require(\"@ganache/flavors\");\nconst flavors_2 = require(\"@ganache/flavors\");\nconst initialize = (options = {\n    flavor: flavors_1.DefaultFlavor,\n    chain: { asyncRequestProcessing: true }\n}) => {\n    const flavor = (options.flavor || flavors_1.DefaultFlavor);\n    // Set up our request coordinator to either use FIFO or or async request\n    // processing. The RequestCoordinator _can_ be used to coordinate the number\n    // of requests being processed, but we don't use it for that (yet), instead\n    // of \"all\" (0) or just 1 as we are doing here:\n    let asyncRequestProcessing;\n    if (\"chain\" in options && \"asyncRequestProcessing\" in options[\"chain\"]) {\n        asyncRequestProcessing = options.chain.asyncRequestProcessing;\n    }\n    else if (\"asyncRequestProcessing\" in options) {\n        asyncRequestProcessing = options.asyncRequestProcessing;\n    }\n    else {\n        asyncRequestProcessing = true;\n    }\n    const requestCoordinator = new utils_1.RequestCoordinator(asyncRequestProcessing ? 0 : 1);\n    // The Executor is responsible for actually executing the method on the\n    // chain/API. It performs some safety checks to ensure \"safe\" method\n    //  execution before passing it to a RequestCoordinator.\n    const executor = new utils_1.Executor(requestCoordinator);\n    const connector = (0, flavors_2.GetConnector)(flavor, options, executor);\n    // Purposely not awaiting on this to prevent a breaking change\n    // to the `Ganache.provider()` method\n    // TODO: remove the `connector.connect ? ` check and just use\n    // `connector.connect()` after publishing the `@ganache/filecoin` with the\n    // connector.connect interface\n    const connectPromise = connector.connect\n        ? connector.connect()\n        : connector.initialize();\n    // The request coordinator is initialized in a \"paused\" state; when the\n    // provider is ready we unpause.. This lets us accept queue requests before\n    // we've even fully initialized.\n    // The function referenced by requestcoordinator.resume will be changed when\n    // requestCoordinator.stop() is called. Ensure that no references to the\n    // function are held, otherwise internal errors may be surfaced.\n    return {\n        connector,\n        promise: connectPromise.then(() => requestCoordinator.resume())\n    };\n};\n/**\n * Loads the connector specified by the given `flavor`\n */\nexports.default = {\n    initialize\n};\n//# sourceMappingURL=connector-loader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeError = exports.RETURN_TYPES = void 0;\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_2 = require(\"@ganache/utils\");\nvar RETURN_TYPES;\n(function (RETURN_TYPES) {\n    RETURN_TYPES[RETURN_TYPES[\"TRANSACTION_HASH\"] = 0] = \"TRANSACTION_HASH\";\n    RETURN_TYPES[RETURN_TYPES[\"RETURN_VALUE\"] = 1] = \"RETURN_VALUE\";\n})(RETURN_TYPES = exports.RETURN_TYPES || (exports.RETURN_TYPES = {}));\nclass RuntimeError extends coded_error_1.CodedError {\n    constructor(transactionHash, result, returnType) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const hash = transactionHash.toString();\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = {\n            hash: hash,\n            programCounter: execResult.runState.programCounter,\n            result: returnType === RETURN_TYPES.TRANSACTION_HASH\n                ? hash\n                : utils_1.Data.toString(returnValue || \"0x\"),\n            reason: reason,\n            message: error\n        };\n    }\n}\nexports.RuntimeError = RuntimeError;\n//# sourceMappingURL=runtime-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterTypes = void 0;\nvar FilterTypes;\n(function (FilterTypes) {\n    FilterTypes[FilterTypes[\"log\"] = 0] = \"log\";\n    FilterTypes[FilterTypes[\"block\"] = 1] = \"block\";\n    FilterTypes[FilterTypes[\"pendingTransaction\"] = 2] = \"pendingTransaction\";\n})(FilterTypes = exports.FilterTypes || (exports.FilterTypes = {}));\n//# sourceMappingURL=filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_block_1 = require(\"./runtime-block\");\nconst utils_2 = require(\"@ganache/utils\");\nconst block_params_1 = require(\"./block-params\");\nclass Block {\n    constructor(serialized, common) {\n        this._common = common;\n        if (serialized) {\n            const deserialized = (0, rlp_1.decode)(serialized);\n            this._raw = deserialized[0];\n            this._rawTransactions = deserialized[1] || [];\n            // TODO: support actual uncle data (needed for forking!)\n            // Issue: https://github.com/trufflesuite/ganache/issues/786\n            // const uncles = deserialized[2];\n            const totalDifficulty = deserialized[3];\n            this.header = (0, runtime_block_1.makeHeader)(this._raw, totalDifficulty);\n            this._rawTransactionMetaData = deserialized[4] || [];\n            this._size = utils_1.Quantity.toNumber(deserialized[5]);\n        }\n    }\n    hash() {\n        return (this._hash || (this._hash = utils_1.Data.from((0, utils_2.keccak)((0, rlp_1.encode)(this._raw)), 32)));\n    }\n    getTransactions() {\n        const common = this._common;\n        return this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                this.hash().toBuffer(),\n                this.header.number.toBuffer(),\n                utils_1.Quantity.toBuffer(index)\n            ];\n            return ethereum_transaction_1.TransactionFactory.fromDatabaseTx(raw, common, extra);\n        });\n    }\n    toJSON(includeFullTransactions) {\n        const hash = this.hash();\n        const txFn = this.getTxFn(includeFullTransactions);\n        const hashBuffer = hash.toBuffer();\n        const header = this.header;\n        const number = header.number.toBuffer();\n        const common = this._common;\n        const jsonTxs = this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                hashBuffer,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = ethereum_transaction_1.TransactionFactory.fromDatabaseTx(raw, common, extra);\n            // we could either parse the raw data to check if the tx is type 2,\n            // get the maxFeePerGas and maxPriorityFeePerGas, use those to calculate\n            // the effectiveGasPrice and add it to `extra` above, or we can just\n            // leave it out of extra and update the effectiveGasPrice after like this\n            tx.updateEffectiveGasPrice(header.baseFeePerGas?.toBigInt());\n            return txFn(tx);\n        });\n        return {\n            hash,\n            ...header,\n            size: utils_1.Quantity.from(this._size),\n            transactions: jsonTxs,\n            uncles: [] // this.value.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\n        };\n    }\n    getTxFn(include = false) {\n        if (include) {\n            return (tx) => tx.toJSON(this._common);\n        }\n        else {\n            return (tx) => tx.hash;\n        }\n    }\n    static fromParts(rawHeader, txs, totalDifficulty, extraTxs, size, common) {\n        const block = new Block(null, common);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = (0, runtime_block_1.makeHeader)(rawHeader, totalDifficulty);\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return block;\n    }\n    static calcNextBaseFeeBigInt(parentHeader) {\n        let nextBaseFee;\n        const header = parentHeader;\n        const parentGasTarget = header.gasLimit.toBigInt() / block_params_1.BlockParams.ELASTICITY;\n        const parentGasUsed = header.gasUsed.toBigInt();\n        const baseFeePerGas = header.baseFeePerGas\n            ? header.baseFeePerGas.toBigInt()\n            : block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n        if (parentGasTarget === parentGasUsed) {\n            // If the parent gasUsed is the same as the target, the baseFee remains unchanged.\n            nextBaseFee = baseFeePerGas;\n        }\n        else if (parentGasUsed > parentGasTarget) {\n            // If the parent block used more gas than its target, the baseFee should increase.\n            const gasUsedDelta = parentGasUsed - parentGasTarget;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            if (adjustedFeeDelta > 1n) {\n                nextBaseFee = baseFeePerGas + adjustedFeeDelta;\n            }\n            else {\n                nextBaseFee = baseFeePerGas + 1n;\n            }\n        }\n        else {\n            // Otherwise if the parent block used less gas than its target, the baseFee should decrease.\n            const gasUsedDelta = parentGasTarget - parentGasUsed;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            nextBaseFee = baseFeePerGas - adjustedFeeDelta;\n        }\n        return nextBaseFee;\n    }\n    static calcNBlocksMaxBaseFee(blocks, parentHeader) {\n        const { BASE_FEE_MAX_CHANGE_DENOMINATOR } = block_params_1.BlockParams;\n        let maxPossibleBaseFee = this.calcNextBaseFeeBigInt(parentHeader);\n        // we must calculate each future block's max base fee individually because\n        // each block's base fee must be appropriately \"floored\" (Math.floor) before\n        // the following block's base fee is calculated. If we don't do this we'll\n        // end up with compounding rounding errors.\n        // FYI: the more performant, but rounding error-prone, way is:\n        // return lastMaxBlockBaseFee + (lastMaxBlockBaseFee * ((BASE_FEE_MAX_CHANGE_DENOMINATOR-1)**(blocks-1)) / ((BASE_FEE_MAX_CHANGE_DENOMINATOR)**(blocks-1)))\n        while (--blocks) {\n            maxPossibleBaseFee +=\n                maxPossibleBaseFee / BASE_FEE_MAX_CHANGE_DENOMINATOR;\n        }\n        return maxPossibleBaseFee;\n    }\n    static calcNextBaseFee(parentBlock) {\n        const header = parentBlock.header;\n        if (header.baseFeePerGas === undefined) {\n            return undefined;\n        }\n        else {\n            return this.calcNextBaseFeeBigInt(header);\n        }\n    }\n}\nexports.Block = Block;\n/**\n *  Base fee per gas for blocks without a parent containing a base fee per gas.\n */\nBlock.INITIAL_BASE_FEE_PER_GAS = block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP2930AccessListTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst CAPABILITIES = [2718, 2930];\nclass EIP2930AccessListTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x1\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[2]);\n            this.gas = utils_1.Quantity.from(data[3]);\n            this.to = data[4].length == 0 ? null : ethereum_address_1.Address.from(data[4]);\n            this.value = utils_1.Quantity.from(data[5]);\n            this.data = utils_1.Data.from(data[6]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[7]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[8]);\n            this.r = utils_1.Quantity.from(data[9]);\n            this.s = utils_1.Quantity.from(data[10]);\n            this.raw = [this.type.toBuffer(), ...data];\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toBigInt()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n                if (this.common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(_common) {\n        return {\n            hash: this.hash,\n            type: this.type,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP2930AccessListTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return fee + this.accessListDataFee;\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const typeBuf = this.type.toBuffer();\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 1, 8);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)(Buffer.concat([typeBuf, (0, rlp_1.digest)([data.output], dataLength)]));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[9] = this.v.toBuffer();\n        raw[10] = this.r.toBuffer();\n        raw[11] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n        // raw data is type concatenated with the rest of the data rlp encoded\n        this.serialized = Buffer.concat([\n            typeBuf,\n            (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length)\n        ]);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.type.toBuffer(),\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsAccessListTx)(v, raw);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.EIP2930AccessListTransaction = EIP2930AccessListTransaction;\n//# sourceMappingURL=eip2930-access-list-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.isAccessList = void 0;\nconst tx_1 = require(\"@ethereumjs/tx\");\nvar tx_2 = require(\"@ethereumjs/tx\");\nObject.defineProperty(exports, \"isAccessList\", { enumerable: true, get: function () { return tx_2.isAccessList; } });\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst STORAGE_KEY_LENGTH = 32;\n/*\n  As per https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2930.md\n\n  AccessLists must be in the form of:\n  [[{20 bytes}, [{32 bytes}...]]...]\n  where ... implies \"zero or more of the thing to the left\"\n*/\nclass AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        let slots = 0;\n        const accessListStorageKeyCost = params_1.Params.ACCESS_LIST_STORAGE_KEY_GAS;\n        const accessListAddressCost = params_1.Params.ACCESS_LIST_ADDRESS_GAS;\n        if (accessList && (0, tx_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBuffer = ethereum_address_1.Address.toBuffer(item.address);\n                const storageItems = [];\n                const storageKeysLength = item.storageKeys.length;\n                slots += storageKeysLength;\n                for (let index = 0; index < storageKeysLength; index++) {\n                    storageItems.push(utils_1.Data.toBuffer(item.storageKeys[index], STORAGE_KEY_LENGTH));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ? accessList : [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = ethereum_address_1.Address.toString(data[0]);\n                const storageKeys = [];\n                const storageKeysLength = data[1].length;\n                slots += storageKeysLength;\n                for (let item = 0; item < storageKeysLength; item++) {\n                    storageKeys.push(utils_1.Data.toString(data[1][item], STORAGE_KEY_LENGTH));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        const dataFee = BigInt(bufferAccessList.length * accessListAddressCost +\n            slots * accessListStorageKeyCost);\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n            dataFeeEIP2930: dataFee\n        };\n    }\n}\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=access-lists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP1559FeeMarketTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bigIntMin = (...args) => args.reduce((m, e) => (e < m ? e : m));\nconst CAPABILITIES = [2718, 2930, 1559];\nclass EIP1559FeeMarketTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x2\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data[2]);\n            this.maxFeePerGas = utils_1.Quantity.from(data[3]);\n            this.gas = utils_1.Quantity.from(data[4]);\n            this.to = data[5].length == 0 ? null : ethereum_address_1.Address.from(data[5]);\n            this.value = utils_1.Quantity.from(data[6]);\n            this.data = utils_1.Data.from(data[7]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[8]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[9]);\n            this.r = utils_1.Quantity.from(data[10]);\n            this.s = utils_1.Quantity.from(data[11]);\n            this.raw = [this.type.toBuffer(), ...data];\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data.maxPriorityFeePerGas);\n            this.maxFeePerGas = utils_1.Quantity.from(data.maxFeePerGas);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.maxFeePerGas;\n    }\n    toJSON(_common) {\n        return {\n            type: this.type,\n            hash: this.hash,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasPrice: this.effectiveGasPrice,\n            gas: this.gas,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP1559FeeMarketTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas.toBigInt(),\n            maxFeePerGas: this.maxFeePerGas.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return fee + this.accessListDataFee;\n            },\n            getUpfrontCost: (baseFee = 0n) => {\n                const { gas, maxPriorityFeePerGas, maxFeePerGas, value } = this;\n                const maxPriorityFeePerGasBI = maxPriorityFeePerGas.toBigInt();\n                const maxFeePerGasBI = maxFeePerGas.toBigInt();\n                const gasLimitBI = gas.toBigInt();\n                const valueBI = value.toBigInt();\n                const inclusionFeePerGas = bigIntMin(maxPriorityFeePerGasBI, maxFeePerGasBI - baseFee);\n                const gasPrice = inclusionFeePerGas + baseFee;\n                return gasLimitBI * gasPrice + valueBI;\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const typeBuf = this.type.toBuffer();\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 1, 9);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)(Buffer.concat([typeBuf, (0, rlp_1.digest)([data.output], dataLength)]));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[10] = this.v.toBuffer();\n        raw[11] = this.r.toBuffer();\n        raw[12] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 10, 3);\n        // raw data is type concatenated with the rest of the data rlp encoded\n        this.serialized = Buffer.concat([\n            typeBuf,\n            (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length)\n        ]);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.type.toBuffer(),\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.maxPriorityFeePerGas.toBuffer(),\n            this.maxFeePerGas.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsFeeMarketTx)(v, raw);\n    }\n    updateEffectiveGasPrice(baseFeePerGas) {\n        const maxFeePerGas = this.maxFeePerGas.toBigInt();\n        const maxPriorityFeePerGas = this.maxPriorityFeePerGas.toBigInt();\n        const a = maxFeePerGas - baseFeePerGas;\n        const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n        this.effectiveGasPrice = utils_1.Quantity.from(baseFeePerGas + tip);\n    }\n}\nexports.EIP1559FeeMarketTransaction = EIP1559FeeMarketTransaction;\n//# sourceMappingURL=eip1559-fee-market-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst signing_1 = require(\"./signing\");\nclass LegacyTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.nonce = utils_1.Quantity.from(data[0]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[1]);\n            this.gas = utils_1.Quantity.from(data[2]);\n            this.to = data[3].length == 0 ? null : ethereum_address_1.Address.from(data[3]);\n            this.value = utils_1.Quantity.from(data[4]);\n            this.data = utils_1.Data.from(data[5]);\n            this.v = utils_1.Quantity.from(data[6]);\n            this.r = utils_1.Quantity.from(data[7]);\n            this.s = utils_1.Quantity.from(data[8]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): Transactions that come from the database must not be\n                // validated since they may come from a fork.\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw, this.common.chainId());\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(common) {\n        const json = {\n            hash: this.hash,\n            type: this.type,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n        if ((this.common || common).isActivatedEIP(2718)) {\n            json.type = this.type;\n        }\n        return json;\n    }\n    static fromTxData(data, common, extra) {\n        return new LegacyTransaction(data, common, extra);\n    }\n    static fromEIP2930AccessListTransaction(data, common) {\n        if (Array.isArray(data)) {\n            // remove 1st item, chainId, and 7th item, accessList\n            return new LegacyTransaction(data.slice(1, 7).concat(data.slice(8)), common);\n        }\n        return new LegacyTransaction(data, common);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return false;\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        // only legacy transactions can work with EIP-155 deactivated.\n        // (EIP-2930 and EIP-1559 made EIP-155 obsolete and this logic isn't needed\n        // for those transactions)\n        const eip155IsActive = this.common.gteHardfork(\"spuriousDragon\");\n        let chainId;\n        let raw;\n        let data;\n        let dataLength;\n        let sig;\n        if (eip155IsActive) {\n            chainId = utils_1.Quantity.toBuffer(this.common.chainId());\n            raw = this.toEthRawTransaction(chainId, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const ending = (0, rlp_1.encodeRange)(raw, 6, 3);\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output, ending.output], dataLength + ending.length));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey, this.common.chainId());\n        }\n        else {\n            raw = this.toEthRawTransaction(utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output], dataLength));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey);\n        }\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[6] = this.v.toBuffer();\n        raw[7] = this.r.toBuffer();\n        raw[8] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n        this.serialized = (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw, chainId) {\n        return (0, signing_1.computeIntrinsicsLegacyTx)(v, raw, chainId);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.LegacyTransaction = LegacyTransaction;\n//# sourceMappingURL=legacy-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFactory = exports.TransactionType = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst legacy_transaction_1 = require(\"./legacy-transaction\");\nconst eip2930_access_list_transaction_1 = require(\"./eip2930-access-list-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst eip1559_fee_market_transaction_1 = require(\"./eip1559-fee-market-transaction\");\nconst secp256k1_1 = require(\"@ganache/secp256k1\");\n/**\n * @param common\n * @param tx\n * @throws\n */\nfunction assertValidTransactionSValue(common, tx) {\n    // Transaction signatures whose s-value is greater than secp256k1n/2 are\n    // invalid after EIP-2 hardfork (homestead). See: https://eips.ethereum.org/EIPS/eip-2\n    if (tx.s &&\n        tx.s.toBigInt() >= secp256k1_1.SECP256K1_MAX_PRIVATE_KEY_DIV_2 &&\n        // EIP-2 is in homestead, but we can't use isActivatedEIP(2) because\n        // Common doesn't have that information for this hardfork.\n        common.gteHardfork(\"homestead\")) {\n        throw new Error(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n    }\n}\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"EIP2930AccessList\"] = 1] = \"EIP2930AccessList\";\n    TransactionType[TransactionType[\"EIP1559AccessList\"] = 2] = \"EIP1559AccessList\";\n})(TransactionType = exports.TransactionType || (exports.TransactionType = {}));\nclass TransactionFactory {\n    constructor(raw, common) {\n        const [txData, extra] = (0, rlp_1.decode)(raw);\n        this.tx = TransactionFactory.fromDatabaseTx(txData, common, extra);\n    }\n    static _fromData(txData, txType, common, extra) {\n        // if tx type envelope isn't available yet on this HF,\n        // return legacy txs as is and convert typed txs to legacy\n        if (!common.isActivatedEIP(2718)) {\n            return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n        }\n        else if (!common.isActivatedEIP(1559)) {\n            if (txType === TransactionType.Legacy) {\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            }\n            else if (txType === TransactionType.EIP2930AccessList) {\n                if (common.isActivatedEIP(2930)) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else {\n                    // TODO: I believe this is unreachable with current architecture.\n                    // If 2718 is supported, so is 2930.\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3487\n                    throw new ethereum_utils_1.CodedError(`EIP 2930 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n                }\n            }\n            else if (txType === TransactionType.EIP1559AccessList) {\n                throw new ethereum_utils_1.CodedError(`EIP 1559 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n            }\n        }\n        // eip 1559, 2930, and 2718 are activated\n        else {\n            // we can assume that all database transactions came from us, so\n            // the type doesn't need to be normalized.\n            if (Array.isArray(txData)) {\n                if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP1559AccessList) {\n                    return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                }\n            }\n            else {\n                const toEIP1559 = (txType === TransactionType.Legacy ||\n                    txType === TransactionType.EIP2930AccessList) &&\n                    txData.gasPrice === undefined;\n                if (txType === TransactionType.EIP1559AccessList || toEIP1559) {\n                    const tx = eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                    if (toEIP1559) {\n                        // they didn't specify the type as eip-1559 (type 2), so we are\n                        // upgrading it. BUT, there's still a chance they sent us this data,\n                        // so we don't want to overwrite it.\n                        if (!txData.maxFeePerGas) {\n                            tx.maxFeePerGas = utils_1.Quantity.from(null);\n                        }\n                        if (!txData.maxPriorityFeePerGas) {\n                            tx.maxPriorityFeePerGas = utils_1.Quantity.Gwei;\n                        }\n                    }\n                    return tx;\n                }\n                else if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    // if no access list is provided, we convert to legacy\n                    if (txData.accessList === undefined) {\n                        return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                    }\n                    else {\n                        return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                    }\n                }\n            }\n        }\n        throw new ethereum_utils_1.CodedError(`Tx instantiation with supplied type not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The rpc transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromRpc(txData, common, extra) {\n        const txType = this.typeOfRPC(txData);\n        const tx = this._fromData(txData, txType, common, extra);\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromDatabaseTx(txData, common, extra) {\n        const txType = this.typeOfRaw(txData);\n        switch (txType) {\n            case TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData.slice(1), common, extra);\n            case TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData.slice(1), common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * When transaction types are activated (EIP 2718) the txData will be checked\n     * for a transaction envelope (first byte < 192) before determining the\n     * decoding strategy, otherwise it will be decoded as a Legacy Transaction. If\n     * the transaction contains a transaction envelop, but EIP 2718 is not active\n     * decoding will fail and an exception will be thrown.\n     *\n     * @param txData - The raw hex string transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromString(txData, common) {\n        let data = utils_1.Data.toBuffer(txData);\n        const type = data[0];\n        const txType = this.typeOf(type);\n        let tx;\n        if (common.isActivatedEIP(2718)) {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(txType === TransactionType.Legacy ? data : data.slice(1));\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromData(raw, txType, common);\n        }\n        else {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(data);\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromData(raw, TransactionType.Legacy, common);\n        }\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    static typeOf(type) {\n        if (type === TransactionType.EIP1559AccessList ||\n            type === TransactionType.EIP2930AccessList) {\n            return type;\n        }\n        else {\n            return TransactionType.Legacy;\n        }\n    }\n    static typeOfRaw(raw) {\n        // LegacyTransactions won't have the type up front to parse\n        if (raw.length === 9) {\n            return TransactionType.Legacy;\n        }\n        const type = raw[0][0];\n        return this.typeOf(type);\n    }\n    static typeOfRPC(rpc) {\n        if (!(\"type\" in rpc) || rpc.type === undefined) {\n            return TransactionType.Legacy;\n        }\n        else {\n            // The type must be a hex value\n            const txType = parseInt(rpc.type, 16);\n            return this.typeOf(txType);\n        }\n    }\n}\nexports.TransactionFactory = TransactionFactory;\n//# sourceMappingURL=transaction-factory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeBlock = exports.makeHeader = exports.getBlockSize = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst serialize_1 = require(\"./serialize\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst block_1 = require(\"./block\");\n/**\n * Returns the size of the serialized data as it would have been calculated had\n * we stored things geth does, i.e., `totalDifficulty` is not usually stored in\n * the block header.\n *\n * @param serialized -\n * @param totalDifficulty -\n */\nfunction getBlockSize(serialized, totalDifficulty) {\n    return serialized.length - totalDifficulty.length;\n}\nexports.getBlockSize = getBlockSize;\nfunction makeHeader(raw, totalDifficulty) {\n    return {\n        parentHash: utils_1.Data.from(raw[0], 32),\n        sha3Uncles: utils_1.Data.from(raw[1], 32),\n        miner: utils_1.Data.from(raw[2], 20),\n        stateRoot: utils_1.Data.from(raw[3], 32),\n        transactionsRoot: utils_1.Data.from(raw[4], 32),\n        receiptsRoot: utils_1.Data.from(raw[5], 32),\n        logsBloom: utils_1.Data.from(raw[6], 256),\n        difficulty: utils_1.Quantity.from(raw[7], false),\n        number: utils_1.Quantity.from(raw[8], false),\n        gasLimit: utils_1.Quantity.from(raw[9], false),\n        gasUsed: utils_1.Quantity.from(raw[10], false),\n        timestamp: utils_1.Quantity.from(raw[11], false),\n        extraData: utils_1.Data.from(raw[12]),\n        mixHash: utils_1.Data.from(raw[13], 32),\n        nonce: utils_1.Data.from(raw[14], 8),\n        totalDifficulty: utils_1.Quantity.from(totalDifficulty, false),\n        baseFeePerGas: raw[15] === undefined ? undefined : utils_1.Quantity.from(raw[15], false)\n    };\n}\nexports.makeHeader = makeHeader;\n/**\n * A minimal block that can be used by the EVM to run transactions.\n */\nclass RuntimeBlock {\n    constructor(number, parentHash, coinbase, gasLimit, gasUsed, timestamp, difficulty, previousBlockTotalDifficulty, mixHash, baseFeePerGas) {\n        this.serializeBaseFeePerGas = true;\n        const coinbaseBuffer = coinbase.toBuffer();\n        this.header = {\n            parentHash: parentHash.toBuffer(),\n            coinbase: new ethereum_address_1.Address(coinbaseBuffer),\n            number: number.toBigInt(),\n            difficulty: difficulty.toBigInt(),\n            totalDifficulty: utils_1.Quantity.toBuffer(previousBlockTotalDifficulty.toBigInt() + difficulty.toBigInt()),\n            gasLimit: gasLimit.toBigInt(),\n            gasUsed: gasUsed.toBigInt(),\n            timestamp: timestamp.toBigInt(),\n            baseFeePerGas: baseFeePerGas ?? 0n,\n            mixHash,\n            prevRandao: mixHash\n        };\n        // When forking we might get a block that doesn't have a baseFeePerGas value,\n        // but EIP-1559 might be active on our chain. We need to keep track on if\n        // we should serialize the baseFeePerGas value or not based on that info.\n        // this will be removed as part of https://github.com/trufflesuite/ganache/pull/1537\n        if (baseFeePerGas === undefined)\n            this.serializeBaseFeePerGas = false;\n    }\n    /**\n     * Returns the serialization of all block data, the hash of the block header,\n     * and a map of the hashed and raw storage keys\n     */\n    finalize(transactionsTrie, receiptTrie, bloom, stateRoot, gasUsed, extraData, transactions, storageKeys) {\n        const { header } = this;\n        const rawHeader = [\n            header.parentHash,\n            util_1.KECCAK256_RLP_ARRAY,\n            header.coinbase.buf,\n            stateRoot,\n            transactionsTrie,\n            receiptTrie,\n            bloom,\n            utils_1.Quantity.toBuffer(header.difficulty),\n            utils_1.Quantity.toBuffer(header.number),\n            utils_1.Quantity.toBuffer(header.gasLimit),\n            gasUsed === 0n ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(gasUsed),\n            utils_1.Quantity.toBuffer(header.timestamp),\n            extraData.toBuffer(),\n            header.mixHash,\n            utils_1.BUFFER_8_ZERO // nonce\n        ];\n        if (this.serializeBaseFeePerGas && header.baseFeePerGas !== undefined) {\n            rawHeader[15] = utils_1.Quantity.toBuffer(header.baseFeePerGas);\n        }\n        const { totalDifficulty } = header;\n        const txs = [];\n        const extraTxs = [];\n        transactions.forEach(tx => {\n            txs.push(tx.raw);\n            extraTxs.push([tx.from.toBuffer(), tx.hash.toBuffer()]);\n        });\n        const { serialized, size } = (0, serialize_1.serialize)([\n            rawHeader,\n            txs,\n            [],\n            totalDifficulty,\n            extraTxs\n        ]);\n        // make a new block, but pass `null` so it doesn't do the extra\n        // deserialization work since we already have everything in a deserialized\n        // state here. We'll just set it ourselves by reaching into the \"_private\"\n        // fields.\n        const block = new block_1.Block(null, \n        // TODO(hack)!\n        transactions.length > 0 ? transactions[0].common : null);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = makeHeader(rawHeader, totalDifficulty);\n        block.serializeBaseFeePerGas = rawHeader[15] === undefined;\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return {\n            block,\n            serialized,\n            storageKeys,\n            transactions\n        };\n    }\n}\nexports.RuntimeBlock = RuntimeBlock;\n//# sourceMappingURL=runtime-block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nfunction serialize(raw) {\n    const serializedStart = (0, rlp_1.encodeRange)(raw, 0, 3);\n    const serializedLength = serializedStart.length;\n    const ethereumRawBlockSize = (0, rlp_1.encodeLength)(serializedLength, 192).length;\n    const size = ethereumRawBlockSize + serializedLength;\n    const middle = (0, rlp_1.encodeRange)(raw, 3, 2);\n    const ending = (0, rlp_1.encode)((0, utils_1.uintToBuffer)(size));\n    return {\n        serialized: (0, rlp_1.digest)([serializedStart.output, middle.output, [ending]], serializedLength + middle.length + ending.length),\n        size\n    };\n}\nexports.serialize = serialize;\n//# sourceMappingURL=serialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFilter = exports.parseFilterRange = exports.parseFilterDetails = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseFilterDetails(filter) {\n    // `filter.address` may be a single address or an array\n    const addresses = filter.address\n        ? (Array.isArray(filter.address) ? filter.address : [filter.address]).map(a => ethereum_address_1.Address.from(a.toLowerCase()).toBuffer())\n        : [];\n    const topics = filter.topics ? filter.topics : [];\n    return { addresses, topics };\n}\nexports.parseFilterDetails = parseFilterDetails;\nfunction parseFilterRange(filter, blockchain) {\n    const latestBlock = blockchain.blocks.latest.header.number;\n    const fromBlock = blockchain.blocks.getEffectiveNumber(filter.fromBlock || ethereum_utils_1.Tag.latest);\n    const latestBlockNumber = latestBlock.toNumber();\n    const toBlock = blockchain.blocks.getEffectiveNumber(filter.toBlock || ethereum_utils_1.Tag.latest);\n    let toBlockNumber;\n    // don't search after the \"latest\" block, unless it's \"pending\", of course.\n    if (toBlock > latestBlock) {\n        toBlockNumber = latestBlockNumber;\n    }\n    else {\n        toBlockNumber = toBlock.toNumber();\n    }\n    return {\n        fromBlock,\n        toBlock,\n        toBlockNumber\n    };\n}\nexports.parseFilterRange = parseFilterRange;\nfunction parseFilter(filter = { address: [], topics: [] }, blockchain) {\n    const { addresses, topics } = parseFilterDetails(filter);\n    const { fromBlock, toBlock, toBlockNumber } = parseFilterRange(filter, blockchain);\n    return {\n        addresses,\n        fromBlock,\n        toBlock,\n        toBlockNumber,\n        topics\n    };\n}\nexports.parseFilter = parseFilter;\n//# sourceMappingURL=filter-parsing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStepEvent = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction normalizeEvent(event) {\n    const { account, memory: originalMemory, opcode } = event;\n    const memoryLength = originalMemory.length;\n    // We need to copy some buffers so the user can't mutate them on us:\n    // Instead of making a bunch of individual buffers, we just make 1 and then\n    // fill it in as needed.\n    const sharedBuffer = Buffer.allocUnsafe(104 + memoryLength);\n    account.storageRoot.copy(sharedBuffer, 0, 0, 32); // always 32 bytes\n    account.codeHash.copy(sharedBuffer, 32, 0, 32); // always 32 bytes\n    event.address.buf.copy(sharedBuffer, 64, 0, 20); // always 20 bytes\n    event.codeAddress.buf.copy(sharedBuffer, 84, 0, 20); // always 20 bytes\n    const stateRoot = sharedBuffer.slice(0, 32);\n    const codeHash = sharedBuffer.slice(32, 64);\n    const address = sharedBuffer.slice(64, 84);\n    const codeAddress = sharedBuffer.slice(84, 104);\n    let memory;\n    if (memoryLength !== 0) {\n        originalMemory.copy(sharedBuffer, 104, 0, memoryLength);\n        memory = sharedBuffer.slice(104, 104 + memoryLength);\n    }\n    else {\n        memory = utils_1.BUFFER_ZERO;\n    }\n    return {\n        account: {\n            nonce: account.nonce,\n            balance: account.balance,\n            stateRoot,\n            codeHash\n        },\n        address,\n        codeAddress,\n        depth: BigInt(event.depth),\n        gasLeft: event.gasLeft,\n        gasRefund: event.gasRefund,\n        memory,\n        memoryWordCount: event.memoryWordCount,\n        opcode: {\n            name: opcode.name,\n            fee: opcode.fee\n        },\n        pc: BigInt(event.pc),\n        returnStack: event.returnStack.map(r => r),\n        stack: event.stack.map(s => s)\n    };\n}\nfunction makeStepEvent(context, event) {\n    return {\n        context,\n        data: normalizeEvent(event)\n    };\n}\nexports.makeStepEvent = makeStepEvent;\n//# sourceMappingURL=provider-events.js.map","\"use strict\";\n/*!\n * @ganache/console.log\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nvar maybe_get_logs_1 = require(\"./src/maybe-get-logs\");\nObject.defineProperty(exports, \"maybeGetLogs\", { enumerable: true, get: function () { return maybe_get_logs_1.maybeGetLogs; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheTrie = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst keyHashingFunction = (msg) => {\n    return (0, utils_1.keccak)(Buffer.from(msg.buffer, msg.byteOffset, msg.length));\n};\nclass GanacheTrie extends trie_1.Trie {\n    constructor(db, root, blockchain) {\n        super({\n            db,\n            root,\n            useRootPersistence: true,\n            useKeyHashing: true,\n            useKeyHashingFunction: keyHashingFunction\n        });\n        this.blockchain = blockchain;\n        this.db = db;\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this.root(stateRoot);\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of GanacheTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new GanacheTrie(this.db.copy(), this.root(), this.blockchain);\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n        }\n        return secureTrie;\n    }\n}\nexports.GanacheTrie = GanacheTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Deferred() {\n    const deferred = {};\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serverOptionsConfig = exports.serverDefaults = void 0;\nconst server_options_1 = require(\"./server-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.serverDefaults = {\n    server: server_options_1.ServerOptions\n};\nexports.serverOptionsConfig = new options_1.OptionsConfig(exports.serverDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFragmentGenerator = void 0;\nfunction* getFragmentGenerator(data, bufferSize) {\n    // Use a large buffer to reduce round-trips\n    let buf = Buffer.allocUnsafe(bufferSize);\n    let offset = 0;\n    for (const value of data) {\n        const { byteLength } = value;\n        // if we don't have enough space in the buffer for this next value `yield`\n        // the buffer as is.\n        if (offset > 0 && byteLength + offset > bufferSize) {\n            yield buf.subarray(0, offset);\n            // Reset the buffer. Since `uws` sends packets asynchronously,\n            // it is important that we allocate a new buffer for the next\n            // frame. This avoids overwriting data before it is sent. The\n            // reason we need to do this is likely because we do not yet\n            // handle backpressure. Part of handling backpressure will\n            // involve the drain event and only sending while\n            // `ws.getBufferedAmount() < ACCEPTABLE_BACKPRESSURE`.\n            // See https://github.com/trufflesuite/ganache/issues/2790\n            buf = null;\n            offset = 0;\n        }\n        // Store value in buffer if it fits (but don't store it if it is the exact\n        // same size as bufferSize)\n        if (byteLength < bufferSize) {\n            // copy from value into buffer\n            if (buf === null)\n                buf = Buffer.allocUnsafe(bufferSize);\n            value.copy(buf, offset, 0, byteLength);\n            offset += byteLength;\n        }\n        else {\n            // Cannot fit this value in buffer, send it directly.\n            // Buffer has just been flushed (since the condition `byteLength + offset > bufferSize`\n            // will always be true here, which will have triggered the flush above) so\n            // we do not need to worry about out-of-order send.\n            yield value;\n        }\n    }\n    // If we've got anything buffered at this point, send it.\n    if (offset > 0)\n        yield buf.subarray(0, offset);\n    return void 0;\n}\nexports.getFragmentGenerator = getFragmentGenerator;\n//# sourceMappingURL=fragment-generator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst HARDFORKS = [\n    \"constantinople\",\n    \"byzantium\",\n    \"petersburg\",\n    \"istanbul\",\n    \"muirGlacier\",\n    \"berlin\",\n    \"london\",\n    \"arrowGlacier\",\n    \"grayGlacier\",\n    \"merge\"\n];\nexports.ChainOptions = {\n    allowUnlimitedContractSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited contract sizes while debugging. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        legacyName: \"allowUnlimitedContractSize\",\n        cliType: \"boolean\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        legacyName: \"asyncRequestProcessing\",\n        cliType: \"boolean\"\n    },\n    chainId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The currently configured chain id.\",\n        default: () => 1337,\n        legacyName: \"chainId\",\n        cliType: \"number\"\n    },\n    networkId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The id of the network returned by the RPC method `net_version`.\",\n        default: () => Date.now(),\n        defaultDescription: \"System time at process start or Network ID of forked blockchain if configured.\",\n        legacyName: \"network_id\",\n        cliAliases: [\"i\", \"networkId\"],\n        cliType: \"number\"\n    },\n    time: {\n        normalize: rawInput => (rawInput !== undefined ? new Date(rawInput) : null),\n        cliDescription: \"Date that the first block should start.\",\n        legacyName: \"time\",\n        cliAliases: [\"t\", \"time\"],\n        cliType: \"string\",\n        cliCoerce: (input) => {\n            // try parsing the input as a number, if it works use the number\n            // otherwise pass the string along\n            const asNum = input / 1;\n            if (isNaN(asNum)) {\n                return input;\n            }\n            else {\n                return asNum;\n            }\n        }\n    },\n    hardfork: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set the hardfork rules for the EVM.\",\n        default: () => \"merge\",\n        legacyName: \"hardfork\",\n        cliAliases: [\"k\", \"hardfork\"],\n        cliType: \"string\",\n        cliChoices: HARDFORKS\n    },\n    vmErrorsOnRPCResponse: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Whether to report runtime errors from EVM code as RPC errors.\",\n        default: () => false,\n        legacyName: \"vmErrorsOnRPCResponse\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        legacyName: \"db\",\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        legacyName: \"db_path\",\n        cliAliases: [\"db\", \"db_path\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.LoggingOptions = {\n    debug: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log EVM opcodes.\",\n        default: () => false,\n        legacyName: \"debug\",\n        cliType: \"boolean\"\n    },\n    quiet: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to disable logging.\",\n        default: () => false,\n        cliAliases: [\"q\", \"quiet\"],\n        cliType: \"boolean\"\n    },\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        // disable the default logger if `quiet` is `true`\n        default: config => ({\n            log: config.quiet ? () => { } : console.log\n        }),\n        legacyName: \"logger\"\n    },\n    verbose: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log detailed RPC requests.\",\n        default: () => false,\n        legacyName: \"verbose\",\n        cliAliases: [\"v\", \"verbose\"],\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\n/**\n * Attempts to convert strings that don't start with `0x` to a BigInt\n *\n * @param str - a string that represents a bigint, number, or hexadecimal value\n */\nconst toBigIntOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return BigInt(str);\n    }\n};\n/**\n * Handles defaultTransactionGasLimit special case of 'estimate' for tx value.\n *\n * @param str - the string literal 'estimate' or string that that represents a bigint, number, or hexadecimal value.\n */\nconst estimateOrToBigIntOrString = (str) => {\n    if (str === \"estimate\") {\n        return str;\n    }\n    else {\n        return toBigIntOrString(str);\n    }\n};\n/**\n * Attempts to convert strings that don't start with `0x` to a number\n *\n * @param str - a string that represents a number, or hexadecimal value\n */\nconst toNumberOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return parseInt(str);\n    }\n};\nexports.MinerOptions = {\n    blockTime: {\n        normalize: rawInput => {\n            if (rawInput < 0) {\n                throw new Error(\"miner.blockTime must be 0 or a positive number.\");\n            }\n            return rawInput;\n        },\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A blockTime of `0` enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        legacyName: \"blockTime\",\n        cliAliases: [\"b\", \"blockTime\"],\n        cliType: \"number\"\n    },\n    timestampIncrement: {\n        normalize: rawType => rawType === \"clock\" ? \"clock\" : utils_1.Quantity.from(BigInt(rawType)),\n        cliDescription: 'The amount of time, in seconds, to add to the `timestamp` of each new block header. By default the value is `\"clock\"`, which uses your system clock time as the timestamp for each block.',\n        default: () => \"clock\",\n        cliType: \"string\"\n    },\n    defaultGasPrice: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the default gas price in WEI for transactions if not otherwise specified.\",\n        default: () => utils_1.Quantity.from(2000000000),\n        legacyName: \"gasPrice\",\n        cliAliases: [\"g\", \"gasPrice\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    blockGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block gas limit in WEI.\",\n        default: () => utils_1.Quantity.from(30000000),\n        legacyName: \"gasLimit\",\n        cliAliases: [\"l\", \"gasLimit\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    defaultTransactionGasLimit: {\n        normalize: rawType => rawType === \"estimate\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(rawType),\n        cliDescription: 'Sets the default transaction gas limit in WEI. Set to \"estimate\" to use an estimate (slows down transaction execution by 40%+).',\n        default: () => utils_1.Quantity.from(90000),\n        cliType: \"string\",\n        cliCoerce: estimateOrToBigIntOrString\n    },\n    difficulty: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block difficulty. Value is always 0 after the merge hardfork.\",\n        default: () => utils_1.Quantity.One,\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    callGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the transaction gas limit in WEI for `eth_call` and `eth_estimateGas` calls.\",\n        default: () => utils_1.Quantity.from(50000000),\n        legacyName: \"callGasLimit\",\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    instamine: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Set the instamine mode to either \"eager\" (default) or \"strict\".\n * In \"eager\" mode a transaction will be included in a block before its hash is returned to the caller.\n * In \"strict\" mode a transaction's hash is returned to the caller before the transaction is included in a block.\n\\`instamine\\` has no effect if \\`blockTime\\` is *not* \\`0\\` (the default).`,\n        default: () => \"eager\",\n        legacyName: \"instamine\",\n        cliAliases: [\"instamine\"],\n        cliType: \"string\",\n        cliChoices: [\"eager\", \"strict\"]\n    },\n    coinbase: {\n        normalize: rawType => {\n            return typeof rawType === \"number\" ? rawType : ethereum_address_1.Address.from(rawType);\n        },\n        cliDescription: \"Sets the address where mining rewards will go.\",\n        cliType: \"string\",\n        cliCoerce: toNumberOrString,\n        default: () => ethereum_address_1.Address.from(utils_1.ACCOUNT_ZERO)\n    },\n    extraData: {\n        normalize: (extra) => {\n            const bytes = utils_1.Data.from(extra);\n            if (bytes.toBuffer().length > 32) {\n                throw new Error(`extra exceeds max length. ${bytes.toBuffer().length} > 32`);\n            }\n            return bytes;\n        },\n        cliDescription: \"Set the extraData block header field a miner can include.\",\n        default: () => utils_1.Data.Empty,\n        cliType: \"string\"\n    },\n    priceBump: {\n        normalize: BigInt,\n        cliDescription: \"Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\",\n        default: () => 10n,\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=connector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base implementation for an API.\n * All properties must be `async` callable or return a `Promise`\n */\nclass ApiBase {\n}\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBigIntBE = exports.toBufferBE = void 0;\nvar bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\nObject.defineProperty(exports, \"toBufferBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBufferBE; } });\nObject.defineProperty(exports, \"toBigIntBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBigIntBE; } });\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heap = void 0;\nclass Heap {\n    /**\n     * Creates a priority-queue heap where the highest priority element,\n     * as determined by the `less` function, is at the tip/root of the heap.\n     * To read the highest priority element without removing it call peek(). To\n     * read and remove the element call `shift()`\n     * @param less - the comparator function\n     * @param refresher - the refresher function\n     */\n    constructor(less, refresher) {\n        this.length = 0;\n        this.array = [];\n        this.less = less;\n        this.refresher = refresher;\n    }\n    init(array) {\n        this.array = array;\n        const length = (this.length = array.length);\n        for (let i = ((length / 2) | 0) - 1; i >= 0;) {\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    refresh(context) {\n        const length = this.length;\n        const mid = (length / 2) | 0;\n        for (let i = mid; i < length; i++) {\n            this.refresher(this.array[i], context);\n        }\n        for (let i = mid - 1; i >= 0;) {\n            this.refresher(this.array[i], context);\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Pushes a new element onto the heap\n     * @param value -\n     */\n    push(value) {\n        const i = this.length++;\n        this.array[i] = value;\n        this.up(i);\n    }\n    size() {\n        return this.length;\n    }\n    /**\n     * Return the current best element. Does not remove it\n     */\n    peek() {\n        return this.array[0];\n    }\n    clear() {\n        this.length = this.array.length = 0;\n    }\n    /**\n     * Removes and returns the element with the highest priority from the heap.\n     * The complexity is O(log n) where n = this.size().\n     * @returns the element with the highest priority. returns `undefined` if\n     * there are no more elements in the heap.\n     */\n    shift() {\n        const length = this.length;\n        // if we are empty or about to be empty...\n        if (length <= 1) {\n            if (length === 0)\n                return;\n            const element = this.array[0];\n            // finally, clear the array\n            this.clear();\n            return element;\n        }\n        // otherwise...\n        // remember the best element\n        const array = this.array;\n        const best = array[0];\n        const newLength = (this.length = length - 1);\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return best;\n    }\n    /**\n     * Removes the highest priority element from the queue, replacing it with\n     * the new element. This is equivalent to, but faster than, calling\n     * `replace(0, newValue);`.\n     * If you call this on an empty heap (`this.size() === 0`) you may find\n     * unexpected behavior.\n     * @param newValue -\n     */\n    replaceBest(newValue) {\n        this.array[0] = newValue;\n        this.down(0, this.length);\n    }\n    /**\n     * Replaces the element at position `i` with the `newValue`. If the element at\n     * position `i` doesn't exist, or if `i < 0` or `i > this.size()` you may\n     * find unexpected behavior.\n     * @param i -\n     * @param newValue -\n     */\n    replace(i, newValue) {\n        this.array[i] = newValue;\n        this.fix(i);\n    }\n    /**\n     * Removes the element at position `i`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i - the element to remove\n     */\n    remove(i) {\n        const newLength = --this.length;\n        if (newLength !== i) {\n            this.swap(i, newLength);\n            if (!this.down(i, newLength)) {\n                this.up(i);\n            }\n        }\n    }\n    /**\n     * Removes the element with the highest priority from the heap\n     * The complexity is O(log n) where n = this.size().\n     * @returns `true` when there are more elements in the queue, `false` when the\n     * last element was just removed. Calling `removeBest` when there are no more\n     * elements in the queue will return `true`. So don't do that.\n     */\n    removeBest() {\n        const array = this.array;\n        const length = this.length;\n        if (length === 1) {\n            // finally, clear the array\n            this.length = array.length = 0;\n            return false;\n        }\n        const newLength = --this.length;\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return true;\n    }\n    /**\n     * Re-establishes the heap ordering after the element at index `i` changes\n     * its value. Changing the value of the element at index `i` and then\n     * calling fix is equivalent to, but faster than, calling\n     * `remove(i); push(newValue);`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i -\n     */\n    fix(i) {\n        if (!this.down(i, this.length)) {\n            this.up(i);\n        }\n    }\n    up(j) {\n        const less = this.less.bind(null, this.array);\n        for (let i; (i = ((j - 1) / 2) | 0), i !== j && less(j, i); j = i) {\n            this.swap(i, j);\n        }\n    }\n    down(i0, l) {\n        const less = this.less.bind(null, this.array);\n        let i = i0;\n        for (let j1; (j1 = 2 * i + 1) < l;) {\n            let j = j1; // left child\n            let j2 = j1 + 1;\n            if (j2 < l && less(j2, j1)) {\n                j = j2; // = 2 * i + 2  // right child\n            }\n            if (!less(j, i)) {\n                break;\n            }\n            this.swap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n    /**\n     * Swaps the elements in the heap\n     * @param i - The first element\n     * @param j - The second element\n     */\n    swap(i, j) {\n        const array = this.array;\n        const first = array[i];\n        array[i] = array[j];\n        array[j] = first;\n    }\n    /**\n     * Heap initialization helper for when you only know of a single item for the\n     * heap.\n     * @param item -\n     * @param less -\n     * @param refresher -\n     */\n    static from(item, less, refresher) {\n        const heap = new Heap(less, refresher);\n        heap.array = [item];\n        heap.length = 1;\n        return heap;\n    }\n}\nexports.Heap = Heap;\n//# sourceMappingURL=heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unref = void 0;\n/**\n * In node, calling `unref(timer)` on a running timer ensures that the timer\n * does not require that the Node.js event remain active. If there is no other\n * activity keeping the event loop running, the process may exit before the\n * timer's callback is invoked.\n * @param timer -\n * @returns `true` if the timer could be `unref`ed, otherwise returns `false`\n */\nfunction unref(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.unref = unref;\n//# sourceMappingURL=unref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToMinHexKey = void 0;\nlet stringify;\nif (typeof Buffer.prototype.latin1Slice === \"function\") {\n    stringify = (buffer, start, end) => {\n        // this is just `buffer.toString(\"hex\")`, but it skips a bunch of checks\n        // that don't apply because our `start` and `end` just can't be out of\n        // bounds.\n        return buffer.hexSlice(start, end);\n    };\n}\nelse {\n    stringify = (buffer, start, end) => {\n        return buffer.slice(start, end).toString(\"hex\");\n    };\n}\n/**\n * Trims leading 0s from a buffer and returns a key representing the buffer's\n * trimmed value (`Buffer.from([0, 0, 12, 0])` => `1200`).\n *\n * @param buffer -\n */\nfunction bufferToMinHexKey(buffer) {\n    for (let i = 0, length = buffer.byteLength; i < length; i++) {\n        const value = buffer[i];\n        // once we find a non-zero value take the rest of the buffer as the key\n        if (value !== 0) {\n            if (i + 1 === length) {\n                // use a lookup table for single character lookups\n                return HEX_MAP[value];\n            }\n            else {\n                return stringify(buffer, i, length);\n            }\n        }\n    }\n    return \"\";\n}\nexports.bufferToMinHexKey = bufferToMinHexKey;\nconst HEX_MAP = [\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"0a\",\n    \"0b\",\n    \"0c\",\n    \"0d\",\n    \"0e\",\n    \"0f\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"1a\",\n    \"1b\",\n    \"1c\",\n    \"1d\",\n    \"1e\",\n    \"1f\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"2a\",\n    \"2b\",\n    \"2c\",\n    \"2d\",\n    \"2e\",\n    \"2f\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"3a\",\n    \"3b\",\n    \"3c\",\n    \"3d\",\n    \"3e\",\n    \"3f\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"4a\",\n    \"4b\",\n    \"4c\",\n    \"4d\",\n    \"4e\",\n    \"4f\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"5a\",\n    \"5b\",\n    \"5c\",\n    \"5d\",\n    \"5e\",\n    \"5f\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"6a\",\n    \"6b\",\n    \"6c\",\n    \"6d\",\n    \"6e\",\n    \"6f\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"7a\",\n    \"7b\",\n    \"7c\",\n    \"7d\",\n    \"7e\",\n    \"7f\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"8a\",\n    \"8b\",\n    \"8c\",\n    \"8d\",\n    \"8e\",\n    \"8f\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n    \"9a\",\n    \"9b\",\n    \"9c\",\n    \"9d\",\n    \"9e\",\n    \"9f\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ae\",\n    \"af\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"be\",\n    \"bf\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"ce\",\n    \"cf\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"de\",\n    \"df\",\n    \"e0\",\n    \"e1\",\n    \"e2\",\n    \"e3\",\n    \"e4\",\n    \"e5\",\n    \"e6\",\n    \"e7\",\n    \"e8\",\n    \"e9\",\n    \"ea\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ee\",\n    \"ef\",\n    \"f0\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"fa\",\n    \"fb\",\n    \"fc\",\n    \"fd\",\n    \"fe\",\n    \"ff\"\n];\n//# sourceMappingURL=buffer-to-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findInsertPosition = void 0;\n/**\n * AKA `upper_bound`\n *\n * The elements are compared using `comp`. The elements in the range must\n * already be sorted according to this same criterion (`comp`), or at least\n * partitioned with respect to val.\n *\n * The function optimizes the number of comparisons performed by comparing\n * non-consecutive elements of the sorted range.\n *\n * The index into the `array` returned by this function will always be greater than\n * the index of the last-occurrence of `val`.\n *\n * On average, logarithmic in the distance of the length of the array: Performs\n * approximately `log2(N)+1` element comparisons (where `N` is this length).\n *\n * @param array -\n * @param val - Value of the upper bound to search for in the range.\n * @param comp - A function that accepts two arguments (the first is always\n * `val`, and the second from the given `array`) and returns bool. The value\n * returned indicates whether the first argument is considered to go before the\n * second.\n *\n * @returns The index to the upper bound position for `val` in the range. If no\n * element in the range compares greater than `val`, the function returns\n * `array.length`.\n */\nfunction findInsertPosition(array, val, comp) {\n    // `count` tracks the number of elements that remain to be searched\n    let count = array.length;\n    // `insertPosition` tracks the best insert position for the element we know\n    // about _so far_\n    let insertPosition = 0;\n    // `offset` tracks the start position of the elements that remain to be\n    // searched\n    let offset = 0;\n    while (count > 0) {\n        // find the middle element between `offset` and `count`\n        const step = (count / 2) | 0; // ()`| 0` rounds towards 0)\n        offset += step;\n        // compare our val to the \"middle element\" (`array[offset]`)\n        if (!comp(val, array[offset])) {\n            // `val` should come _after_ the element at `array[offset]`.\n            //  * update our `insertPosition` to the index immediately after\n            //    `array[offset]`\n            //  * shrink our search range\n            // This narrows our search the elements to the right of `array[offset]`.\n            insertPosition = ++offset;\n            count -= step + 1;\n        }\n        else {\n            // `val` should come before the element at `array[offset]`:\n            // This narrows the search the elements to the left of `array[offset]`.\n            count = step;\n            offset = insertPosition;\n        }\n    }\n    return insertPosition;\n}\nexports.findInsertPosition = findInsertPosition;\n//# sourceMappingURL=find-insert-position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.min = exports.max = void 0;\n/**\n * Returns the largest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the largest value will be selected and returned.\n */\nconst max = (...numbers) => numbers.reduce((acc, next) => (next > acc ? next : acc));\nexports.max = max;\n/**\n * Returns the smallest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the smallest value will be selected and returned.\n */\nconst min = (...numbers) => numbers.reduce((acc, next) => (next < acc ? next : acc));\nexports.min = min;\n//# sourceMappingURL=min-max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcType = void 0;\nvar json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_base_types_1.BaseJsonRpcType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAndValidateStringInput = exports.parseAndValidateBigIntInput = exports.parseAndValidateNumberInput = void 0;\nconst bigint_to_buffer_1 = require(\"../../utils/bigint-to-buffer\");\nconst uint_to_buffer_1 = require(\"../../utils/uint-to-buffer\");\nconst BUFFER_EMPTY = Buffer.allocUnsafe(0);\n/**\n * Parse and validate a {@link number} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param {number} input - must be a positive, finite integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateNumberInput(input) {\n    if (input === 0) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    if (input % 1) {\n        throw new Error(\"Cannot wrap a decimal as a json-rpc type\");\n    }\n    if (!isFinite(input)) {\n        throw new Error(`Cannot wrap a ${input} as a json-rpc type`);\n    }\n    return (0, uint_to_buffer_1.uintToBuffer)(input);\n}\nexports.parseAndValidateNumberInput = parseAndValidateNumberInput;\n/**\n * Parse and validate a {@link bigint} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {bigint} input - must be a positive integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateBigIntInput(input) {\n    if (input < 0n) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    return (0, bigint_to_buffer_1.bigIntToBuffer)(input);\n}\nexports.parseAndValidateBigIntInput = parseAndValidateBigIntInput;\n/**\n * Parse and validate a {@link string} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {string} input - must be a hex encoded integer prefixed with \"0x\".\n * @returns Buffer\n */\nfunction parseAndValidateStringInput(input) {\n    if (input.slice(0, 2).toLowerCase() !== \"0x\") {\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; strings must be prefixed with \"0x\".`);\n    }\n    let hexValue = input.slice(2);\n    // hexValue must be an even number of hexadecimal characters in order to correctly decode in Buffer.from\n    // see: https://nodejs.org/api/buffer.html#buffers-and-character-encodings\n    if (hexValue.length & 1) {\n        hexValue = `0${hexValue}`;\n    }\n    const byteLength = Math.ceil(input.length / 2 - 1);\n    const _buffer = Buffer.from(hexValue, \"hex\");\n    if (_buffer.length !== byteLength) {\n        // Buffer.from will return the result after encountering an input that does not conform to hexadecimal encoding.\n        // this means that an invalid input can never return a value with the expected bytelength.\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; the input value contains an invalid hex character.`);\n    }\n    return _buffer;\n}\nexports.parseAndValidateStringInput = parseAndValidateStringInput;\n//# sourceMappingURL=input-parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quantity = void 0;\nconst buffer_to_bigint_1 = require(\"../../utils/buffer-to-bigint\");\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Quantity extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, nullable) {\n        super(value);\n        this._nullable = false;\n        if (value === \"0x\") {\n            throw new Error('Cannot wrap \"0x\" as a json-rpc Quantity type; strings must contain at least one hexadecimal character.');\n        }\n        this._nullable = nullable;\n    }\n    static from(value, nullable = false) {\n        if (value instanceof Quantity)\n            return value;\n        return new Quantity(value, nullable);\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : Quantity.ZERO_VALUE_STRING;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        // bufferValue is empty, or contains only 0 bytes\n        if (firstNonZeroByte === this.bufferValue.length) {\n            return Quantity.ZERO_VALUE_STRING;\n        }\n        let value = this.bufferValue.toString(\"hex\", firstNonZeroByte);\n        // only need to check the first char, as we have already skipped 0 bytes in call to this.bufferValue.toString().\n        if (value[0] === \"0\") {\n            value = value.slice(1);\n        }\n        return `0x${value}`;\n    }\n    toBuffer() {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        if (firstNonZeroByte > 0) {\n            return this.bufferValue.subarray(firstNonZeroByte);\n        }\n        else {\n            return this.bufferValue;\n        }\n    }\n    toBigInt() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0n;\n        }\n        if (this.bufferValue.length === 0) {\n            return 0n;\n        }\n        return (0, buffer_to_bigint_1.bufferToBigInt)(this.bufferValue);\n    }\n    toNumber() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        const length = this.bufferValue.length - firstNonZeroByte;\n        if (length === 0) {\n            return 0;\n        }\n        let result;\n        // buffer.readUIntBE only supports up to 48 bits, so if larger then we need to convert to bigint first\n        if (length > 6) {\n            const trimmedBuffer = firstNonZeroByte === 0\n                ? this.bufferValue\n                : this.bufferValue.subarray(firstNonZeroByte);\n            result = Number((0, buffer_to_bigint_1.bufferToBigInt)(trimmedBuffer));\n            if (!Number.isSafeInteger(result)) {\n                console.warn(`0x${this.bufferValue.toString(\"hex\")} is too large - the maximum safe integer value is 0${Number.MAX_SAFE_INTEGER.toString(16)}`);\n            }\n        }\n        else {\n            result = this.bufferValue.readUIntBE(firstNonZeroByte, length);\n        }\n        return result;\n    }\n    valueOf() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        else {\n            return this.toBigInt();\n        }\n    }\n    findFirstNonZeroByteIndex() {\n        let firstNonZeroByte = 0;\n        for (firstNonZeroByte = 0; firstNonZeroByte < this.bufferValue.length; firstNonZeroByte++) {\n            if (this.bufferValue[firstNonZeroByte] !== 0)\n                break;\n        }\n        return firstNonZeroByte;\n    }\n    static toBuffer(value, nullable) {\n        return Quantity.from(value, nullable).toBuffer();\n    }\n    static toString(value, nullable) {\n        return Quantity.from(value, nullable).toString();\n    }\n    static toNumber(value, nullable) {\n        return Quantity.from(value, nullable).toNumber();\n    }\n    static toBigInt(value, nullable) {\n        return Quantity.from(value, nullable).toBigInt();\n    }\n}\nexports.Quantity = Quantity;\nQuantity.Empty = Quantity.from(constants_1.BUFFER_EMPTY, true);\nQuantity.Zero = Quantity.from(constants_1.BUFFER_ZERO);\nQuantity.One = Quantity.from(1);\nQuantity.Gwei = Quantity.from(1000000000);\nQuantity.ZERO_VALUE_STRING = \"0x0\";\nexports.default = Quantity;\n//# sourceMappingURL=json-rpc-quantity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Data = void 0;\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Data extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, _byteLength) {\n        super(value);\n        this._byteLength = _byteLength;\n        if (typeof value === \"bigint\") {\n            throw new Error(`Cannot create a ${typeof value} as a Data`);\n        }\n    }\n    toString(byteLength) {\n        const length = byteLength || this._byteLength;\n        if (this.bufferValue == null) {\n            return \"0x\";\n        }\n        if (length === undefined) {\n            return super.toString();\n        }\n        const strValue = this.bufferValue.toString(\"hex\");\n        return `0x${Data.stringToFixedByteLength(strValue, length)}`;\n    }\n    toBuffer(byteLength) {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const length = byteLength || this._byteLength;\n        if (length == undefined || length === this.bufferValue.length) {\n            return this.bufferValue;\n        }\n        return Data.bufferToFixedByteLength(this.bufferValue, length);\n    }\n    static from(value, byteLength) {\n        return new Data(value, byteLength);\n    }\n    static stringToFixedByteLength(value, byteLength) {\n        const desiredCharLength = byteLength * 2;\n        if (desiredCharLength === value.length) {\n            return value;\n        }\n        const padCharCount = desiredCharLength - value.length;\n        let fixedLengthValue;\n        if (padCharCount > 0) {\n            fixedLengthValue = \"0\".repeat(padCharCount) + value;\n        }\n        else {\n            fixedLengthValue = value.slice(0, desiredCharLength);\n        }\n        return fixedLengthValue;\n    }\n    static bufferToFixedByteLength(value, byteLength) {\n        if (byteLength === value.length) {\n            return value;\n        }\n        const fixedLengthValue = Buffer.allocUnsafe(byteLength);\n        const sourceStart = 0;\n        const targetStart = value.length > byteLength ? 0 : byteLength - value.length;\n        if (targetStart > 0) {\n            fixedLengthValue.fill(0, 0, targetStart);\n        }\n        value.copy(fixedLengthValue, targetStart, sourceStart, byteLength);\n        return fixedLengthValue;\n    }\n    static toBuffer(value, byteLength) {\n        return Data.from(value, byteLength).toBuffer();\n    }\n    static toString(value, byteLength) {\n        return Data.from(value, byteLength).toString();\n    }\n}\nexports.Data = Data;\nData.Empty = Data.from(constants_1.BUFFER_EMPTY);\n//# sourceMappingURL=json-rpc-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallError = void 0;\nconst errors_1 = require(\"./errors\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nclass CallError extends coded_error_1.CodedError {\n    constructor(result) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = utils_2.Data.toString(returnValue);\n    }\n}\nexports.CallError = CallError;\n//# sourceMappingURL=call-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortError = void 0;\nclass AbortError extends Error {\n    constructor() {\n        super(\"The user aborted a request.\");\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=abort-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass Account {\n    constructor(address) {\n        this.storageRoot = util_1.KECCAK256_RLP;\n        this.codeHash = util_1.KECCAK256_NULL;\n        this.address = address;\n        this.balance = utils_1.Quantity.Empty;\n        this.nonce = utils_1.Quantity.Empty;\n    }\n    static fromBuffer(buffer) {\n        const account = Object.create(Account.prototype);\n        const raw = (0, rlp_1.decode)(buffer);\n        account.nonce = utils_1.Quantity.from(raw[0]);\n        account.balance = utils_1.Quantity.from(raw[1]);\n        account.storageRoot = raw[2];\n        account.codeHash = raw[3];\n        return account;\n    }\n    serialize() {\n        return (0, rlp_1.encode)([\n            this.nonce.toBuffer(),\n            this.balance.toBuffer(),\n            this.storageRoot,\n            this.codeHash\n        ]);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockLogs = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst _raw = Symbol(\"raw\");\nconst _logs = Symbol(\"logs\");\nconst filterByTopic = (expectedTopics, logTopics) => {\n    // Exclude log if its number of topics is less than the number expected\n    if (expectedTopics.length > logTopics.length)\n        return false;\n    // for every expectedTopic, we must much the log topic in the same position\n    return expectedTopics.every((expectedTopic, logPosition) => {\n        // a `null` topic means \"anything\"\n        if (expectedTopic === null)\n            return true;\n        let expectedTopicSet;\n        if (!Array.isArray(expectedTopic)) {\n            return logTopics[logPosition].equals(utils_1.Data.toBuffer(expectedTopic));\n        }\n        // an empty rule set means \"anything\"\n        if (expectedTopic.length === 0)\n            return true;\n        expectedTopicSet = expectedTopic;\n        const logTopic = logTopics[logPosition];\n        // \"OR\" logic, e.g., [[A, B]] means log topic in the first position matching either \"A\" OR \"B\":\n        return expectedTopicSet.some(expectedTopic => logTopic.equals(utils_1.Data.toBuffer(expectedTopic)));\n    });\n};\nclass BlockLogs {\n    constructor(data) {\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            this[_raw] = decoded;\n        }\n    }\n    /**\n     *\n     * @param blockHash - Creates an BlogLogs entity with an empty internal logs\n     * array.\n     */\n    static create(blockHash) {\n        const blockLog = Object.create(BlockLogs.prototype);\n        blockLog[_raw] = [blockHash.toBuffer(), []];\n        return blockLog;\n    }\n    /**\n     * rlpEncode's the blockHash and logs array for db storage\n     */\n    serialize() {\n        return (0, rlp_1.encode)(this[_raw]);\n    }\n    /**\n     * Appends the data to the internal logs array\n     * @param transactionIndex -\n     * @param transactionHash -\n     * @param log -\n     */\n    append(\n    /*removed: boolean, */ transactionIndex, transactionHash, log) {\n        this[_raw][1].push([\n            utils_2.BUFFER_ZERO,\n            transactionIndex.toBuffer(),\n            transactionHash.toBuffer(),\n            log[0],\n            log[1],\n            log[2] // `data`\n        ]);\n    }\n    /**\n     * Returns the number of logs in the internal logs array.\n     */\n    get length() {\n        return this[_raw][1].length;\n    }\n    static fromJSON(json) {\n        if (!json || json.length === 0) {\n            return null;\n        }\n        const blockHash = json[0].blockHash;\n        const blockNumber = json[0].blockNumber;\n        const blockLogs = BlockLogs.create(utils_1.Data.from(blockHash, 32));\n        blockLogs.blockNumber = utils_1.Quantity.from(blockNumber);\n        json.forEach(log => {\n            const address = ethereum_address_1.Address.from(log.address);\n            const blockNumber = log.blockNumber;\n            const data = Array.isArray(log.data)\n                ? log.data.map(d => utils_1.Data.toBuffer(d))\n                : utils_1.Data.toBuffer(log.data);\n            const logIndex = log.logIndex;\n            const removed = log.removed === false ? utils_2.BUFFER_ZERO : utils_1.Quantity.One.toBuffer();\n            const topics = Array.isArray(log.topics)\n                ? log.topics.map(t => utils_1.Data.toBuffer(t, 32))\n                : utils_1.Data.toBuffer(log.topics, 32);\n            const transactionHash = utils_1.Data.from(log.transactionHash, 32);\n            const transactionIndex = utils_1.Quantity.from(log.transactionIndex);\n            blockLogs.append(transactionIndex, transactionHash, [\n                address.toBuffer(),\n                topics,\n                data\n            ]);\n        });\n        return blockLogs;\n    }\n    toJSON() {\n        return this[_logs]().toJSON();\n    }\n    [_logs]() {\n        const blockNumber = this.blockNumber;\n        const raw = this[_raw];\n        const logs = raw[1];\n        const l = this.length;\n        const blockHash = utils_1.Data.from(raw[0]);\n        return {\n            toJSON() {\n                return {\n                    *[Symbol.iterator]() {\n                        for (let i = 0; i < l; i++) {\n                            yield BlockLogs.logToJSON(logs[i], utils_1.Quantity.from(i), blockHash, blockNumber);\n                        }\n                    }\n                };\n            },\n            *[Symbol.iterator]() {\n                for (let i = 0; i < l; i++) {\n                    const log = logs[i];\n                    const address = log[3];\n                    const topics = log[4];\n                    yield {\n                        address,\n                        topics,\n                        toJSON: () => BlockLogs.logToJSON(log, utils_1.Quantity.from(i), blockHash, blockNumber)\n                    };\n                }\n            }\n        };\n    }\n    /**\n     *\n     * @param log -\n     * @param logIndex - The index this log appears in the block\n     * @param blockHash - The hash of the block\n     * @param blockNumber - The block number\n     */\n    static logToJSON(log, logIndex, blockHash, blockNumber) {\n        const topics = log[4];\n        const data = log[5];\n        return {\n            address: ethereum_address_1.Address.from(log[3]),\n            blockHash,\n            blockNumber,\n            data: Array.isArray(data)\n                ? data.map(d => utils_1.Data.from(d, d.length))\n                : utils_1.Data.from(data, data.length),\n            logIndex,\n            removed: log[0].equals(utils_2.BUFFER_ZERO) ? false : true,\n            topics: Array.isArray(topics)\n                ? topics.map(t => utils_1.Data.from(t, 32))\n                : utils_1.Data.from(topics, 32),\n            transactionHash: utils_1.Data.from(log[2], 32),\n            transactionIndex: utils_1.Quantity.from(log[1])\n        };\n    }\n    /**\n     * Note: you must set `this.blockNumber: Quantity` first!\n     *\n     * Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic\n     * filters:\n     *  ▸ [] \"anything\"\n     *  ▸ [A] \"A in first position (and anything after)\"\n     *  ▸ [null, B] \"anything in first position AND B in second position (and anything after)\"\n     *  ▸ [A, B] \"A\" in first position AND B in second position (and anything after)\"\n     *  ▸ [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n     * @param expectedAddresses -\n     * @param expectedTopics -\n     * @returns JSON representation of the filtered logs\n     */\n    *filter(expectedAddresses, expectedTopics) {\n        const logs = this[_logs]();\n        if (expectedAddresses.length !== 0) {\n            if (expectedTopics.length === 0) {\n                for (const log of logs) {\n                    if (expectedAddresses.some(address => address.equals(log.address)))\n                        yield log.toJSON();\n                }\n            }\n            else {\n                for (const log of logs) {\n                    if (!expectedAddresses.some(address => address.equals(log.address)))\n                        continue;\n                    if (filterByTopic(expectedTopics, log.topics))\n                        yield log.toJSON();\n                }\n            }\n        }\n        else if (expectedTopics.length !== 0) {\n            for (const log of logs) {\n                if (filterByTopic(expectedTopics, log.topics))\n                    yield log.toJSON();\n            }\n        }\n        else {\n            yield* logs.toJSON();\n        }\n    }\n}\nexports.BlockLogs = BlockLogs;\n//# sourceMappingURL=blocklogs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceDataFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst BYTE_LENGTH = 32;\n/**\n * Precomputed 32-byte prefixes to make stringification a faster\n */\nconst PREFIXES = [\n    \"\",\n    \"00\",\n    \"0000\",\n    \"000000\",\n    \"00000000\",\n    \"0000000000\",\n    \"000000000000\",\n    \"00000000000000\",\n    \"0000000000000000\",\n    \"000000000000000000\",\n    \"00000000000000000000\",\n    \"0000000000000000000000\",\n    \"000000000000000000000000\",\n    \"00000000000000000000000000\",\n    \"0000000000000000000000000000\",\n    \"000000000000000000000000000000\",\n    \"00000000000000000000000000000000\",\n    \"0000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n];\nconst TraceDataFactory = () => {\n    const traceDataLookup = new Map();\n    const TraceData = {\n        from: (value) => {\n            // Remove all leading zeroes from keys.\n            const key = (0, utils_1.bufferToMinHexKey)(value);\n            const existing = traceDataLookup.get(key);\n            if (existing) {\n                return existing;\n            }\n            let buffer;\n            let str;\n            const data = {\n                /**\n                 * Returns a 32-byte 0-padded Buffer\n                 */\n                toBuffer: () => {\n                    if (buffer) {\n                        return buffer;\n                    }\n                    const length = value.byteLength;\n                    if (length === BYTE_LENGTH) {\n                        buffer = value;\n                    }\n                    else {\n                        // convert the buffer into the appropriately sized buffer.\n                        const lengthDiff = BYTE_LENGTH - length;\n                        buffer = Buffer.allocUnsafe(BYTE_LENGTH).fill(0, 0, lengthDiff);\n                        value.copy(buffer, lengthDiff, 0, length);\n                    }\n                    return buffer;\n                },\n                /**\n                 * Returns a 32-byte hex-string representation\n                 */\n                toJSON: () => {\n                    if (str) {\n                        return str;\n                    }\n                    // convert a hex key like \"ab01\" into \"00...00ab01\"\n                    return (str = `${PREFIXES[BYTE_LENGTH - key.length / 2]}${key}`);\n                }\n            };\n            traceDataLookup.set(key, data);\n            return data;\n        }\n    };\n    return TraceData;\n};\nexports.TraceDataFactory = TraceDataFactory;\n//# sourceMappingURL=trace-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceStorageMap = void 0;\nclass TraceStorageMap extends Map {\n    toJSON() {\n        const obj = {};\n        for (const [key, value] of this) {\n            obj[key.toJSON()] = value;\n        }\n        return obj;\n    }\n}\nexports.TraceStorageMap = TraceStorageMap;\n//# sourceMappingURL=trace-storage-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=debug-storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=extract-values-from-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hex-datatypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=shh.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscriptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tuple-from-union.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=account-proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=fee-history.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hardfork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=raw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=rpc-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=vm-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockParams = void 0;\nexports.BlockParams = {\n    /**\n     *  Base fee per gas for blocks without a parent containing a base fee per gas.\n     */\n    INITIAL_BASE_FEE_PER_GAS: 1000000000n,\n    /**\n     * Divisor used to set a block's target gas usage.\n     */\n    ELASTICITY: 2n,\n    /**\n     * Divisor used to limit the amount the base fee per gas can change from one block to another.\n     */\n    BASE_FEE_MAX_CHANGE_DENOMINATOR: 8n\n};\n//# sourceMappingURL=block-params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snapshots.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertArgLength = void 0;\nfunction assertArgLength(min, max = min) {\n    return function (target, propertyKey, descriptor) {\n        const original = descriptor.value;\n        descriptor.value = function () {\n            const length = arguments.length;\n            if (length < min || length > max) {\n                throw new Error(`Incorrect number of arguments. '${String(propertyKey)}' requires ${min === max\n                    ? `exactly ${min} ${min === 1 ? \"argument\" : \"arguments\"}.`\n                    : `between ${min} and ${max} arguments.`}`);\n            }\n            return Reflect.apply(original, this, arguments);\n        };\n        return descriptor;\n    };\n}\nexports.assertArgLength = assertArgLength;\n//# sourceMappingURL=assert-arg-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction replaceFromHeap(priced, source) {\n    // get the next best for this account, removing from the source Heap:\n    const next = source.peek();\n    if (next) {\n        // remove the current best priced transaction from this account and replace\n        // it with the account's next lowest nonce transaction:\n        priced.replaceBest(next);\n        next.locked = true;\n        return true;\n    }\n    else {\n        // since we don't have a next, just remove this item from priced\n        return priced.removeBest();\n    }\n}\nexports.default = replaceFromHeap;\n//# sourceMappingURL=replace-from-heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nconst handlers_1 = require(\"./handlers\");\nconst signatures_1 = require(\"./signatures\");\nconst CONSOLE_ADDRESS = 0x636f6e736f6c652e6c6f67n;\n/**\n * Returns arguments passed to console.sol's `console.log` if the given\n * `@ethereumjs/vm` step event's `opcode`, `stack`, and `memory` fields contain\n * valid `console.log` data.\n *\n * The event's `opcode.name` field must be `\"STATICCALL\"` and the `toAddress` on\n * the `stack` must be the `console.log` address:\n * `0x000000000000000000636f6e736f6c652e6c6f67`.\n *\n * @param event - `@ethereumjs/vm` step event\n * @returns\n */\nconst maybeGetLogs = (event) => {\n    if (event.opcode.name !== \"STATICCALL\")\n        return null;\n    // STATICCALL, which is the OPCODE that is used to initiate a console.log, has\n    // 6 params, but we only care about these 3:\n    const stack = event.stack;\n    const [memoryLength, memoryOffset, toAddress] = stack.slice(-4, -1);\n    // only if the toAddress is our console address we should try parsing\n    if (toAddress !== CONSOLE_ADDRESS)\n        return null;\n    // STATICCALL allows for passing in invalid pointers and lengths so we need to\n    // guard against failures with a try/catch\n    try {\n        const memoryStart = Number(memoryOffset);\n        const memoryEnd = memoryStart + Number(memoryLength);\n        const memory = event.memory.subarray(memoryStart, memoryEnd);\n        const method = memory.readUInt32BE(0); // 4 bytes wide\n        const handlers = signatures_1.signatureMap.get(method);\n        if (!handlers)\n            return null;\n        // we skip the first 4 bytes, as that is our signature\n        const values = memory.subarray(4);\n        return handlers.map((handler, index) => {\n            const offset = index * handlers_1.WORD_SIZE;\n            return handler(values, offset);\n        });\n    }\n    catch {\n        return null;\n    }\n};\nexports.maybeGetLogs = maybeGetLogs;\n//# sourceMappingURL=maybe-get-logs.js.map","\"use strict\";\n/*\n * This file was automatically generated by `./src/chains/ethereum/console.log/scripts/generate.ts`; do not edit. */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureMap = void 0;\nconst handlers_1 = require(\"./handlers\");\nexports.signatureMap = new Map([\n    // log()\n    [1368866505, []],\n    // log(address)\n    [741264322, [handlers_1.address]],\n    // log(bool)\n    [843419373, [handlers_1.bool]],\n    // log(string)\n    [1093685164, [handlers_1.string]],\n    // log(uint256)\n    [4163653873, [handlers_1.uint256]],\n    // log(uint)\n    [4122065833, [handlers_1.uint256]],\n    // log(bytes)\n    [199720790, [handlers_1.bytes]],\n    // log(int256)\n    [760966329, [handlers_1.int256]],\n    // log(int)\n    [1309416733, [handlers_1.int256]],\n    // log(bytes1)\n    [1847107880, [(0, handlers_1.fixedBytes)(1)]],\n    // log(bytes2)\n    [3921027734, [(0, handlers_1.fixedBytes)(2)]],\n    // log(bytes3)\n    [763578662, [(0, handlers_1.fixedBytes)(3)]],\n    // log(bytes4)\n    [3764340945, [(0, handlers_1.fixedBytes)(4)]],\n    // log(bytes5)\n    [2793701517, [(0, handlers_1.fixedBytes)(5)]],\n    // log(bytes6)\n    [2927928721, [(0, handlers_1.fixedBytes)(6)]],\n    // log(bytes7)\n    [1322614312, [(0, handlers_1.fixedBytes)(7)]],\n    // log(bytes8)\n    [1334060334, [(0, handlers_1.fixedBytes)(8)]],\n    // log(bytes9)\n    [2428341456, [(0, handlers_1.fixedBytes)(9)]],\n    // log(bytes10)\n    [20780939, [(0, handlers_1.fixedBytes)(10)]],\n    // log(bytes11)\n    [67127854, [(0, handlers_1.fixedBytes)(11)]],\n    // log(bytes12)\n    [2258660029, [(0, handlers_1.fixedBytes)(12)]],\n    // log(bytes13)\n    [2488442420, [(0, handlers_1.fixedBytes)(13)]],\n    // log(bytes14)\n    [2456219775, [(0, handlers_1.fixedBytes)(14)]],\n    // log(bytes15)\n    [3667227872, [(0, handlers_1.fixedBytes)(15)]],\n    // log(bytes16)\n    [1717330180, [(0, handlers_1.fixedBytes)(16)]],\n    // log(bytes17)\n    [866084666, [(0, handlers_1.fixedBytes)(17)]],\n    // log(bytes18)\n    [3302112666, [(0, handlers_1.fixedBytes)(18)]],\n    // log(bytes19)\n    [1584093747, [(0, handlers_1.fixedBytes)(19)]],\n    // log(bytes20)\n    [1367925737, [(0, handlers_1.fixedBytes)(20)]],\n    // log(bytes21)\n    [3923391840, [(0, handlers_1.fixedBytes)(21)]],\n    // log(bytes22)\n    [3589990556, [(0, handlers_1.fixedBytes)(22)]],\n    // log(bytes23)\n    [2879508237, [(0, handlers_1.fixedBytes)(23)]],\n    // log(bytes24)\n    [4055063348, [(0, handlers_1.fixedBytes)(24)]],\n    // log(bytes25)\n    [193248344, [(0, handlers_1.fixedBytes)(25)]],\n    // log(bytes26)\n    [4172368369, [(0, handlers_1.fixedBytes)(26)]],\n    // log(bytes27)\n    [976705501, [(0, handlers_1.fixedBytes)(27)]],\n    // log(bytes28)\n    [3358255854, [(0, handlers_1.fixedBytes)(28)]],\n    // log(bytes29)\n    [1265222613, [(0, handlers_1.fixedBytes)(29)]],\n    // log(bytes30)\n    [3994207469, [(0, handlers_1.fixedBytes)(30)]],\n    // log(bytes31)\n    [3263516050, [(0, handlers_1.fixedBytes)(31)]],\n    // log(bytes32)\n    [666357637, [(0, handlers_1.fixedBytes)(32)]],\n    // log(address,address)\n    [3673216170, [handlers_1.address, handlers_1.address]],\n    // log(address,bool)\n    [1974863315, [handlers_1.address, handlers_1.bool]],\n    // log(address,string)\n    [1973388987, [handlers_1.address, handlers_1.string]],\n    // log(address,uint256)\n    [2198464680, [handlers_1.address, handlers_1.uint256]],\n    // log(address,uint)\n    [574869411, [handlers_1.address, handlers_1.uint256]],\n    // log(bool,address)\n    [2235320393, [handlers_1.bool, handlers_1.address]],\n    // log(bool,bool)\n    [705760899, [handlers_1.bool, handlers_1.bool]],\n    // log(bool,string)\n    [2414527781, [handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256)\n    [965833939, [handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint)\n    [910912146, [handlers_1.bool, handlers_1.uint256]],\n    // log(string,address)\n    [832238387, [handlers_1.string, handlers_1.address]],\n    // log(string,bool)\n    [3283441205, [handlers_1.string, handlers_1.bool]],\n    // log(string,string)\n    [1264337527, [handlers_1.string, handlers_1.string]],\n    // log(string,uint256)\n    [3054400204, [handlers_1.string, handlers_1.uint256]],\n    // log(string,uint)\n    [2534451664, [handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address)\n    [1764191366, [handlers_1.uint256, handlers_1.address]],\n    // log(uint,address)\n    [1491830284, [handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool)\n    [480083635, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool)\n    [510514412, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string)\n    [1681903839, [handlers_1.uint256, handlers_1.string]],\n    // log(uint,string)\n    [262402885, [handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256)\n    [4133908826, [handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint)\n    [1812949376, [handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address)\n    [25986242, [handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,bool)\n    [4070990470, [handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,string)\n    [7426238, [handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,uint256)\n    [402547077, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,uint)\n    [1815506290, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address)\n    [4044790253, [handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool)\n    [3951234194, [handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,string)\n    [555898316, [handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,uint256)\n    [2622462459, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,uint)\n    [742821141, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,address)\n    [4035396840, [handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,string,bool)\n    [3473018801, [handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string)\n    [4218888805, [handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,string,uint256)\n    [1742565361, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint)\n    [484110986, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,address)\n    [2076235848, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,address)\n    [2548867988, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,bool)\n    [1736575400, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,bool)\n    [3846889796, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,string)\n    [2717051050, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,string)\n    [3136907337, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256)\n    [3063663350, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint)\n    [2273710942, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address)\n    [3530962535, [handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,address,bool)\n    [415876934, [handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,string)\n    [3734671984, [handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,address,uint256)\n    [1601936123, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,uint)\n    [3950005167, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address)\n    [276362893, [handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool)\n    [1349555864, [handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,string)\n    [626391622, [handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,uint256)\n    [317855234, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,uint)\n    [2954061243, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,address)\n    [2509355347, [handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,string,bool)\n    [3686056519, [handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string)\n    [2960557183, [handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,string,uint256)\n    [278130193, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint)\n    [3224906412, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,address)\n    [143587794, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,address)\n    [3302110471, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,bool)\n    [3906927529, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,bool)\n    [464374251, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,string)\n    [3288086896, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,string)\n    [3359211184, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256)\n    [923808615, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint)\n    [995886048, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address)\n    [4243355104, [handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,address,bool)\n    [3374145236, [handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,address,string)\n    [3773410639, [handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,address,uint256)\n    [220641573, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,uint)\n    [130552343, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address)\n    [2469116728, [handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool)\n    [2232122070, [handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,string)\n    [3801674877, [handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,uint256)\n    [3378075862, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,uint)\n    [689682896, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,address)\n    [2515337621, [handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,bool)\n    [2967534005, [handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string)\n    [753761519, [handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,uint256)\n    [1478619041, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint)\n    [4083337817, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,address)\n    [478069832, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,address)\n    [3817119609, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,bool)\n    [3396809649, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,bool)\n    [4043501061, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,string)\n    [1500569737, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,string)\n    [2750793529, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256)\n    [3393701099, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint)\n    [2526862595, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address)\n    [3170737120, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address)\n    [2104993307, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,bool)\n    [2607726658, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,bool)\n    [2060456590, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,string)\n    [1674265081, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,address,string)\n    [3464692859, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,uint256)\n    [1520131797, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,uint)\n    [2286109610, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,address)\n    [889741179, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,address)\n    [1112473535, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool)\n    [544310864, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool)\n    [3587091680, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,string)\n    [2239189025, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,string)\n    [2332955902, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,uint256)\n    [537493524, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,uint)\n    [1515034914, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,address)\n    [2063255897, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,string,address)\n    [529592906, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,bool)\n    [1290643290, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,bool)\n    [1185403086, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string)\n    [2970968351, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string)\n    [1062716053, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,uint256)\n    [933920076, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,uint)\n    [1533929535, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,address)\n    [1553380145, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,address)\n    [3191032091, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,bool)\n    [1197922930, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,bool)\n    [1733758967, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,string)\n    [1909476082, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,string)\n    [2104037094, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256)\n    [3522001468, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint)\n    [3884059252, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address,address)\n    [1717301556, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,address,bool)\n    [238520724, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,address,string)\n    [4161329696, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,address,uint256)\n    [2485456247, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,address,uint)\n    [3982404743, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,bool,address)\n    [2669396846, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,address,bool,bool)\n    [752096074, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,address,bool,string)\n    [2858762440, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,address,bool,uint256)\n    [963766156, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,bool,uint)\n    [2513854225, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,string,address)\n    [2406706454, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,address,string,bool)\n    [1863997774, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,address,string,string)\n    [566079269, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,address,string,uint256)\n    [4011651047, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,string,uint)\n    [69767936, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,uint256,address)\n    [2376523509, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint,address)\n    [3603321462, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint256,bool)\n    [2604815586, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint,bool)\n    [3270936812, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint256,string)\n    [4256496016, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint,string)\n    [2647731885, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint256,uint256)\n    [3193255041, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,uint,uint)\n    [1425929188, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,address,address)\n    [1711502813, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(address,bool,address,bool)\n    [2801077007, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(address,bool,address,string)\n    [769095910, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(address,bool,address,uint256)\n    [2807847390, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address,uint)\n    [3698398930, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,bool,address)\n    [3476636805, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool,bool)\n    [3401856121, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,bool,string)\n    [3754205928, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,bool,uint256)\n    [2353946086, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,bool,uint)\n    [3484780374, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,string,address)\n    [436029782, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(address,bool,string,bool)\n    [1353532957, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(address,bool,string,string)\n    [1197235251, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(address,bool,string,uint256)\n    [2162598411, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,string,uint)\n    [2652011374, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,uint256,address)\n    [3438776481, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint,address)\n    [227337758, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint256,bool)\n    [3294903840, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint,bool)\n    [2244855215, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint256,string)\n    [178704301, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint,string)\n    [2606272204, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint256,uint256)\n    [946861556, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,uint,uint)\n    [3255869470, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,address,address)\n    [221706784, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(address,string,address,bool)\n    [233909110, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(address,string,address,string)\n    [4158874181, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(address,string,address,uint256)\n    [1166009295, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,address,uint)\n    [2350461865, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,bool,address)\n    [542667202, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(address,string,bool,bool)\n    [1595759775, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(address,string,bool,string)\n    [3154862590, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(address,string,bool,uint256)\n    [1365129398, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,bool,uint)\n    [3877655068, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,string,address)\n    [2689478535, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(address,string,string,bool)\n    [900007711, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string,string)\n    [1560462603, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(address,string,string,uint256)\n    [362776871, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,string,uint)\n    [2706362425, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint256,address)\n    [1662531192, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint,address)\n    [3755464715, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint256,bool)\n    [251125840, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint,bool)\n    [2116357467, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint256,string)\n    [1149776040, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint,string)\n    [1561552329, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint256,uint256)\n    [499704248, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,uint,uint)\n    [2764647008, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint256,address,address)\n    [1200430178, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint,address,address)\n    [3961816175, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint256,address,bool)\n    [2713504179, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint,address,bool)\n    [4051804649, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint256,address,string)\n    [497649386, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint,address,string)\n    [1567749022, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint256,address,uint256)\n    [269444366, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint,address,uint)\n    [2782496616, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint256,bool,address)\n    [2736520652, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint,bool,address)\n    [602229106, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint256,bool,bool)\n    [1005970743, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint,bool,bool)\n    [4272018778, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint256,bool,string)\n    [3316483577, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint,bool,string)\n    [2391690869, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint256,bool,uint256)\n    [586594713, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint,bool,uint)\n    [1770996626, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint256,string,address)\n    [1547898183, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint,string,address)\n    [3698927108, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint256,string,bool)\n    [3474460764, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint,string,bool)\n    [2751614737, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint256,string,string)\n    [2292761606, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint,string,string)\n    [2119616147, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint256,string,uint256)\n    [3204577425, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint,string,uint)\n    [4111650715, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,uint256,address)\n    [551786573, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,uint,address)\n    [519451700, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,uint256,bool)\n    [1727118439, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,uint,bool)\n    [3964381346, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,uint256,string)\n    [1244184599, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,uint,string)\n    [2301889963, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256,uint256)\n    [888202806, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint,uint)\n    [1024368100, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address,address)\n    [487903233, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(bool,address,address,bool)\n    [1180699616, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,address,string)\n    [3625099623, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(bool,address,address,uint256)\n    [208064958, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,address,uint)\n    [1384430956, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,bool,address)\n    [474063670, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(bool,address,bool,bool)\n    [1788626827, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(bool,address,bool,string)\n    [1248250676, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(bool,address,bool,uint256)\n    [126031106, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,bool,uint)\n    [1287000017, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,string,address)\n    [1870422078, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(bool,address,string,bool)\n    [3804222987, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(bool,address,string,string)\n    [2805734838, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(bool,address,string,uint256)\n    [3256837319, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,string,uint)\n    [194640930, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,uint256,address)\n    [325780957, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint,address)\n    [1760647349, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint256,bool)\n    [3590430492, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint,bool)\n    [4002252402, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint256,string)\n    [1374724088, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint,string)\n    [2691192883, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint256,uint256)\n    [2079424929, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,uint,uint)\n    [2617143996, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,address,address)\n    [4102557348, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,bool,address,bool)\n    [3231908568, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,bool,address,string)\n    [2695133539, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,bool,address,uint256)\n    [1276263767, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address,uint)\n    [1620281063, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,bool,address)\n    [2352126746, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool,bool)\n    [992632032, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,bool,string)\n    [719587540, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,bool,uint256)\n    [1836074433, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,bool,uint)\n    [3259532109, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,string,address)\n    [4188875657, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,bool,string,bool)\n    [3092715066, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,bool,string,string)\n    [1830717265, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,bool,string,uint256)\n    [3819555375, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,string,uint)\n    [395003525, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,uint256,address)\n    [1420274080, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint,address)\n    [201299213, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint256,bool)\n    [1637764366, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint,bool)\n    [2874982852, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint256,string)\n    [2111099104, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint,string)\n    [1348569399, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint256,uint256)\n    [196087467, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,uint,uint)\n    [1181212302, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,address,address)\n    [724244700, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(bool,string,address,bool)\n    [1842623690, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(bool,string,address,string)\n    [316065672, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(bool,string,address,uint256)\n    [2781534868, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,address,uint)\n    [453743963, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,bool,address)\n    [1401816747, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(bool,string,bool,bool)\n    [3697185627, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(bool,string,bool,string)\n    [1211958294, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(bool,string,bool,uint256)\n    [369533843, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,bool,uint)\n    [2372902053, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,string,address)\n    [2547225816, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(bool,string,string,bool)\n    [508266469, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string,string)\n    [392356650, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(bool,string,string,uint256)\n    [2078327787, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,string,uint)\n    [1574643090, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint256,address)\n    [362193358, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint,address)\n    [1529002296, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint256,bool)\n    [1796103507, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint,bool)\n    [549177775, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint256,string)\n    [450457062, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint,string)\n    [2007084013, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint256,uint256)\n    [679886795, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,uint,uint)\n    [2387273838, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint256,address,address)\n    [653615272, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint,address,address)\n    [2318373034, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint256,address,bool)\n    [3032683775, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint,address,bool)\n    [1705899016, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint256,address,string)\n    [464760986, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint,address,string)\n    [403247937, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint256,address,uint256)\n    [355982471, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint,address,uint)\n    [3399820138, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint256,bool,address)\n    [2597139990, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint,bool,address)\n    [1114097656, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint256,bool,bool)\n    [3468031191, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint,bool,bool)\n    [2650928961, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint256,bool,string)\n    [2437143473, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint,bool,string)\n    [3067439572, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256,bool,uint256)\n    [2140912802, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint,bool,uint)\n    [3554563475, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint256,string,address)\n    [4275904511, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint,string,address)\n    [2781285673, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint256,string,bool)\n    [3857124139, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint,string,bool)\n    [2446522387, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint256,string,string)\n    [4122747465, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint,string,string)\n    [3542771016, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint256,string,uint256)\n    [1779538402, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint,string,uint)\n    [1098907931, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,uint256,address)\n    [14518201, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,uint,address)\n    [4049711649, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,uint256,bool)\n    [3197649747, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,uint,bool)\n    [2753397214, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,uint256,string)\n    [2389310301, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,uint,string)\n    [3657852616, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256,uint256)\n    [927708338, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint,uint)\n    [853517604, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address,address)\n    [3985582326, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(string,address,address,bool)\n    [3047013728, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(string,address,address,string)\n    [2148146279, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(string,address,address,uint256)\n    [2398352281, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,address,uint)\n    [1857524797, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,bool,address)\n    [573965245, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(string,address,bool,bool)\n    [2038975531, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(string,address,bool,string)\n    [72663161, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(string,address,bool,uint256)\n    [1050642026, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,bool,uint)\n    [3318856587, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,string,address)\n    [2864486961, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(string,address,string,bool)\n    [1595265676, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(string,address,string,string)\n    [609847026, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(string,address,string,uint256)\n    [2446397742, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,string,uint)\n    [2405583849, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,uint256,address)\n    [1677429701, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint,address)\n    [2741431424, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint256,bool)\n    [4232594928, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint,bool)\n    [1522647356, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint256,string)\n    [1514632754, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint,string)\n    [1280700980, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint256,uint256)\n    [4176812830, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,uint,uint)\n    [3668153533, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,address,address)\n    [870964509, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(string,bool,address,bool)\n    [2508990662, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(string,bool,address,string)\n    [764294052, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(string,bool,address,uint256)\n    [1560853253, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address,uint)\n    [685723286, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,bool,address)\n    [1905304873, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool,bool)\n    [2304440517, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,bool,string)\n    [2636305885, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,bool,uint256)\n    [2386524329, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,bool,uint)\n    [2155164136, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,string,address)\n    [3764542249, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(string,bool,string,bool)\n    [1066037277, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(string,bool,string,string)\n    [2821114603, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(string,bool,string,uint256)\n    [620303461, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,string,uint)\n    [885731469, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,uint256,address)\n    [2472413631, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint,address)\n    [1909687565, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint256,bool)\n    [2331496330, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint,bool)\n    [1019590099, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint256,string)\n    [1949134567, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint,string)\n    [1119461927, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint256,uint256)\n    [1689631591, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,uint,uint)\n    [1572859960, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,address,address)\n    [1134328815, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,string,address,bool)\n    [1556958775, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,string,address,string)\n    [3944480640, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,string,address,uint256)\n    [2093204999, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,address,uint)\n    [1250010474, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,bool,address)\n    [3279013851, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,string,bool,bool)\n    [1081628777, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,string,bool,string)\n    [1585754346, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,string,bool,uint256)\n    [3601791698, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,bool,uint)\n    [2256636538, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,string,address)\n    [1834430276, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,string,bool)\n    [739726573, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string,string)\n    [3731419658, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,string,uint256)\n    [2393878571, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,string,uint)\n    [2681211381, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint256,address)\n    [270792626, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint,address)\n    [1565476480, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint256,bool)\n    [3282609748, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint,bool)\n    [3864418506, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint256,string)\n    [1562023706, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint,string)\n    [2366909661, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint256,uint256)\n    [4099767596, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,uint,uint)\n    [3587119056, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint256,address,address)\n    [1587722158, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint,address,address)\n    [3939013249, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint256,address,bool)\n    [2182163010, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint,address,bool)\n    [285649143, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint256,address,string)\n    [2684039059, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint,address,string)\n    [844415720, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint256,address,uint256)\n    [1325727174, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint,address,uint)\n    [1481210622, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint256,bool,address)\n    [3773389720, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint,bool,address)\n    [3847527825, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint256,bool,bool)\n    [894187222, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint,bool,bool)\n    [3816813520, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint256,bool,string)\n    [2885106328, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint,bool,string)\n    [1993105508, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint256,bool,uint256)\n    [3827003247, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint,bool,uint)\n    [1427009269, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint256,string,address)\n    [2084975268, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint,string,address)\n    [3144824297, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint256,string,bool)\n    [2099530013, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint,string,bool)\n    [3919545039, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint256,string,string)\n    [1522028063, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint,string,string)\n    [1821956834, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint256,string,uint256)\n    [3330189777, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint,string,uint)\n    [2697245221, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,uint256,address)\n    [3793609336, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,uint,address)\n    [3201771711, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,uint256,bool)\n    [1982258066, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,uint,bool)\n    [4147936829, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,uint256,string)\n    [2236298390, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,uint,string)\n    [2773406909, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256,uint256)\n    [2812835923, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint,uint)\n    [149837414, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address,address)\n    [612938772, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address,address)\n    [1430734329, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,address,bool)\n    [153090805, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,address,bool)\n    [22350596, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,address,string)\n    [52195187, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint,address,address,string)\n    [2034490470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,address,uint256)\n    [1936653238, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,address,uint)\n    [2587672470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,address,bool,address)\n    [4017276179, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint,address,bool,address)\n    [3056677012, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint256,address,bool,bool)\n    [3813741583, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint,address,bool,bool)\n    [2116501773, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,address,bool,string)\n    [2432370346, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint,address,bool,string)\n    [1676730946, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint256,address,bool,uint256)\n    [1522374954, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,address,bool,uint)\n    [2064181483, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,address,string,address)\n    [2629472255, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint,address,string,address)\n    [3420819197, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint256,address,string,bool)\n    [3425872647, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint,address,string,bool)\n    [581204390, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint256,address,string,string)\n    [1041403043, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint,address,string,string)\n    [2373420580, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint256,address,string,uint256)\n    [1182952285, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint,address,string,uint)\n    [2697204968, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address,uint256,address)\n    [364980149, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint,address,uint,address)\n    [4256361684, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,address,uint256,bool)\n    [1601452668, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,address,uint,bool)\n    [435581801, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,address,uint256,string)\n    [3719324961, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint,address,uint,string)\n    [1054063912, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,address,uint256,uint256)\n    [211605953, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,address,uint,uint)\n    [3399106228, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,bool,address,address)\n    [2716814523, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint,bool,address,address)\n    [2263728396, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint256,bool,address,bool)\n    [1162695845, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint,bool,address,bool)\n    [2449150530, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint256,bool,address,string)\n    [2917159623, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint,bool,address,string)\n    [2721084958, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint256,bool,address,uint256)\n    [125994997, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint,bool,address,uint)\n    [1102442299, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,bool,address)\n    [1768164185, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,bool,address)\n    [1392910941, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool,bool)\n    [3069540257, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool,bool)\n    [1315722005, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,bool,string)\n    [3722155361, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,bool,string)\n    [831186331, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,bool,uint256)\n    [1952763427, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,bool,uint)\n    [3173363033, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,bool,string,address)\n    [4015165464, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint,bool,string,address)\n    [1231956916, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint256,bool,string,bool)\n    [3952250239, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint,bool,string,bool)\n    [879671495, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint256,bool,string,string)\n    [1757984957, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint,bool,string,string)\n    [2754870525, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint256,bool,string,uint256)\n    [740099910, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint,bool,string,uint)\n    [2438978344, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,bool,uint256,address)\n    [2295029825, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint,bool,uint,address)\n    [1329595790, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool,uint256,bool)\n    [2443193898, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool,uint,bool)\n    [3534472445, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,bool,uint256,string)\n    [3724797812, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint,bool,uint,string)\n    [3906845782, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,bool,uint256,uint256)\n    [3333212072, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,bool,uint,uint)\n    [1451396516, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,string,address,address)\n    [1634266465, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint,string,address,address)\n    [2141537675, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint256,string,address,bool)\n    [2428701270, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint,string,address,bool)\n    [4181720887, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint256,string,address,string)\n    [2621104033, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint,string,address,string)\n    [4170733439, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint256,string,address,uint256)\n    [3906142605, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint,string,address,uint)\n    [2565338099, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,string,bool,address)\n    [2922300801, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint,string,bool,address)\n    [2037328032, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint256,string,bool,bool)\n    [3126025628, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint,string,bool,bool)\n    [1371286465, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,string,bool,string)\n    [3537118157, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint,string,bool,string)\n    [2370346144, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint256,string,bool,uint256)\n    [3472922752, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,string,bool,uint)\n    [2763295359, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,string,address)\n    [3582182914, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint,string,string,address)\n    [3432549024, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,string,bool)\n    [3014047421, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,string,bool)\n    [310782872, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string,string)\n    [564987523, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string,string)\n    [1474103825, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,string,uint256)\n    [2955463101, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,string,uint)\n    [1995203422, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,string,uint256,address)\n    [992115124, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint,string,uint,address)\n    [2877020669, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,string,uint256,bool)\n    [1763348340, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,string,uint,bool)\n    [2270850606, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string,uint256,string)\n    [3082360010, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint,string,uint,string)\n    [2730232985, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,string,uint256,uint256)\n    [2193775476, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,string,uint,uint)\n    [3221501959, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,uint256,address,address)\n    [1453707697, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,uint,address,address)\n    [3398671136, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,uint256,address,bool)\n    [365610102, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,uint,address,bool)\n    [2833785006, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,uint256,address,string)\n    [1826504888, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,uint,address,string)\n    [3600994782, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,uint256,address,uint256)\n    [2297881778, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,uint,address,uint)\n    [1628154048, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,uint256,bool,address)\n    [2592172675, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,uint,bool,address)\n    [3776410703, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,uint256,bool,bool)\n    [2869451494, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,uint,bool,bool)\n    [2495495089, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,uint256,bool,string)\n    [2780101785, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,uint,bool,string)\n    [4024028142, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,uint256,bool,uint256)\n    [3950997458, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,uint,bool,uint)\n    [1818524812, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,uint256,string,address)\n    [1121066423, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,uint,string,address)\n    [1127384482, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,uint256,string,bool)\n    [2062986021, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,uint,string,bool)\n    [2989403910, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,uint256,string,string)\n    [668512210, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,uint,string,string)\n    [2080582194, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,uint256,string,uint256)\n    [1570936811, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,uint,string,uint)\n    [949229117, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,uint256,address)\n    [4202792367, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,uint,address)\n    [3766828905, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,uint256,bool)\n    [3315126661, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,uint,bool)\n    [1683143115, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,uint256,string)\n    [1506790371, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,uint,string)\n    [2024634892, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256,uint256)\n    [423606272, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint,uint)\n    [1554033982, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]]\n]);\n//# sourceMappingURL=signatures.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion\n//# sourceMappingURL=exclusive.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion Definition helpers\n//# sourceMappingURL=definition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeterministicSeedPhrase = void 0;\n// Don't change! We need maintain original determinism since the beginning\nexports.DeterministicSeedPhrase = \"TestRPC is awesome!\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Entry {\n    constructor(promise, queue, onSetteled) {\n        this.resolved = false;\n        this.value = promise;\n        this.queue = queue;\n        this.onSetteled = onSetteled;\n        const _onSetteled = () => this.onSetteled(this.queue, this);\n        promise.then(_onSetteled, _onSetteled);\n        this.promise = new Promise(resolve => {\n            this.resolve = resolve;\n        });\n    }\n}\nexports.default = Entry;\n//# sourceMappingURL=entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySimulationOverrides = exports.runCall = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst util_1 = require(\"@ethereumjs/util\");\n/**\n * Executes a message/transaction against the vm.\n * @param vm -\n * @param transaction -\n * @param gasLeft -\n * @returns\n */\nfunction runCall(vm, transaction, gasLeft) {\n    const caller = transaction.from;\n    const to = transaction.to ?? null;\n    const value = transaction.value == null ? 0n : transaction.value.toBigInt();\n    vm.evm.runCall({\n        origin: caller,\n        block: transaction.block,\n        gasPrice: transaction.gasPrice.toBigInt(),\n        caller,\n        gasLimit: gasLeft,\n        to,\n        value,\n        data: transaction.data && transaction.data.toBuffer()\n    });\n}\nexports.runCall = runCall;\nconst validateStorageOverride = (slot, value, fieldName) => {\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof slot === \"string\" && slot !== \"\" && slot.indexOf(\"0x\") === 0) {\n        // assume we're starting with 0x cause Quantity will verify if not\n        if (slot.length != 66) {\n            throw new Error(`${fieldName} override slot must be a 64 character hex string. Received ${slot.length - 2} character string.`);\n        }\n    }\n    if (value === null || value === undefined) {\n        throw new Error(`${fieldName} override data not valid. Received: ${value}`);\n    }\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof value === \"string\" && value !== \"\" && value.indexOf(\"0x\") === 0) {\n        if (value.length != 66) {\n            throw new Error(`${fieldName} override data must be a 64 character hex string. Received ${value.length - 2} character string.`);\n        }\n    }\n};\nasync function applySimulationOverrides(stateTrie, vm, overrides) {\n    const eei = vm.eei;\n    for (const address in overrides) {\n        if (!(0, utils_1.hasOwn)(overrides, address))\n            continue;\n        const { balance, nonce, code, state, stateDiff } = overrides[address];\n        const vmAddr = ethereum_address_1.Address.from(address);\n        // group together overrides that update the account\n        if (nonce != null || balance != null || code != null) {\n            const account = await eei.getAccount(vmAddr);\n            if (nonce != null) {\n                account.nonce = nonce === \"\" ? 0n : utils_1.Quantity.toBigInt(nonce);\n            }\n            if (balance != null) {\n                account.balance = balance === \"\" ? 0n : utils_1.Quantity.toBigInt(balance);\n            }\n            if (code != null) {\n                // geth treats empty strings as \"0x\" code for overrides\n                const codeBuffer = utils_1.Data.toBuffer(code === \"\" ? \"0x\" : code);\n                // The ethereumjs-vm StateManager does not allow to set empty code,\n                // therefore we will manually set the code hash when \"clearing\" the contract code\n                const codeHash = codeBuffer.length > 0 ? (0, utils_1.keccak)(codeBuffer) : util_1.KECCAK256_NULL;\n                account.codeHash = codeHash;\n                await stateTrie.database().put(codeHash, codeBuffer);\n            }\n            await eei.putAccount(vmAddr, account);\n        }\n        // group together overrides that update storage\n        if (state || stateDiff) {\n            if (state) {\n                // state and stateDiff fields are mutually exclusive\n                if (stateDiff) {\n                    throw new Error(\"both state and stateDiff overrides specified\");\n                }\n                // it's possible that the user fed an override with a valid address\n                // and slot, but not a value we can actually set in the storage. if\n                // so, we don't want to set the storage, and we also don't want to\n                // clear it out\n                let clearedState = false;\n                for (const slot in state) {\n                    if (!(0, utils_1.hasOwn)(state, slot))\n                        continue;\n                    const value = state[slot];\n                    validateStorageOverride(slot, value, \"State\");\n                    if (!clearedState) {\n                        // override.state clears all storage and sets just the specified slots\n                        await eei.clearContractStorage(vmAddr);\n                        clearedState = true;\n                    }\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n            else {\n                for (const slot in stateDiff) {\n                    // don't set storage for invalid values\n                    if (!(0, utils_1.hasOwn)(stateDiff, slot))\n                        continue;\n                    const value = stateDiff[slot];\n                    validateStorageOverride(slot, value, \"StateDiff\");\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n        }\n    }\n}\nexports.applySimulationOverrides = applySimulationOverrides;\n//# sourceMappingURL=run-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkStateManager = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nconst cache_1 = require(\"./cache\");\n/**\n * Interface for getting and setting data from an underlying\n * state trie.\n */\nclass ForkStateManager extends statemanager_1.DefaultStateManager {\n    /**\n     * Instantiate the StateManager interface.\n     */\n    constructor(opts) {\n        super(opts);\n        this._cache = new cache_1.ForkCache(opts.trie);\n        this.prefixCodeHashes = opts.prefixCodeHashes || false;\n    }\n    /**\n     * Copies the current instance of the `StateManager`\n     * at the last fully committed point, i.e. as if all current\n     * checkpoints were reverted.\n     */\n    copy() {\n        return new ForkStateManager({\n            trie: this._trie.copy(false),\n            prefixCodeHashes: this.prefixCodeHashes\n        });\n    }\n    /**\n     * Creates a storage trie from the primary storage trie\n     * for an account and saves this in the storage cache.\n     * @private\n     */\n    async _lookupStorageTrie(address) {\n        // from state trie\n        const account = await this.getAccount(address);\n        const storageTrie = this._trie.copy(true);\n        storageTrie.setContext(account.storageRoot, address.buf, storageTrie.blockNumber);\n        // we copy checkpoints over only for the metadata checkpoints, not the trie\n        // checkpoints.\n        storageTrie.database().checkpoints = [];\n        return storageTrie;\n    }\n    /**\n     * Gets the storage value associated with the provided `address` and `key`.\n     * This method returns the shortest representation of the stored value.\n     * @param address - Address of the account to get the storage for\n     * @param key - Key in the account's storage to get the value for. Must be 32\n     * bytes long.\n     * @returns {Promise<Buffer>} - The storage value for the account\n     * corresponding to the provided address at the provided key. If this does not\n     * exist an empty `Buffer` is returned.\n     */\n    async getContractStorage(address, key) {\n        const trie = (await this._getStorageTrie(address));\n        const value = await trie.get(key);\n        return (0, rlp_1.decode)(value);\n    }\n}\nexports.ForkStateManager = ForkStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkCache = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst cache_1 = require(\"@ethereumjs/statemanager/dist/cache\");\nclass ForkCache extends cache_1.Cache {\n    constructor(trie) {\n        /**\n         * Looks up address in underlying trie.\n         * @param address - Address of account\n         */\n        const lookupAccount = async (address) => {\n            const rlp = await trie.get(address.buf);\n            return rlp ? util_1.Account.fromRlpSerializedAccount(rlp) : new util_1.Account();\n        };\n        super({ getCb: lookupAccount, putCb: trie.put.bind(trie), deleteCb: trie.del.bind(trie) });\n    }\n}\nexports.ForkCache = ForkCache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warmPrecompiles = exports.activatePrecompiles = void 0;\nconst NUM_PRECOMPILES = 18;\n/**\n * An account with a balance of 1\n */\nconst SERIALIZED_PRECOMPILE = Uint8Array.from([\n    248, 68, 128, 1, 160, 86, 232, 31, 23, 27, 204, 85, 166, 255, 131, 69, 230,\n    146, 192, 248, 110, 91, 72, 224, 27, 153, 108, 173, 192, 1, 98, 47, 181, 227,\n    99, 180, 33, 160, 197, 210, 70, 1, 134, 247, 35, 60, 146, 126, 125, 178, 220,\n    199, 3, 192, 229, 0, 182, 83, 202, 130, 39, 59, 123, 250, 216, 4, 93, 133,\n    164, 112\n]);\nconst PRECOMPILED_ACCOUNT = {\n    serialize: () => SERIALIZED_PRECOMPILE\n};\nconst accountCache = [];\nconst makeAccount = (i) => {\n    if (accountCache[i])\n        return accountCache[i];\n    // 20 bytes, the first 19 are 0, the last byte is the address\n    const buf = Buffer.allocUnsafe(20).fill(0, 0, 19);\n    buf[19] = i;\n    return (accountCache[i] = { buf });\n};\n/**\n * Puts the precompile accounts into the state tree\n * @param eei -\n */\nconst activatePrecompiles = async (eei) => {\n    await eei.checkpoint();\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.putAccount(account, PRECOMPILED_ACCOUNT);\n    }\n    await eei.commit();\n};\nexports.activatePrecompiles = activatePrecompiles;\n/**\n * Puts the precompile accounts into the warmed addresses\n * @param eei -\n */\nconst warmPrecompiles = async (eei) => {\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.addWarmedAddress(account.buf);\n    }\n};\nexports.warmPrecompiles = warmPrecompiles;\n//# sourceMappingURL=precompiles.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LimitCounter = void 0;\n/**\n * @param timestamp -\n * @returns the milliseconds that have elapsed since `timestamp`\n */\nfunction timeSince(timestamp) {\n    return Date.now() - timestamp;\n}\nclass LimitCounter {\n    constructor(windowLength) {\n        this.counters = new Map();\n        this.windowLength = windowLength;\n    }\n    evict() {\n        const d = this.windowLength * 3;\n        if (timeSince(this.lastEvict) < d) {\n            return;\n        }\n        this.lastEvict = Date.now();\n        const counters = this.counters;\n        counters.forEach((v, k) => {\n            if (timeSince(v.updatedAt) >= d) {\n                counters.delete(k);\n            }\n        });\n    }\n    increment(currentWindow) {\n        this.evict();\n        let v = this.counters.get(currentWindow);\n        if (v == null) {\n            this.counters.set(currentWindow, { value: 1, updatedAt: Date.now() });\n        }\n        else {\n            v.value += 1;\n            v.updatedAt = Date.now();\n        }\n    }\n    get(currentWindow, previousWindow) {\n        let curr = this.counters.get(currentWindow);\n        if (curr == null) {\n            curr = { value: 0, updatedAt: Date.now() };\n        }\n        let prev = this.counters.get(previousWindow);\n        if (prev == null) {\n            prev = { value: 0, updatedAt: Date.now() };\n        }\n        return [curr.value, prev.value];\n    }\n}\nexports.LimitCounter = LimitCounter;\n//# sourceMappingURL=limit-counter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderHandler = void 0;\nconst base_handler_1 = require(\"./base-handler\");\nclass ProviderHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        const provider = options.fork.provider;\n        if (typeof provider.request === \"function\") {\n            this._request = async (method, params) => {\n                try {\n                    const result = await provider.request({ method, params });\n                    const response = { result };\n                    return { response, raw: JSON.stringify(response) };\n                }\n                catch (error) {\n                    // if this doesn't appear to be a JSON-RPC \"coded\" error it might be\n                    // a network level error, or something else we don't know how to\n                    // handle. Throw so stack traces are preserved.\n                    if (typeof error.code !== \"number\")\n                        throw error;\n                    return {\n                        response: { error },\n                        raw: null\n                    };\n                }\n            };\n        }\n        else if (typeof provider.send === \"function\") {\n            this._request = async (method, params) => {\n                return await new Promise((resolve, reject) => {\n                    const request = {\n                        id: this.id++,\n                        jsonrpc: \"2.0\",\n                        method,\n                        params\n                    };\n                    provider.send(request, (err, response) => {\n                        if (err)\n                            return void reject(err);\n                        resolve({\n                            response,\n                            raw: JSON.stringify(response)\n                        });\n                    });\n                });\n            };\n        }\n        else {\n            throw new Error(\"Forking `provider` must be EIP-1193 compatible\");\n        }\n    }\n    async request(method, params, options = { disableCache: false }) {\n        // format params via JSON stringification because the params might\n        // be Quantity or Data, which aren't valid as `params` themselves,\n        // but when JSON stringified they are\n        const strParams = JSON.stringify(params);\n        return await this.queueRequest(method, params, `${method}:${strParams}`, () => this._request(method, JSON.parse(strParams)), options);\n    }\n}\nexports.ProviderHandler = ProviderHandler;\n//# sourceMappingURL=provider-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ancestry = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nclass Ancestry {\n    constructor(db, parent) {\n        /**\n         * Prevents fetching the same key from the database simultaneously.\n         */\n        this.cacheLock = new Map();\n        this.db = db;\n        if (parent == null) {\n            this.next = null;\n            this.knownAncestors = new Set();\n        }\n        else {\n            this.next = parent.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n                ? null\n                : parent.closestKnownAncestor;\n            this.knownAncestors = new Set([parent.hash.toString(\"hex\")]);\n        }\n    }\n    async loadNextAncestor(next) {\n        const k = next.toString(\"hex\");\n        if (this.cacheLock.has(k)) {\n            throw new Error(\"couldn't load next ancestor as it is locked\");\n        }\n        let resolver;\n        this.cacheLock.set(k, new Promise(resolve => {\n            resolver = resolve;\n        }));\n        const value = await this.db.get(next);\n        const node = tree_1.Tree.deserialize(next, value);\n        this.next = node.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n            ? null\n            : node.closestKnownAncestor;\n        this.knownAncestors.add(node.hash.toString(\"hex\"));\n        this.cacheLock.delete(k);\n        resolver();\n    }\n    async has(key) {\n        const strKey = key.toString(\"hex\");\n        if (this.knownAncestors.has(strKey)) {\n            return true;\n        }\n        else if (this.next) {\n            const cacheLock = this.cacheLock.get(this.next.toString(\"hex\"));\n            if (cacheLock) {\n                await cacheLock;\n                return this.has(key);\n            }\n            await this.loadNextAncestor(this.next);\n            return this.has(key);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Ancestry = Ancestry;\n//# sourceMappingURL=ancestry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockByNumber = exports.findClosestDescendants = exports.findClosestAncestor = exports.findRelated = exports.resolveTargetAndClosestAncestor = exports.setDbVersion = exports.getBlockNumberFromParams = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nfunction getBlockNumberFromParams(method, params) {\n    // get the request's block number\n    switch (method) {\n        case \"eth_getBlockByNumber\":\n            return params[0];\n        case \"eth_getTransactionCount\":\n        case \"eth_getCode\":\n        case \"eth_getBalance\":\n            return params[1];\n        case \"eth_getStorageAt\":\n            return params[2];\n        default:\n            return null;\n    }\n}\nexports.getBlockNumberFromParams = getBlockNumberFromParams;\nconst VERSION_KEY = Buffer.from(\"version\", \"utf-8\");\nasync function setDbVersion(db, version) {\n    // set the version if the DB was just created, or error if we already have\n    // a version, but it isn't what we expected\n    try {\n        const recordedVersion = await db.get(VERSION_KEY);\n        if (!version.equals(recordedVersion)) {\n            // in the future this is where database migrations would go\n            throw new Error(`Persistent cache version \"${version.toString()}\"\" is not understood.`);\n        }\n    }\n    catch (e) {\n        if (!e.notFound)\n            throw e;\n        // if we didn't have a `version` key we need to set one\n        await db.put(VERSION_KEY, version);\n    }\n}\nexports.setDbVersion = setDbVersion;\nasync function resolveTargetAndClosestAncestor(db, request, targetHeight, targetHash) {\n    let targetBlock;\n    let closestAncestor;\n    let previousClosestAncestor;\n    try {\n        const key = tree_1.Tree.encodeKey(targetHeight, targetHash);\n        targetBlock = tree_1.Tree.deserialize(key, await db.get(key));\n        if (targetBlock.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)) {\n            // we are the genesis/earliest block\n            closestAncestor = null;\n            previousClosestAncestor = null;\n        }\n        else {\n            previousClosestAncestor = tree_1.Tree.deserialize(targetBlock.closestKnownAncestor, await db.get(targetBlock.closestKnownAncestor));\n            // check if we are still the closest known ancestor\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, previousClosestAncestor.key)) || previousClosestAncestor;\n        }\n    }\n    catch (e) {\n        // something bad happened (I/O failure?), bail\n        if (!e.notFound)\n            throw e;\n        previousClosestAncestor = null;\n        // we couldn't find our target block in the database so we need to figure\n        // out it's relationships via the blockchain.\n        // In order to avoid requesting the \"earliest\" block unnecessarily, we\n        // assume the \"earliest\" block can't be before block 0 (which seems like a\n        // reasonable assumption to me!).\n        // If our target is block `0` then we can't have a closest ancestor since\n        // we are the first block\n        if (targetHeight.toBigInt() === 0n) {\n            closestAncestor = null;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash);\n        }\n        else {\n            const earliestBlock = await getBlockByNumber(request, ethereum_utils_1.Tag.earliest);\n            if (!earliestBlock)\n                throw new Error('Could not find \"earliest\" block.');\n            const { hash: earliestHash, number: earliestNumber } = earliestBlock;\n            const hash = utils_1.Data.from(earliestHash, 32);\n            const earliest = new tree_1.Tree(utils_1.Quantity.from(earliestNumber), hash);\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, earliest.key)) ||\n                    earliest;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash, closestAncestor.key);\n        }\n    }\n    return {\n        targetBlock,\n        closestAncestor,\n        previousClosestAncestor\n    };\n}\nexports.resolveTargetAndClosestAncestor = resolveTargetAndClosestAncestor;\nasync function* findRelated(db, request, options) {\n    const readStream = db.createReadStream({\n        keys: true,\n        values: true,\n        ...options\n    });\n    for await (const pair of readStream) {\n        const { key, value } = pair;\n        const node = tree_1.Tree.deserialize(key, value);\n        const { height: candidateHeight } = node.decodeKey();\n        const block = await getBlockByNumber(request, candidateHeight);\n        // if the chain has a block at this height, and the hash of the\n        // block is the same as the one in the db we've found our closest\n        // ancestor!\n        if (block != null && block.hash === utils_1.Data.toString(node.hash)) {\n            yield node;\n        }\n    }\n}\nexports.findRelated = findRelated;\n/**\n *\n * @param height - Search only before this block height (exclusive)\n * @param upTo - Search up to this key (inclusive)\n * @returns the closest known ancestor, or `upTo` if we know of no ancestors\n */\nasync function findClosestAncestor(db, request, height, upTo) {\n    const generator = findRelated(db, request, {\n        gte: upTo,\n        lt: tree_1.Tree.encodeKey(height, utils_1.Data.Empty),\n        reverse: true\n    });\n    const first = await generator.next();\n    await generator.return();\n    return first.value;\n}\nexports.findClosestAncestor = findClosestAncestor;\n/**\n *\n * @param height - Search only after this block height (exclusive)\n * @returns the closest known descendants, or null\n */\nasync function* findClosestDescendants(db, request, height) {\n    const generator = findRelated(db, request, {\n        gte: tree_1.Tree.encodeKey(utils_1.Quantity.from(height.toBigInt() + 1n), utils_1.Data.Empty),\n        reverse: false\n    });\n    for await (const node of generator) {\n        yield node;\n    }\n}\nexports.findClosestDescendants = findClosestDescendants;\nasync function getBlockByNumber(request, blockNumber) {\n    return await request(\"eth_getBlockByNumber\", [blockNumber.toString(), false]);\n}\nexports.getBlockByNumber = getBlockByNumber;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferify = void 0;\nconst PARTS = Buffer.from('[]{},\"\":null');\nconst SQUARE_BRACKET_PAIR = PARTS.slice(0, 2);\nconst SQUARE_BRACKET_OPEN = SQUARE_BRACKET_PAIR.slice(0, 1);\nconst SQUARE_BRACKET_CLOSE = SQUARE_BRACKET_PAIR.slice(1, 2);\nconst CURLY_BRACKET_PAIR = PARTS.slice(2, 4);\nconst CURLY_BRACKET_OPEN = CURLY_BRACKET_PAIR.slice(0, 1);\nconst CURLY_BRACKET_CLOSE = CURLY_BRACKET_PAIR.slice(1, 2);\nconst COMMA_QUOTE = PARTS.slice(4, 6);\nconst COMMA = COMMA_QUOTE.slice(0, 1);\nconst QUOTE_PAIR = PARTS.slice(5, 7);\nconst QUOTE_COLON = PARTS.slice(6, 8);\nconst COLON = QUOTE_COLON.slice(1, 2);\nconst NULL = PARTS.slice(8, 12);\nconst _EMPTY = PARTS.slice(0, 0);\nconst toStr = Object.prototype.toString;\nconst isObj = (val) => toStr.call(val) === \"[object Object]\";\nfunction numberToBuffer(value) {\n    const str = value.toString();\n    const { length } = str;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length);\n        buf.utf8Write(str, 0, length);\n        return buf;\n    }\n    else {\n        return _EMPTY;\n    }\n}\nfunction stringToQuotedBuffer(value) {\n    const { length } = value;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length + 2); // + 2 for the quotation marks\n        buf[0] = 34; // DOUBLE QUOTE\n        buf[length + 1] = 34; // DOUBLE QUOTE\n        buf.utf8Write(value, 1, length);\n        return buf;\n    }\n    else {\n        return QUOTE_PAIR;\n    }\n}\nfunction* arrayToBuffer(value) {\n    const { length } = value;\n    if (length === 0) {\n        yield SQUARE_BRACKET_PAIR;\n        return;\n    }\n    else {\n        yield SQUARE_BRACKET_OPEN;\n        // sends the first array value:\n        for (const chunkified of bufferify(value[0], \"0\")) {\n            // if the value ends up being nothing (undefined), return null\n            yield chunkified.length === 0 ? NULL : chunkified;\n        }\n        // sends the rest of the array values:\n        for (let i = 1; i < length; i++) {\n            yield COMMA;\n            for (const chunkified of bufferify(value[i], i.toString())) {\n                // if the value ends up being nothing (undefined), return null\n                yield chunkified.length === 0 ? NULL : chunkified;\n            }\n        }\n        yield SQUARE_BRACKET_CLOSE;\n        return;\n    }\n}\nfunction bufferToQuotedBuffer(value) {\n    const { length } = value;\n    const buf = Buffer.allocUnsafe(length + 2);\n    buf[0] = 34;\n    value.copy(buf, 1, 0, length);\n    buf[length + 1] = 34;\n    return buf;\n}\nfunction* objectToBuffer(obj, nameOrIndex) {\n    if (\"toJSON\" in obj) {\n        yield* bufferify(obj.toJSON(nameOrIndex), nameOrIndex);\n        return;\n    }\n    let yieldedOpen = false;\n    for (const key in obj) {\n        const value = obj[key];\n        let yieldPrefix = true;\n        for (const chunkified of bufferify(value, key)) {\n            // if the chunkified value ends up being nothing (undefined) ignore\n            // the property\n            const chunkLength = chunkified.length;\n            if (chunkLength === 0)\n                continue;\n            // only yield the prefix once per `key`\n            if (yieldPrefix) {\n                yieldPrefix = false;\n                const quotedKey = stringToQuotedBuffer(key);\n                if (!yieldedOpen) {\n                    yield Buffer.concat([\n                        CURLY_BRACKET_OPEN,\n                        quotedKey,\n                        COLON,\n                        chunkified\n                    ]);\n                    yieldedOpen = true;\n                }\n                else {\n                    yield Buffer.concat([COMMA, quotedKey, COLON, chunkified]);\n                }\n            }\n            else {\n                yield chunkified;\n            }\n        }\n    }\n    // if we yielded the\n    if (yieldedOpen) {\n        yield CURLY_BRACKET_CLOSE;\n        return;\n    }\n    else {\n        yield CURLY_BRACKET_PAIR;\n        return;\n    }\n}\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) Buffer\n * (utf-8 encoded).\n *\n * This is a hack. It:\n *  * Does not support circular references.\n *  * Does not support double quotes within Object keys; only alphanumerics are\n *    considered safe to use\n *  * Probably doesn't support non-ASCII characters\n *  * Is only tested on transaction traces\n *\n * Only useful if the `JSON.stringify`ed version would create a string larger\n * than what the JavaScript engine can handle.\n *\n * What is the maximum string size in Node/V8? It depends on the version! Some\n * versions are 256MB, some are ~1GB, and others are ~0.5GB.\n * See: https://stackoverflow.com/a/47781288/160173\n *\n * CAUTION: This method is approx 3 - 20 times slower than using:\n * `Buffer.from(JSON.stringify(value), \"utf-8\")`\n *\n * @param value - A JavaScript value, usually an object or array, to be converted.\n * @param nameOrIndex - JSON.stringify calls an object's toJSON method, and this\n * property is used by internal recursive calls to bufferify.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n */\nfunction* bufferify(value, nameOrIndex) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"boolean\") {\n        yield numberToBuffer(value);\n    }\n    else if (type === \"string\") {\n        yield stringToQuotedBuffer(value);\n    }\n    else if (Buffer.isBuffer(value)) {\n        yield bufferToQuotedBuffer(value);\n    }\n    else if (Array.isArray(value)) {\n        yield* arrayToBuffer(value);\n    }\n    else if (isObj(value)) {\n        yield* objectToBuffer(value, nameOrIndex);\n    }\n    else if (value === null) {\n        yield NULL;\n    }\n    else if (type === \"undefined\") {\n        // nothing is returned for undefined\n        yield _EMPTY;\n    }\n    else if (\"toJSON\" in value && typeof value.toJSON === \"function\") {\n        yield* bufferify(value.toJSON(), nameOrIndex);\n    }\n    else {\n        throw new Error(\"unsupported value in bufferify\");\n    }\n}\nexports.bufferify = bufferify;\n//# sourceMappingURL=bufferify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=api-types.js.map","\"use strict\";\n/*!\n * @ganache/filecoin-options\n *\n * @author Tim Coulter\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinDefaults = exports.FilecoinOptionsConfig = void 0;\nconst src_1 = require(\"./src\");\nvar src_2 = require(\"./src\");\nObject.defineProperty(exports, \"FilecoinOptionsConfig\", { enumerable: true, get: function () { return src_2.FilecoinOptionsConfig; } });\nObject.defineProperty(exports, \"FilecoinDefaults\", { enumerable: true, get: function () { return src_2.FilecoinDefaults; } });\nexports.default = {\n    FilecoinDefaults: src_1.FilecoinDefaults,\n    FilecoinOptionsConfig: src_1.FilecoinOptionsConfig\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.ChainOptions = {\n    ipfsHost: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator host name/address to listen on.\",\n        default: () => \"127.0.0.1\",\n        cliType: \"string\"\n    },\n    ipfsPort: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator port.\",\n        default: () => 5001,\n        cliType: \"number\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        cliAliases: [\"db\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst logger = { log: console.log };\nexports.LoggingOptions = {\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: () => logger\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.MinerOptions = {\n    blockTime: {\n        normalize: value => Math.max(0, value),\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A `blockTime` of `0` or a negative number enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        cliType: \"number\"\n    },\n    mine: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Enable mining. Set to `false` to pause the miner.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleColors = void 0;\nexports.TruffleColors = {\n    /**\n     * Ganache orange\n     */\n    porsche: \"#e4a663\",\n    /**\n     * Truffle blue/turquoise\n     */\n    turquoise: \"#3fe0c5\",\n    /**\n     * Infura orange\n     */\n    infura: \"#ff6b4a\"\n};\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 774;\nmodule.exports = webpackEmptyContext;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptions = void 0;\nconst flavors_1 = require(\"@ganache/flavors\");\nconst buffer_1 = require(\"buffer\");\nconst normalize = (rawInput) => rawInput;\nexports.ServerOptions = {\n    ws: {\n        normalize,\n        cliDescription: \"Enable a websocket server.\",\n        default: () => true,\n        legacyName: \"ws\",\n        cliType: \"boolean\"\n    },\n    wsBinary: {\n        normalize,\n        cliDescription: \"Whether or not websockets should response with binary data (ArrayBuffers) or strings.\",\n        default: () => \"auto\",\n        cliChoices: [\"true\", \"false\", \"auto\"]\n    },\n    rpcEndpoint: {\n        normalize,\n        cliDescription: \"Defines the endpoint route the HTTP and WebSocket servers will listen on.\",\n        default: (config, flavor) => {\n            switch (flavor) {\n                case flavors_1.FilecoinFlavorName:\n                    return \"/rpc/v0\";\n                case flavors_1.DefaultFlavor:\n                default:\n                    return \"/\";\n            }\n        },\n        defaultDescription: '\"/\" (Ethereum), \"/rpc/v0\" (Filecoin)'\n    },\n    chunkSize: {\n        normalize: number => {\n            if (number < 0 || number > buffer_1.kMaxLength) {\n                throw new Error(`--server.chunkSize must be >= 0 and <= ${buffer_1.kMaxLength}`);\n            }\n            return number;\n        },\n        cliDescription: \"For memory and performance reasons ganache may respond with chunked transfer-encoding over HTTP and fragmented send over WebSockets. This option allows you to control the approximate size of each chunk.\",\n        default: () => 1024 * 1024,\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=server-options.js.map","var map = {\n\t\"./uws_darwin_arm64_108.node\": 432,\n\t\"./uws_darwin_arm64_83.node\": 433,\n\t\"./uws_darwin_arm64_93.node\": 434,\n\t\"./uws_darwin_x64_108.node\": 435,\n\t\"./uws_darwin_x64_83.node\": 436,\n\t\"./uws_darwin_x64_93.node\": 437,\n\t\"./uws_linux_arm64_108.node\": 438,\n\t\"./uws_linux_arm64_83.node\": 439,\n\t\"./uws_linux_arm64_93.node\": 440,\n\t\"./uws_linux_x64_108.node\": 441,\n\t\"./uws_linux_x64_83.node\": 442,\n\t\"./uws_linux_x64_93.node\": 443,\n\t\"./uws_win32_x64_108.node\": 444,\n\t\"./uws_win32_x64_83.node\": 445,\n\t\"./uws_win32_x64_93.node\": 446\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 781;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketCloseCodes;\n(function (WebSocketCloseCodes) {\n    /**\n     * Normal closure; the connection successfully completed whatever purpose for\n     * which it was created.\n     */\n    WebSocketCloseCodes[WebSocketCloseCodes[\"CLOSE_NORMAL\"] = 1000] = \"CLOSE_NORMAL\";\n    /**\n     * Indicates that an endpoint is \"going away\", such as a server going down or\n     * a browser having navigated away from a page.\n     */\n    // CLOSE_GOING_AWAY = 1001\n    // CLOSE_PROTOCOL_ERROR = 1002,\n    // CLOSE_ABNORMAL = 1006\n})(WebSocketCloseCodes || (WebSocketCloseCodes = {}));\nexports.default = WebSocketCloseCodes;\n//# sourceMappingURL=websocket-close-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"PLAIN\"] = \"text/plain\";\n    ContentTypes[\"JSON\"] = \"application/json\";\n})(ContentTypes || (ContentTypes = {}));\nexports.default = ContentTypes;\n//# sourceMappingURL=content-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * HTTP/1.1 Response Status-Codes, including the _required_ space character.\n *\n * e.g., `\"200 \"` or `\"404 \"`\n *\n * RFC Grammar:\n *\n * ```ebnf\n * Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF\n * ```\n *\n * The Status-Codes defined here fullfill the `Status-Code SP` part of the above\n * grammar.\n *\n * See https://datatracker.ietf.org/doc/html/rfc2616#section-6.1 for details.\n */\nvar HttpResponseCodes;\n(function (HttpResponseCodes) {\n    HttpResponseCodes[\"OK\"] = \"200 \";\n    HttpResponseCodes[\"NO_CONTENT\"] = \"204 \";\n    HttpResponseCodes[\"BAD_REQUEST\"] = \"400 \";\n    HttpResponseCodes[\"NOT_FOUND\"] = \"404 \";\n    HttpResponseCodes[\"METHOD_NOT_ALLOWED\"] = \"405 \";\n    HttpResponseCodes[\"IM_A_TEAPOT\"] = \"418 \";\n})(HttpResponseCodes || (HttpResponseCodes = {}));\nexports.default = HttpResponseCodes;\n//# sourceMappingURL=http-response-codes.js.map"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","__importDefault","mod","value","PromiEvent","JsonRpcErrorCode","makeResponse","makeRequest","makeError","JsonRpcType","json_rpc_1","jsonrpc_1","promievent_1","default","Address","util_1","utils_1","constructor","super","static","Data","toBuffer","ByteLength","from","toString","toJSON","decode","encodeLength","encode","digest","encodeRange","input","Array","isArray","length","output","i","l","enc","push","buf","Buffer","concat","encodedLength","allocUnsafe","encLength","len","offset","hexLength","uintToBuffer","lLength","firstByte","safeSlice","start","end","Error","slice","decodeLength","v","parseHexByte","hexByte","byte","Number","parseInt","isNaN","bytesToHex","uint8a","hex","cachedHexes","_decode","llength","data","innerRemainder","d","decoded","remainder","totalLength","items","count","encoded","ranges","lengthEncodedLength","copy","range","j","entry","size","BUFFER_EMPTY","_v","padStart","normalize","rawInput","debug","GetConnector","DefaultOptionsByName","DefaultFlavor","FilecoinFlavorName","EthereumFlavorName","ethereum_1","ethereum_options_1","filecoin_options_1","colors_1","chalk_1","NEED_HELP","COMMUNITY_LINK","flavor","providerOptions","executor","Connector","f","eval","e","message","includes","console","warn","TruffleColors","porsche","turquoise","process","exit","EthereumDefaults","FilecoinDefaults","KNOWN_CHAINIDS","WEI","BUFFER_8_ZERO","BUFFER_32_ZERO","BUFFER_ZERO","ACCOUNT_ZERO","BUFFER_256_ZERO","fill","Set","RuntimeTransaction","hasPartialSignature","toValidLengthAddress","ethereum_utils_1","rlp_1","base_transaction_1","transaction_receipt_1","ethereum_address_1","address","fieldName","buffer","byteLength","ONE_BUFFER","Quantity","One","BaseTransaction","common","extra","finalizer","locked","validateAndSetSignature","r","s","nonce","raw","toEthRawTransaction","serialized","hash","encodedData","encodedSignature","computeIntrinsics","chainId","userFrom","equals","finalized","Promise","resolve","args","nextTick","gas","gasLimit","to","dataVal","serializeForDb","blockHash","blockNumber","transactionIndex","txAndExtraData","effectiveGasPrice","fillFromResult","result","cumulativeGasUsed","vmResult","execResult","status","exceptionError","execException","RuntimeError","RETURN_TYPES","TRANSACTION_HASH","receipt","InternalTransactionReceipt","fromValues","bloom","bitvector","logs","totalGasSpent","createdAddress","type","serialize","getReceipt","getLogs","once","_event","finalize","error","_Manager_Type","_Manager_options","__classPrivateFieldSet","receiver","state","kind","TypeError","has","set","__classPrivateFieldGet","Manager","base","options","getRaw","key","catch","async","put","del","WeakMap","SECP256K1_MAX_PRIVATE_KEY_DIV_2","SECP256K1_N","path_1","secp256k1","nodeRequire","path","dir","dirname","nodeGypBuild","Secp256k1","computeIntrinsicsFeeMarketTx","computeIntrinsicsAccessListTx","computeIntrinsicsLegacyTx","computeFromAddress","publicKeyConvert","ecdsaRecover","isValidSigRecovery","secp256k1_1","copyOrFill","source","target","targetStart","numZeroes","endZeroes","sourceOffset","recovery","_ecdsaRecover","sharedBuffer","rBuf","sBuf","recid","keccak","signature","partialRlp","eip155V","extras","bigIntToBuffer","epilogue","senderPubKey","publicKey","SHARED_BUFFER","toBigInt","typeBuf","toNumber","__setModuleDefault","__importStar","Tree","lexico","rlp","height","closestKnownAncestor","closestKnownDescendants","encodeKey","decodeKey","parent","children","tree","__experimental_info","provider","server","_DefaultServerOptions","ServerStatus","Server","connector_loader_1","server_1","server_2","Ganache","initialize","connector","version","fork","knownChainIds","BaseHandler","rate_limiter_1","lru_cache_1","abortSignal","id","requestCache","Map","fireForget","forkingOptions","requestsPerSecond","url","userAgent","origin","limiter","WINDOW_SECONDS","valueCache","max","headers","password","username","isInfura","host","endsWith","setAuthHeaders","setUserHeaders","setCache","cache","persistentCache","jwt","authorization","permitMultiAuth","userHeaders","name","toLowerCase","currentScheme","split","incomingScheme","authParams","getFromMemCache","cachedRequest","cachedValue","JSON","parse","method","params","notFound","send","disableCache","memCached","diskCached","getFromSlowCache","promise","handle","then","response","aborted","reject","AbortError","hasOwn","prom","_","add","finally","delete","CodedError","code","stringify","all","keys","close","JSONRPC_PREFIX","_Wallet_randomRng","_Wallet_randomBytes","_Wallet_initializeAccounts","_Wallet_intializeAccountFromKey","_Wallet_initializeAccountWithoutKey","_Wallet_initializeAccount","_Wallet_lockAccount","hdkey_1","bip39_1","seedrandom_1","crypto_1","fs_1","TWELVE_255s","SCRYPT_PARAMS","dklen","n","CIPHER","MAX_ACCOUNTS","scrypt","err","derivedKey","uncompressedPublicKeyToAddress","uncompressedPublicKey","asUUID","uuid","Wallet","opts","logging","knownAccounts","keyFiles","unlockedAccounts","lockTimers","rand","makeAccountAtIndex","createAccountGeneratorFromSeedAndPath","mnemonicToSeedSync","mnemonic","hdPath","balanceParts","defaultBalance","significand","BigInt","fractionalStr","fractional","magnitude","defaultBalanceInWei","etherInWei","accounts","givenAccounts","accountsLength","givenAccount","secretKey","account","balance","acct","numberOfAccounts","totalAccounts","privateKey","createAccountFromPrivateKey","createAccount","passphrase","lock","lockAccounts","addToKeyFileSync","strAddress","lowerAddress","logger","log","alea","initialAccounts","values","addresses","givenUnlockedAccounts","ul","arg","addressOrIndex","indexOf","createFakePrivateKey","index","isSafeInteger","accountKeysPath","fileData","private_keys","forEach","writeFileSync","random","salt","iv","N","finishEncryption","encryptSync","scryptSync","cipher","createCipheriv","ciphertext","update","final","mac","crypto","cipherparams","kdf","kdfParams","keyfile","crypt","localMac","createDecipheriv","encrypted","encrypt","keyFile","decrypt","Account","privateToAddress","createRandomAccount","seed","createAccountFromSeed","Zero","duration","getFromKeyFile","existingTimer","clearTimeout","durationMs","timeout","setTimeout","unref","addToKeyFile","splice","fakePrivateKey","addressBuf","first12","compare","lockAccount","Handlers","bytes","bool","string","uint256","int256","fixedBytes","WORD_SIZE","OR_WITH_TWOS_COMPLEMENT","getDynamicDataMarkers","memory","startUint32MemoryPosition","readUInt32BE","handleBytes","twosComplementBuffer","subarray","twosComplementBigInt","bufferToBigInt","_Miner_currentlyExecutingPrice","_Miner_origins","_Miner_pending","_Miner_isBusy","_Miner_paused","_Miner_resumer","_Miner_currentBlockBaseFeePerGas","_Miner_resolver","_Miner_emitStepEvent","_Miner_executables","_Miner_options","_Miner_vm","_Miner_createBlock","_Miner_priced","_Miner_mine","_Miner_mineTxs","_Miner_runTx","_Miner_removeBestAndOrigin","_Miner_reset","_Miner_setPricedHeap","_Miner_updatePricedHeap","Capacity","trie_1","emittery_1","replace_from_heap_1","ethereum_transaction_1","provider_events_1","console_log_1","updateBloom","blockBloom","sortByPrice","a","b","refresher","item","context","updateEffectiveGasPrice","Miner","executables","vm","createBlock","Heap","block","maxTransactions","FillBlock","onlyOneBlock","lastBlock","transactions","nextBlock","runtimeBlock","pending","inProgress","keepMining","priced","storageKeys","blockTransactions","transactionsTrie","Trie","receiptTrie","Empty","stateManager","checkpoint","commit","finalizedBlockData","root","_trie","extraData","emit","numTransactions","blockGasLeft","blockGasLimit","blockGasUsed","promises","TraceData","TraceDataFactory","stepListener","event","opcode","stack","hashedKey","best","evm","events","on","peek","calculateIntrinsicGas","header","number","gasUsed","txKey","pendingOrigin","removeBest","Params","TRANSACTION_GAS","revert","removeListener","refresh","tx","maybeGetLogs","makeStepEvent","runTx","toVmTransaction","errorMessage","runState","programCounter","returnValue","clear","pricedArray","array","origins","mapping","next","price","previousBlock","newBlock","baseFeePerGas","init","resume","toggleStepEvent","enable","_BlockManager_blockchain","_BlockManager_common","_BlockManager_blockIndexes","manager_1","ethereum_block_1","LATEST_INDEX_KEY","EMPTY_BUFFER","BlockManager","blockchain","blockIndexes","Block","fromFallback","tagOrBlockNumber","fallback","isValidForkBlockNumber","json","request","getCommonForBlockNumber","rawFromJSON","bm","updateTaggedBlocks","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","timestamp","mixHash","totalDifficulty","txs","extraTxs","blockExtra","txExtra","typedTx","TransactionFactory","fromRpc","getBlockByTag","tag","latest","earliest","getEffectiveNumber","Tag","getNumberFromHash","numBuf","secondaryKey","latestBlockNumber","createValueStream","limit","_InternalTransactionReceipt_init","STATUSES","contractAddress","txType","transaction","blockLog","BlockLogs","transactionHash","append","isActivatedEIP","TrieDB","subleveldown_1","ENCODING_OPTS","keyEncoding","valueEncoding","db","_db","val","opStack","batch","sublevel","prefix","createReadStream","MAX_UINT32","num","uintWideToBuf","hi","hiLsb","six","five","lo","lsb","two","one","uint32ToBuf","second","third","BaseJsonRpcType","input_parsers_1","inspect","Symbol","for","bufferValue","isBuffer","parseAndValidateStringInput","parseAndValidateNumberInput","parseAndValidateBigIntInput","_depth","_options","valueOf","isNull","ethereumjs_abi_1","REVERT_REASON","captureStackTraceExtended","bind","codedError","captureStackTrace","nonEnumerableProperty","reason","rawDecode","INSUFFICIENT_FUNDS","TRANSACTION_LOCKED","VM_EXCEPTIONS","VM_EXCEPTION","GAS_LIMIT","INTRINSIC_GAS_TOO_LOW","REPLACED","UNDERPRICED","NONCE_TOO_LOW","INVALID_SENDER","params_1","MAX_UINT64","hasToAddress","hardfork","TRANSACTION_CREATION","dataLength","TRANSACTION_DATA_NON_ZERO_GAS","TRANSACTION_DATA_ZERO_GAS","nonZeroBytes","zeroBytes","setExtra","ACCESS_LIST_ADDRESS_GAS","ACCESS_LIST_STORAGE_KEY_GAS","parts","pieces","part","lengthBuffer","lengthLength","_Blockchain_state","_Blockchain_miner","_Blockchain_blockBeingSavedPromise","_Blockchain_timer","_Blockchain_emitStepEvent","_Blockchain_database","_Blockchain_options","_Blockchain_instamine","_Blockchain_saveNewBlock","_Blockchain_emitNewBlock","_Blockchain_getTransactionLogOutput","_Blockchain_handleNewBlockData","_Blockchain_readyNextBlock","_Blockchain_isPaused","_Blockchain_commitAccounts","_Blockchain_initializeGenesisBlock","_Blockchain_timeAdjustment","_Blockchain_adjustedTime","_Blockchain_deleteBlockData","_Blockchain_snapshots","_Blockchain_traceTransaction","_Blockchain_prepareNextBlock","Status","os_1","miner_1","database_1","common_1","vm_1","evm_1","account_manager_1","block_manager_1","blocklog_manager_1","transaction_manager_1","run_call_1","state_manager_1","statemanager_1","trie_2","precompiles_1","transaction_receipt_manager_1","mcl_wasm_1","mclInitPromise","BLS12_381","setMapToMode","IRTF","verifyOrderG1","verifyOrderG2","makeTrie","trieDB","ForkTrie","GanacheTrie","Blockchain","coinbase","starting","blocks","blockHeader","blockNumberQ","blockLogs","timestampStr","Date","logOutput","encodedReceipt","transactionReceipts","putBlock","updateLatestIndex","join","EOL","blockInfo","instamine","setImmediate","str","blockData","saveBlockProm","previousHeader","previousNumber","minerOptions","RuntimeBlock","isPostMerge","getMixHash","calcNextBaseFee","isStarted","started","mine","timestampIncrement","setTimeDiff","paused","createVmFromStateTrie","stateTrie","allowUnlimitedContractSize","activatePrecompile","getBlock","ForkStateManager","trie","prefixCodeHashes","DefaultStateManager","eei","EEI","EVM","VM","activatePrecompiles","_isInitialized","map","fallbackBlock","putAccount","INITIAL_BASE_FEE_PER_GAS","genesis","KECCAK256_RLP","rawBlockNumber","precedingTimestamp","timeAdjustment","Math","floor","now","blocksToDelete","newLatestBlockNumber","revertMetaData","getTransactions","txHash","blockNum","snaps","unsubscribeFromBlocks","currentDepth","storageStack","chain","storage","structLogs","transactionEventContext","gasLeft","gasUsedPreviousStep","disableMemory","disableStack","stackItem","structLog","depth","gasCost","op","pc","disableStorage","eventDepth","pop","TraceStorageMap","getContractStorage","_cache","flush","database","rawKey","targetBlock","parentBlock","uncleHeaders","blockTime","networkId","createCommon","Common","custom","comment","defaultHardfork","baseChain","gteHardfork","startTime","time","getTime","firstBlockTime","txPool","transactionPool","minerOpts","nullResolved","mineAll","Single","wait","clearListeners","stopping","stop","pause","_threads","increaseTime","milliseconds","newTime","currentTime","snapshot","snapshots","current","snapshotId","rawValue","snapshotIndex","currentHash","snapshotBlock","snapshotHeader","snapshotHash","blockPromises","blockList","getByHash","setStateRootSync","_storageTries","vmErrorsOnRPCResponse","overrides","transactionContext","setContext","ganacheStepEvent","caller","callerAddress","warmPrecompiles","addWarmedAddress","applySimulationOverrides","fromAccount","getAccount","txCost","gasPrice","startBalance","runCall","EvmError","EvmErrorMessage","OUT_OF_GAS","CallError","transactionHashBuffer","txIndex","startKey","maxResult","contractAddressBuffer","addressData","nextKey","storageTrie","startKeyBuffer","position","findInsertPosition","getStorageKeys","removeAllListeners","stopped","EthereumOptionsConfig","chain_options_1","database_options_1","logging_options_1","miner_options_1","wallet_options_1","fork_options_1","options_1","ChainOptions","DatabaseOptions","LoggingOptions","MinerOptions","wallet","WalletOptions","ForkOptions","OptionsConfig","_EthereumApi_getId","_EthereumApi_filters","_EthereumApi_subscriptions","_EthereumApi_options","_EthereumApi_blockchain","_EthereumApi_wallet","__decorate","decorators","c","arguments","Reflect","decorate","eth_sig_util_1","wallet_1","gas_estimator_1","assert_arg_length_1","filter_parsing_1","autofillDefaultTransactionValues","eth_estimateGas","eth_maxPriorityFeePerGas","defaultLimit","defaultTransactionGasLimit","defaultGasPrice","maxFeePerGas","calcNBlocksMaxBaseFee","maxPriorityFeePerGas","CLIENT_VERSION","PROTOCOL_VERSION","RPC_MODULES","eth","net","rpc","web3","personal","assertExceptionalTransactions","errors","baseError","EthereumApi","dbName","vmAddress","codeBuffer","putContractCode","codeHash","KECCAK256_NULL","slot","slotBuffer","valueBuffer","putContractStorage","seconds","offsetMilliseconds","addy","addUnknownAccount","removeKnownAccount","threads","resumption","parentHeader","generateVM","callGasLimit","runArgs","skipBalance","skipNonce","gasEstimate","slotBuffers","slotHex","stateManagerCopy","setStateRoot","proof","getProof","storageHash","accountProof","storageProof","rawBlock","getRawByBlockNumber","rawTransactions","uncleIndex","powHash","hashRate","clientID","Gwei","getBalance","getCode","blockStateRoot","posBuff","paddedPosBuff","addressStateRoot","hashBuffer","find","dataHash","transactionPromise","receiptPromise","fromString","isKnownAccount","queueTransaction","signAndHash","messageHash","hashPersonalMessage","ecsign","toRpcSig","typedData","eth_signTypedData_v4","types","EIP712Domain","domain","primaryType","signTypedData_v4","eth_subscribe","subscriptionName","subscriptions","subscription","promiEvent","unsubscribe","topics","parseFilterDetails","filter","METHOD_NOT_FOUND","subscriptionId","updates","FilterTypes","filterId","pendingTransaction","fromBlock","toBlock","parseFilterRange","eth_getLogs","getNonce","baseFeePerGasBigInt","hasGasPrice","hasMaxFeePerGas","hasMaxPriorityFeePerGas","tip","simulatedTransaction","simulateTransaction","blockCount","newestBlock","rewardPercentiles","PRECISION_BIG_INT","newestBlockNumber","totalBlocks","min","gasUsedRatio","reward","ERR_INVALID_PERCENTILE","oldestBlockNumber","currentBlock","currentPosition","baseFee","receipts","effectiveRewardAndGasUsed","idx","effectiveGasReward","sort","percentile","totalGasUsed","targetGas","oldestBlock","traceTransaction","storageRangeAt","newAccount","unlockAccount","postData","processMap","res","queued","assertArgLength","HttpHandler","http_1","https_1","base_handler_1","deferred_1","accept","protocol","_request","agent","Agent","keepAlive","scheduling","messageLength","chunks","chunk","hostname","port","pathname","search","requestOptions","signal","queueRequest","deferred","req","handleChunkedResponse","handleLengthedResponse","resStr","shortStr","msg","startsWith","abort","write","PersistentCache","tree_1","env_paths_1","leveldown_1","encoding_down_1","ancestry_1","helpers_1","levelup","levelupOptions","leveldownOpts","maxValueByteBuffer","_reBalancePromise","dbSuffix","directory","getDbDirectory","destroy","rs","ancestorDb","gte","collection","node","deserialize","keyHex","parentKeyHex","descendants","suffix","mkdir","recursive","store","cacheDb","open","setDbVersion","closestAncestor","previousClosestAncestor","resolveTargetAndClosestAncestor","ancestry","Ancestry","atomicBatch","findIndex","allKnownDescendants","ancestorsDescendants","descendantKey","descendantHeight","descendantValue","descendantNode","descendantRawBlock","reBalanceDescendantTree","getBlockByNumber","startSize","maybeDescendant","findClosestDescendants","some","parentTree","isOpen","getBlockNumberFromParams","bufKey","readStream","gt","lt","_height","_key","dbKey","_Server_options","_Server_providerOptions","_Server_status","_Server_app","_Server_httpServer","_Server_listenSocket","_Server_connector","_Server_websocketServer","_Server_initializer","aggregate_error_1","uws_js_unofficial_1","_cfg","Uint8Array","flavors_1","ws_server_1","http_server_1","serverDefaults","providerAndServerOptions","unknown","serverOptionsConfig","ready","loader","_app","App","ws","listen","callback","callbackIsFunction","trim","portNumber","closing","openingOrOpen","opening","allSettled","listenSocket","closed","promiseResults","closingOrClosed","_listenSocket","us_listen_socket_close","_TransactionPool_options","_TransactionPool_priceBump","_TransactionPool_blockchain","_TransactionPool_accountPromises","_TransactionPool_validateTransaction","TriageOption","utils_2","shouldReplace","replacee","replacerNonce","replacer","priceBump","TRANSACTION_REJECTED","replacerTip","replacerMaxFee","replaceeTip","replaceeMaxFee","byNonce","TransactionPool","drain","INVALID_INPUT","txNonce","transactorPromise","highestNonce","getNonceAndBalance","transactor","cost","maxGasPrice","queuedOriginTransactions","transactionPlacement","FutureQueue","executableOriginTransactions","pendingArray","pendingTx","ReplacesPendingExecutable","pendingTxNonce","Executable","transactorNonce","queuedArray","queuedTx","ReplacesFutureTransaction","nextExpectedNonce","nextTx","arr","_Connector_provider","_Connector_handle","provider_1","bufferify_1","BUFFERIFY_THRESHOLD","payload","connection","isHttp","METHOD_NOT_SUPPORTED","_requestRaw","EthereumProvider","PARSE_ERROR","format","results","bufferify","formatError","disconnect","_EthereumProvider_options","_EthereumProvider_api","_EthereumProvider_wallet","_EthereumProvider_executor","_EthereumProvider_blockchain","_EthereumProvider_send","_EthereumProvider_logRequest","_EthereumProvider_legacySendPayloads","_EthereumProvider_legacySendPayload","api_1","lodash_clonedeep_1","blockchain_1","fork_1","off","arg1","arg2","verbose","payloads","mainError","responses","network","Fork","parseCoinbase","hookEventSystem","onChange","listenerCount","listenerAdded","eventName","listenerRemoved","getOptions","getInitialAccounts","unlocked","sendAsync","rawResult","execute","normalizedData","jsonrpc","_Database_options","_Database_cleanupDirectory","_Database_closed","_Database_rootStore","_Database_cleanup","tmp_promise_1","trie_db_1","setGracefulCleanup","tmpOptions","unsafeCleanup","noop","Database","dbPath","dirInfo","cleanup","sublevelTrie","fn","rootDb","originalPut","originalDel","ret","wasClosed","_BlockLogManager_blockchain","BlockLogManager","fromJSON","toBlockNumber","parseFilter","pendingLogsPromises","fromBlockNumber","blockLogsRange","filteredBlockLogs","_TransactionManager_queue","_TransactionManager_paused","_TransactionManager_resumer","_TransactionManager_resolver","_TransactionManager_blockchain","transaction_pool_1","promise_queue_1","TransactionManager","factory","insertion","prepareTransaction","isBusy","_PromiseQueue_queue","_PromiseQueue_tryResolve","_PromiseQueue_tryResolveChain","entry_1","PromiseQueue","queue","shift","resolved","first","cancelledQueue","mixin","DELETED_VALUE","MetadataSingletons","LEVELDOWN_OPTIONS","isEqualKey","encodedKey","decodedKey","keyAddress","deletedKey","isPreForkBlock","accountFromFallback","selectValidForkBlockNumber","codeProm","codeHex","storageFromFallback","compressed","replace","forkBlockNumber","metadataDB","checkpointedMetadata","CheckpointDB","_root","startBlockNumber","endBlockNumber","stream","createKeyStream","createDelKey","selfAddress","checkpoints","encodedKeyStr","keyValueMap","entries","lte","reverse","_lock","acquire","findPath","_deleteNode","persistRoot","delKey","metaDataPutPromise","release","keyWasDeleted","includeCheckpoints","secureTrie","hasCheckpoints","_TransactionReceiptManager_blockchain","TransactionReceiptManager","topic","_Fork_abortController","_Fork_handler","_Fork_options","_Fork_accounts","_Fork_hardfork","_Fork_setCommonFromChain","_Fork_setBlockDataFromChainAndOptions","_Fork_syncAccounts","abort_controller_1","http_handler_1","ws_handler_1","provider_handler_1","persistent_cache_1","url_1","fetchNetworkId","networkIdStr","fetchBlock","chainIdPromise","latestBlock","effectiveBlockNumber","preLatestConfirmations","isInteger","latestBlockNumberHex","latestBlockNumberInt","fetchNonce","WsHandler","ProviderHandler","normalizedNetwork","infuraKey","URL","cacheProm","forkOptions","chainOptions","deleteCache","deleteDb","_e","fetchChainId","chainIdHex","initCache","hf","hardforks","_HttpServer_connector","_HttpServer_options","_HttpServer_isClosing","_HttpServer_handlePost","_HttpServer_handleOptions","content_types_1","http_response_codes_1","fragment_generator_1","prepareCORSResponseHeaders","getHeader","acrh","writeHeader","sendResponse","closeConnection","statusCode","contentType","writeHeaders","cork","writeStatus","HttpServer","app","onAborted","onData","isLast","BAD_REQUEST","PLAIN","isGeneratorObject","sendChunkedResponse","chunkSize","fragments","getFragmentGenerator","firstFragment","nextFragment","done","OK","NO_CONTENT","post","rpcEndpoint","IM_A_TEAPOT","any","connectionHeader","NOT_FOUND","KNOWN_NETWORKS","MAX_BLOCK_NUMBER","MAX_SAFE_INTEGER","reColonSplit","coerceHeaders","ALLOWED_PROTOCOLS","lastIndex","lastIndexOf","substr","asNum","_blockNumber","conjunction","last","arrayToOxfordList","cliDescription","legacyName","cliAliases","conflicts","disableInCLI","cliChoices","defaultDescription","cliType","implies","cliCoerce","reduce","_WebsocketServer_connections","MAX_PAYLOAD_SIZE","sendFragmented","websocket_close_codes_1","useBinary","maybeLastFragment","sendFirstFragment","fragment","sendFragment","sendLastFragment","WebsocketServer","connections","wsBinary","autoBinary","maxPayloadLength","idleTimeout","isBinary","resultEmitter","resultEmitterPromiEvent","dispose","CLOSE_NORMAL","_Executor_requestCoordinator","Executor","has_own_1","requestCoordinator","api","methodName","__proto__","String","_RequestCoordinator_paused","_RequestCoordinator_process","RequestCoordinator","runningTasks","thisArgument","argumentsList","apply","PromiEvent_1","emitteryMethods","onrejected","onAny","eventData","_OptionsConfig_defaults","_OptionsConfig_namespaces","checkForConflicts","namespace","suppliedOptions","conflict","defaults","out","def","config","namespaceOptions","propDefinition","normalized","_AccountManager_blockchain","AccountManager","fromBuffer","trieCopy","unseededRng","randomAlphaNumericString","alphabet","alphabetLength","rng","text","accountString","deterministic","DeterministicSeedPhrase","entropyToMnemonic","notVeryRandomBytes","keccak_1","instance","_state","absorb","squeeze","_finalized","RandomNumberGenerator","entropy","getNumber","upperExclusiveBound","getNumbers","numbers","getBuffer","ecsignLegacy","msgHash","ecdsaSign","InternalTag","safe","deriveFromIndex","deriveFromPath","HARDENED_OFFSET","MASTER_SECRET","seedBuffer","I","createHmac","chainCode","makePublicKey","fullPath","child","test","hardened","childIndex","deriveChild","publicKeyCreate","SHARED_BUFFER_4","isHardened","indexBuffer","writeUInt32BE","privateKeyLength","IL","newPrivK","privateKeyTweakAdd","bn_js_1","bn","STIPEND","bigIntToBN","check","opname","isCall","isCallOrCallcode","isCreate","isTerminator","binSearch","MAX","gasRefund","startingGas","isEnoughGas","vmerr","muln","addn","mid","divn","exactimate","steps","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","collect","info","isPrecompile","ops","systemOps","stepTracker","Context","fee","sixtyFloorths","intermediateCost","callingFee","compositeContext","addGas","gtn","isub","iadd","setStart","setStop","getCost","transfer","ctx","addSixtyFloorth","sixtyFloorth","addRange","finalizeRange","innerCost","sub","RETURN_VALUE","estimate","gasLeftStart","gasLeftEnd","actualUsed","sysops","opIndex","cursor","currentIndex","feeBn","getTotal","semaphore_1","limit_counter_1","sleep","ms","timer","removeEventListener","addEventListener","RateLimiter","requestLimit","windowSizeMs","sem","take","mustBackoff","counter","limitCounter","LimitCounter","currentWindow","currWindow","prevWindow","currCount","prevCount","rate","nextLimit","schedule","leave","increment","LIMIT_EXCEEDED","backoffSeconds","backoff_seconds","allowed_rps","ws_1","inFlightRequests","binaryType","connect","onclose","onmessage","onMessage","messageId","onopen","onerror","FilecoinOptionsConfig","constants_1","uint_to_buffer_1","_bigIntToBuffer","bigIntByteLength","toBufferBE","bigint_buffer_1","readUIntBE","view","padded","DataView","toBigIntBE","byteOffset","getBigUint64","_hasOwn","obj","prop","details","getOwnPropertyNames","flavors_2","asyncRequestProcessing","connectPromise","errors_1","coded_error_1","returnType","createRevertReason","runtime_block_1","block_params_1","_common","deserialized","_raw","_rawTransactions","makeHeader","_rawTransactionMetaData","_size","_hash","fromDatabaseTx","includeFullTransactions","txFn","getTxFn","jsonTxs","uncles","include","rawHeader","nextBaseFee","parentGasTarget","BlockParams","ELASTICITY","parentGasUsed","adjustedFeeDelta","BASE_FEE_MAX_CHANGE_DENOMINATOR","maxPossibleBaseFee","calcNextBaseFeeBigInt","EIP2930AccessListTransaction","runtime_transaction_1","access_lists_1","signing_1","CAPABILITIES","accessListData","AccessLists","getAccessListData","accessList","accessListJSON","AccessListJSON","accessListDataFee","dataFeeEIP2930","getSenderAddress","getBaseFee","getUpfrontCost","supports","capability","sig","isAccessList","tx_1","tx_2","bufferAccessList","slots","accessListStorageKeyCost","accessListAddressCost","newAccessList","addressBuffer","storageItems","storageKeysLength","jsonItem","EIP1559FeeMarketTransaction","maxPriorityFeePerGasBI","maxFeePerGasBI","gasLimitBI","valueBI","bigIntMin","LegacyTransaction","ending","TransactionType","legacy_transaction_1","eip2930_access_list_transaction_1","eip1559_fee_market_transaction_1","assertValidTransactionSValue","txData","fromTxData","Legacy","EIP2930AccessList","EIP1559AccessList","toEIP1559","INVALID_PARAMS","typeOfRPC","_fromData","typeOfRaw","typeOf","getBlockSize","serialize_1","block_1","previousBlockTotalDifficulty","serializeBaseFeePerGas","coinbaseBuffer","prevRandao","KECCAK256_RLP_ARRAY","serializedStart","serializedLength","middle","normalizeEvent","originalMemory","memoryLength","storageRoot","codeAddress","memoryWordCount","returnStack","maybe_get_logs_1","keyHashingFunction","useRootPersistence","useKeyHashing","useKeyHashingFunction","Deferred","server_options_1","ServerOptions","bufferSize","quiet","toBigIntOrString","rawType","less","down","up","element","newLength","replaceBest","newValue","fix","remove","swap","i0","j1","j2","heap","bufferToMinHexKey","latin1Slice","hexSlice","HEX_MAP","comp","insertPosition","step","acc","json_rpc_base_types_1","bigint_to_buffer_1","isFinite","hexValue","ceil","_buffer","buffer_to_bigint_1","nullable","_nullable","ZERO_VALUE_STRING","firstNonZeroByte","findFirstNonZeroByteIndex","trimmedBuffer","_byteLength","strValue","stringToFixedByteLength","bufferToFixedByteLength","desiredCharLength","padCharCount","fixedLengthValue","repeat","_logs","filterByTopic","expectedTopics","logTopics","every","expectedTopic","logPosition","expectedTopicSet","logTopic","logIndex","removed","t","iterator","logToJSON","expectedAddresses","PREFIXES","traceDataLookup","existing","lengthDiff","propertyKey","descriptor","original","replaceFromHeap","handlers_1","signatures_1","CONSOLE_ADDRESS","memoryOffset","toAddress","memoryStart","memoryEnd","handlers","signatureMap","handler","Entry","onSetteled","_onSetteled","validateStorageOverride","stateDiff","vmAddr","clearedState","clearContractStorage","slotBuf","valueBuf","cache_1","ForkCache","_getStorageTrie","Cache","getCb","fromRlpSerializedAccount","putCb","deleteCb","SERIALIZED_PRECOMPILE","PRECOMPILED_ACCOUNT","accountCache","makeAccount","timeSince","windowLength","counters","evict","lastEvict","updatedAt","previousWindow","curr","prev","strParams","cacheLock","knownAncestors","resolver","strKey","loadNextAncestor","findClosestAncestor","findRelated","VERSION_KEY","pair","candidateHeight","upTo","generator","return","recordedVersion","targetHeight","targetHash","earliestBlock","earliestHash","earliestNumber","PARTS","SQUARE_BRACKET_PAIR","SQUARE_BRACKET_OPEN","SQUARE_BRACKET_CLOSE","CURLY_BRACKET_PAIR","CURLY_BRACKET_OPEN","CURLY_BRACKET_CLOSE","COMMA","QUOTE_PAIR","COLON","NULL","_EMPTY","toStr","stringToQuotedBuffer","utf8Write","nameOrIndex","numberToBuffer","bufferToQuotedBuffer","arrayToBuffer","chunkified","objectToBuffer","yieldedOpen","yieldPrefix","quotedKey","src_1","src_2","ipfsHost","ipfsPort","infura","webpackEmptyContext","module","buffer_1","kMaxLength","webpackContext","webpackContextResolve","__webpack_require__","webpackContextKeys","WebSocketCloseCodes","ContentTypes","HttpResponseCodes"],"sourceRoot":""}