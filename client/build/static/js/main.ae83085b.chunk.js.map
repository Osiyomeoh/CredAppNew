{"version":3,"sources":["images/neww.png","images/sym.png","images/new_cool.jpg","components/Airdrop.js","main.js","components/Footer.js","context/TransactionContext.jsx","components/connect.js","utils/shortenAddress.js","components/Spinner/Spinner.js","components/ParticleSettings.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Airdrop","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","time","seconds","timer","startTimer","bind","_assertThisInitialized","countDown","_inherits","_createClass","key","value","setInterval","setState","secondstoTime","props","issueTokens","clearInterval","secs","devisor_for_minutes","devisor_for_seconds","h","Math","floor","m","s","ceil","timeLeftVar","stakingBalance","airdropReleaseTokens","React","createElement","style","color","Component","shortenAddress","address","concat","slice","convertToEther","amount","pow","formatDate","timestamp","Date","toLocaleString","year","month","day","hour","minute","second","hour12","Main","historyList","count","showConfirmationDialog","prevProps","date","item","className","account","window","web3","utils","fromWei","gainsTokenBalance","_toConsumableArray","_this2","tooltip","Tooltip","id","styles","body","backgroundColor","padding","carousel","card","borderRadius","boxShadow","margin","maxWidth","image","objectFit","height","title","fontSize","fontWeight","marginBottom","border","backdropFilter","borderTopColor","borderLeftColor","borderBottomColor","borderRightColor","Marquee","speed","direction","pauseOnHover","gradient","OverlayTrigger","placement","overlay","type","onClick","event","preventDefault","claimTokens","transition","borderColor","onMouseEnter","e","target","onMouseLeave","onSubmit","input","toString","toWei","stakeTokens","borderSpacing","width","credtokenBalance","ref","placeholder","required","cursor","src","tether","alt","display","flexDirection","marginTop","tabIndex","data-dismiss","aria-label","aria-hidden","unstakeTokens","Card","bg","Header","Body","stakeEvents","Carousel","interval","pause","justifyContent","map","index","_objectSpread","Img","variant","Title","CopyToClipboard","text","staker","data-toggle","data-placement","Text","toFixed","TstakeEvents","neww","textDecoration","recipient","Footer","href","bank","samuelAvatar","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","TransactionContext","createContext","ethereum","TransactionProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","currentAccount","setCurrentAccount","checkIfWalletIsConnect","_ref2","_asyncToGenerator","_callee","accounts","_context","request","console","log","t0","apply","arguments","connectWallet","_ref3","_callee2","_context2","alert","location","reload","disconnectWallet","_ref4","_callee3","_context3","params","eth_accounts","off","handleAccountsChanged","useEffect","Provider","Connect","_useContext","useContext","showModal","setShowModal","_useState3","_useState4","cryptoPrices","setCryptoPrices","disconnectWalletCallback","useCallback","fetchCryptoPrices","response","data","fetch","json","intervalId","Navbar","expand","fixed","Brand","Toggle","aria-controls","Collapse","Nav","Link","Button","entries","toUpperCase","usd","join","navigator","clipboard","writeText","size","disabled","Modal","show","onHide","closeButton","Spinner","animationDuration","alignItems","borderWidth","defaultProps","ParticleSettings","Particles","options","background","fpslimit","interactivity","detect_on","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","quantity","repulse","particles","links","collisions","move","outMode","random","straight","number","density","value_area","shape","App","loading","credtoken","methods","approve","tokenfarm","_address","send","from","on","hash","depositTokens","gains","_componentWillMount","loadWeb3","loadBlockchainData","_loadWeb","Web3","currentProvider","_loadBlockchainData","_callee5","networkId","credtokenData","gainsTokenData","tokenfarmData","eventEmitter","_context5","eth","getAccounts","net","getId","CredToken","networks","Contract","abi","balanceOf","Gains","TokenFarm","getPastEvents","fromBlock","returnValues","loadStakeEvents","Staked","newStakeEvent","removeAllListeners","_callee4","newws","_context4","TokensIssue","TokensIssued","newTStakeEvent","content","tokenfarmContract","stakers","position","role","minHeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae83085b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/neww.9cff63aa.png\";","module.exports = __webpack_public_path__ + \"static/media/sym.657e054a.png\";","module.exports = __webpack_public_path__ + \"static/media/new_cool.c2ec8ddd.jpg\";","import React, { Component } from \"react\";\r\n\r\nclass Airdrop extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { time: {}, seconds: 60 }; // the airdrop will run 60 sec after staking.\r\n    this.timer = 0; // Initialize timer.\r\n    this.startTimer = this.startTimer.bind(this); // We bind this keyword (start time).\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  // Build startTimer functionality.\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000); // 1000 --> take us down one seconds at a time.\r\n    }\r\n  }\r\n\r\n  // Build countdown functionallity.\r\n  countDown() {\r\n    // 1. countdown one second at a time.\r\n    let seconds = this.state.seconds - 1;\r\n\r\n    this.setState({\r\n      time: this.secondstoTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // 2. Stop counting when we hit zero.\r\n    if (seconds === 0) {\r\n      this.props.issueTokens();\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  secondstoTime(secs) {\r\n    let hours, seconds, minutes;\r\n    hours = Math.floor(secs / (60 * 60));\r\n\r\n    let devisor_for_minutes = secs % (60 * 60);\r\n    minutes = Math.floor(devisor_for_minutes / 60);\r\n\r\n    let devisor_for_seconds = devisor_for_minutes % 60;\r\n    seconds = Math.ceil(devisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondstoTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  airdropReleaseTokens() {\r\n    let stakingB = this.props.stakingBalance;\r\n    if (stakingB >= \"1000000000000000000\") {\r\n      // If staking balance is more than 50 usdt, begin the airdrop of reward token.\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.airdropReleaseTokens();\r\n    return (\r\n      <div style={{ color: \"white\" }}>\r\n        {this.state.time.m}:{this.state.time.s}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Airdrop;\r\n","import React, { Component } from \"react\";\nimport tether from \"./images/sym.png\";\nimport Airdrop from \"./components/Airdrop.js\";\nimport { Card } from \"react-bootstrap\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Marquee from \"react-fast-marquee\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\nfunction shortenAddress(address) {\n  return `${address.slice(0, 6)}...${address.slice(-4)}`;\n}\n\nfunction convertToEther(amount) {\n  return amount / 10 ** 18;\n}\n\nfunction formatDate(timestamp) {\n  const date = new Date(timestamp * 1000);\n  const options = {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    hour12: true,\n  };\n  return date.toLocaleString(\"en-US\", options);\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      historyList: [],\n      count: 0,\n      showConfirmationDialog: false, // track if the confirmation dialog should be shown\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.stakingBalance !== this.props.stakingBalance) {\n      let date = new Date().toLocaleString();\n      let count = this.state.count + 1;\n      let item = (\n        <li className=\"list-group-item\" key={count}>\n          <div className=\"row\">\n            <div className=\"col-sm-2\">\n              <strong>{count}.</strong>\n            </div>\n            <div className=\"col-sm-2\">\n              <strong>Account:</strong> {this.props.account}\n            </div>\n            <div className=\"col-sm-2\">\n              <strong>Staked:</strong>{\" \"}\n              {window.web3.utils.fromWei(this.props.stakingBalance, \"Ether\")}{\" \"}\n              mCred\n            </div>\n            <div className=\"col-sm-2\">\n              <strong>Gains:</strong>{\" \"}\n              {window.web3.utils.fromWei(this.props.gainsTokenBalance, \"Ether\")}{\" \"}\n              Gs\n            </div>\n            <div className=\"col-sm-4\">\n              <strong>Time:</strong> {date}\n            </div>\n          </div>\n        </li>\n      );\n      let historyList = [...this.state.historyList, item];\n      this.setState({ historyList, count });\n    }\n  }\n  render() {\n    const condition = true;\n    const value = 10;\n    const tooltip = <Tooltip id=\"tooltip\">Click to claim mCred</Tooltip>;\n    const styles = {\n      body: {\n        backgroundColor: \"transparent\",\n        padding: \"0\",\n      },\n\n      carousel: {\n        backgroundColor: \"transparent\",\n      },\n      card: {\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\",\n        margin: \"20px\",\n        maxWidth: \"400px\",\n      },\n      image: {\n        objectFit: \"cover\",\n        height: \"200px\",\n        borderRadius: \"10px 10px 0 0\",\n      },\n      title: {\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n        marginBottom: \"0\",\n      },\n    };\n\n    return (\n      <div>\n        {/* Card container for displaying the app message */}\n        <div\n          className=\"card mt-5 text-center \"\n          style={{\n            borderRadius: \".5rem\",\n            border: \"1px solid transparent\",\n            backgroundColor: \"rgba(137, 145, 211, .7)\",\n            backdropFilter: \"blur(0.2rem)\",\n            boxShadow: \"1.3rem 1.3rem 1.3rem rgba(0, 0, 0, 0.1)\",\n            borderTopColor: \"rgba(225, 225, 225, 0.5)\",\n            borderLeftColor: \"rgba(225, 225, 225, 0.5)\",\n            borderBottomColor: \"rgba(225, 225, 225, 0.1)\",\n            borderRightColor: \"rgba(225, 225, 225, 0.1)\",\n            maxWidth: \"500px\",\n            margin: \"0 auto\",\n          }}\n        >\n          {/* Scrolling message */}\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <Marquee\n                  speed={25}\n                  direction=\"left\"\n                  pauseOnHover={true}\n                  gradient={false}\n                  style={{\n                    backgroundColor: \"white\",\n                    padding: \"7px\",\n                    borderRadius: \"5px\",\n                    fontWeight: \"bold\",\n                    fontSize: \"15px\",\n                  }}\n                >\n                  Click on the Documentation tab on the menu to understand how\n                  the app works&nbsp;&nbsp;\n                </Marquee>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Main content container */}\n        <div\n          id=\"content\"\n          className=\"mt-5\"\n          style={{ maxWidth: \"500px\", margin: \"0 auto\" }}\n        >\n          {/* Claim mcred button */}\n          <OverlayTrigger placement=\"top\" overlay={tooltip}>\n            <button\n              type=\"submit\"\n              onClick={(event) => {\n                event.preventDefault(this.props.claimTokens());\n              }}\n              className=\"btn btn-outline-light btn-md btn-block btn-white-space nowrap tr\"\n              style={{\n                transition: \"background-color 0.2s ease-out\",\n                backgroundColor: \"#007bff\",\n                borderColor: \"#007bff\",\n                color: \"#fff\",\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = \"#28a745\";\n                e.target.style.borderColor = \"#28a745\";\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = \"#007bff\";\n                e.target.style.borderColor = \"#007bff\";\n              }}\n            >\n              Claim mCred\n            </button>\n          </OverlayTrigger>\n          &nbsp;&nbsp;\n          {/* Table displaying staking and reward balances */}\n          <div className=\"card mb-2 bg-transparent\">\n            <div className=\"card-header bg-dark text-light text-center\">\n              Staking Information\n            </div>\n            <div className=\"card-body\">\n              <table className=\"table text-muted text-center\">\n                <thead>\n                  <tr>\n                    <th>Staking Balance</th>\n                    <th>Gains Balance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      {window.web3.utils.fromWei(\n                        this.props.stakingBalance,\n                        \"Ether\"\n                      ) + \" mCred\"}\n                    </td>\n                    <td>\n                      {window.web3.utils.fromWei(\n                        this.props.gainsTokenBalance,\n                        \"Ether\"\n                      )}{\" \"}\n                      Gs\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {/* Form for staking tokens */}\n          <div\n            className=\"card mb-2\"\n            style={{\n              borderRadius: \".5rem\",\n              border: \"1px solid transparent\",\n              backdropFilter: \"blur(0.2rem)\",\n              boxShadow: \"1.3rem 1.3rem 1.3rem rgba(0, 0, 0, 0.1)\",\n              borderTopColor: \"rgba(225, 225, 225, 0.5)\",\n              borderLeftColor: \"rgba(225, 225, 225, 0.5)\",\n\n              borderBottomColor: \"rgba(225, 225, 225, 0.1)\",\n              borderRightColor: \"rgba(225, 225, 225, 0.1)\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <form\n              // prevent the default form submission behavior and handle the submission manually\n              onSubmit={(event) => {\n                event.preventDefault();\n                let amount;\n                // get the value of the input field and convert it to Ether\n                amount = this.input.value.toString();\n                amount = window.web3.utils.toWei(amount, \"Ether\");\n                // call the stakeTokens function from props with the converted amount as argument\n                this.props.stakeTokens(amount);\n              }}\n              // add some margin at the bottom and set the width and padding of the container\n              className=\"mb-3\"\n            >\n              <div\n                style={{\n                  borderSpacing: \"0 1em\",\n                  width: \"100%\",\n                  padding: \"0 10px\",\n                }}\n              >\n                {/* display the balance of the token in the wallet */}\n                <span\n                  className=\"float-right px-3 py-2 bg-secondary text-white font-weight-bold\"\n                  style={{ fontSize: \"1.2rem\" }}\n                >\n                  Balance:{\" \"}\n                  {window.web3.utils.fromWei(\n                    this.props.credtokenBalance,\n                    \"Ether\"\n                  )}\n                </span>\n\n                {/* input field for the amount of tokens to be staked */}\n                <div className=\"input-group mb-4 ml-0.6\">\n                  <input\n                    // assign a reference to the input element for later access\n                    ref={(input) => {\n                      this.input = input;\n                    }}\n                    type=\"number\"\n                    placeholder=\"0\"\n                    style={{\n                      border: \"1px solid azure\",\n                      borderRadius: \".2rem\",\n                    }}\n                    required\n                  />\n                  {/* display the token symbol next to the input field */}\n                  <div className=\"input-group-open\">\n                    <div\n                      className=\"input-group-text ml-1\"\n                      style={{\n                        backgroundColor: \"rgba(137, 145, 211, 0.38)\",\n                        cursor: \"pointer\",\n                        boxShadow: \"2px 3px 68px -46px rgba(0, 123, 255, 1)\",\n                        color: \"white\",\n                      }}\n                    >\n                      <img src={tether} alt=\"tether\" height=\"50\" width=\"50\" />\n                      &nbsp;&nbsp; mCred\n                    </div>\n                  </div>\n                </div>\n\n                {/* button for staking tokens */}\n                <div style={{}}>\n                  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-success btn-lg btn-block btn-white-space\"\n                      style={{\n                        width: \"100%\",\n                        marginBottom: \"10px\",\n                        borderRadius: \"25px\",\n                      }}\n                    >\n                      Stake\n                    </button>\n                  </div>\n                  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <button\n                      type=\"submit\"\n                      onClick={() =>\n                        this.setState({ showConfirmationDialog: true })\n                      } // show the confirmation dialog when clicked\n                      className=\"btn btn-danger btn-lg btn-block btn-white-space\"\n                      style={{\n                        width: \"100%\",\n                        marginTop: \"10px\",\n                        borderRadius: \"25px\",\n                      }}\n                    >\n                      Unstake\n                    </button>\n\n                    {/* Confirmation dialog */}\n                    {this.state.showConfirmationDialog && (\n                      <div className=\"modal show d-block\" tabIndex=\"-1\">\n                        <div className=\"modal-dialog\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5 className=\"modal-title\">Confirm Unstaking</h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={() =>\n                                  this.setState({\n                                    showConfirmationDialog: false,\n                                  })\n                                } // hide the confirmation dialog when closed\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              Are you sure you want to unstake your tokens?\n                            </div>\n                            <div className=\"modal-footer\">\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-dismiss=\"modal\"\n                                onClick={() =>\n                                  this.setState({\n                                    showConfirmationDialog: false,\n                                  })\n                                } // hide the confirmation dialog when cancelled\n                              >\n                                Cancel\n                              </button>\n                              <button\n                                type=\"submit\"\n                                className=\"btn btn-danger\"\n                                onClick={() => {\n                                  this.props.unstakeTokens(); // unstake tokens when confirmed\n                                  this.setState({\n                                    showConfirmationDialog: false,\n                                  }); // hide the confirmation dialog\n                                }}\n                              >\n                                Confirm\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </form>\n            {/* display the Airdrop component for issuing tokens */}\n            <div className=\"card-body text-center\" style={{ color: \"white\" }}>\n              Airdrop\n              <Airdrop\n                stakingBalance={this.props.stakingBalance}\n                issueTokens={this.props.issueTokens}\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"row justify-content-center\"\n          style={{ maxWidth: \"900px\", margin: \"0 auto\" }}\n        >\n          <div className=\"col-md-6\">\n            <Card bg=\"transparent\" border=\"light\" className=\"mx-auto\">\n              <Card.Header>\n                <h1 className=\"text-center\">Stake Events</h1>\n              </Card.Header>\n              <Card.Body style={styles.body}>\n                {/* if there are stake events, display them in a carousel */}\n                {this.props.stakeEvents ? (\n                  <Carousel\n                    interval={5000}\n                    pause={condition ? value.toString() : undefined}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {this.props.stakeEvents.map((event, index) => (\n                      <Card\n                        key={index}\n                        style={{ ...styles.card, width: \"400px\" }}\n                      >\n                        <Card.Img\n                          variant=\"top\"\n                          src={`https://source.unsplash.com/500x300/?technology/${index}`}\n                          style={styles.image}\n                        />\n                        <Card.Body>\n                          <Card.Title style={styles.title}>\n                            <CopyToClipboard text={event.staker}>\n                              <span\n                                style={{\n                                  cursor: \"pointer\",\n                                  text: \"underline\",\n                                }}\n                                className=\"text-primary\"\n                                data-toggle=\"tooltip\"\n                                data-placement=\"top\"\n                                title=\"Click to copy\"\n                              >\n                                {shortenAddress(event.staker)}\n                              </span>\n                            </CopyToClipboard>\n                          </Card.Title>\n                          <Card.Text>\n                            Amount (mCred):{\" \"}\n                            {convertToEther(event.amount).toFixed(4)}\n                            &nbsp;&nbsp;\n                            <span> {formatDate(event.timestamp)}</span>\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    ))}\n                  </Carousel>\n                ) : (\n                  <p>No stake events found.</p>\n                )}\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"col-md-6\">\n            {/* display the stake events as a carousel */}\n\n            <Card bg=\"transparent\" border=\"light\" className=\"mx-auto\">\n              <Card.Header>\n                <h1 className=\"text-center\">Gains Events</h1>\n              </Card.Header>\n              <Card.Body style={styles.body}>\n                {/* if there are stake events, display them in a carousel */}\n                {this.props.TstakeEvents ? (\n                  <Carousel\n                    interval={5000}\n                    pause={condition ? value.toString() : undefined}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {this.props.TstakeEvents.map((neww, index) => (\n                      <Card\n                        key={index}\n                        style={{ ...styles.card, width: \"400px\" }}\n                      >\n                        <Card.Img\n                          variant=\"top\"\n                          src={`https://source.unsplash.com/500x300/?technology/${index}`}\n                          style={styles.image}\n                        />\n                        <Card.Body>\n                          <Card.Title style={styles.title}>\n                            <CopyToClipboard text={neww.staker}>\n                              <span\n                                style={{\n                                  cursor: \"pointer\",\n                                  textDecoration: \"underline\",\n                                }}\n                                className=\"text-primary\"\n                                data-toggle=\"tooltip\"\n                                data-placement=\"top\"\n                                title=\"Click to copy\"\n                              >\n                                {shortenAddress(neww.recipient)}\n                              </span>\n                            </CopyToClipboard>\n                          </Card.Title>\n                          <Card.Text>\n                            Gains (mCred):{\" \"}\n                            {convertToEther(neww.amount).toFixed(4)}\n                            &nbsp;&nbsp; {formatDate(neww.timestamp)}\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    ))}\n                  </Carousel>\n                ) : (\n                  <p>No stake events found.</p>\n                )}\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\r\nimport bank from \"../images/neww.png\";\r\nimport samuelAvatar from \"../images/new_cool.jpg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid d-flex justify-content-center\">\r\n        {/* Logo */}\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          <img\r\n            src={bank}\r\n            width=\"110\"\r\n            height=\"40\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"bank\"\r\n          />\r\n        </a>\r\n        {/* Copyright */}\r\n        <div className=\"navbar-text text-white text-center\">\r\n          © 2023 Grandida Inc. All rights reserved. | Created by Sam Ale\r\n          {/* Samuel's Avatar */}\r\n          <img\r\n            src={samuelAvatar}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top rounded-circle ml-2\"\r\n            alt=\"Samuel's avatar\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// Create a new context object for transactions\r\nexport const TransactionContext = React.createContext();\r\n\r\n// Destructure the ethereum object from the global window object\r\nconst { ethereum } = window;\r\n\r\n// Define a new component for the transaction provider\r\nexport const TransactionProvider = ({ children }) => {\r\n  \r\n  // Set up state to hold the current account\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  \r\n  // Define a function to check if the user has connected their wallet\r\n  const checkIfWalletIsConnect = async () => {\r\n    try {\r\n      // Call the `eth_accounts` method on the ethereum object to get the user's accounts\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n  \r\n      // If the user has at least one account, set the current account state\r\n      if (accounts.length) {\r\n        setCurrentAccount(accounts[0]);\r\n       \r\n      } else {\r\n        console.log(\"No accounts found\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  // Define a function to connect the user's wallet\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (!ethereum) {\r\n        alert(\"Please install MetaMask.\");\r\n        return;\r\n      }\r\n  \r\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\r\n  \r\n      setCurrentAccount(accounts[0]);\r\n  \r\n      alert(\"Wallet connected successfully!\");\r\n      console.log(\"Wallet connected successfully!\");\r\n  \r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n  \r\n      alert(\"There was an error connecting your wallet.\");\r\n      console.log(\"Error connecting wallet:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n  // Define a function to disconnect the user's wallet\r\n  const disconnectWallet = async () => {\r\n    try {\r\n      // Call the `wallet_requestPermissions` method on the ethereum object to request permission to access the user's accounts\r\n      await ethereum.request({\r\n        method: \"wallet_requestPermissions\",\r\n        params: [{ eth_accounts: {} }],\r\n      });\r\n  \r\n      // Remove the event listener for account changes\r\n      ethereum.off(\"accountsChanged\", handleAccountsChanged);\r\n      // Clear the current account state\r\n      setCurrentAccount(\"\");\r\n      // Reload the page to reflect the updated account information\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  // Define a function to handle changes in the user's accounts\r\n  const handleAccountsChanged = (accounts) => {\r\n    // If the user no longer has any accounts, clear the current account state\r\n    if (accounts.length === 0) {\r\n      setCurrentAccount(\"\");\r\n    } else {\r\n      // Otherwise, set the current account state to the first account returned by the method\r\n      setCurrentAccount(accounts[0]);\r\n    }\r\n  };\r\n  \r\n  // Set up an effect to check if the user has connected their wallet\r\n  useEffect(() => {\r\n    checkIfWalletIsConnect();\r\n  }, []);\r\n\r\n  // Render the TransactionContext provider component with the appropriate values\r\n  return (\r\n    <TransactionContext.Provider\r\n      value={{\r\n        connectWallet,\r\n        disconnectWallet,\r\n        currentAccount,\r\n      }}\r\n    >\r\n      {children}\r\n    </TransactionContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport bank from \"../images/neww.png\";\r\nimport { shortenAddress } from \"../utils/shortenAddress\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport { TransactionContext } from \"../context/TransactionContext\";\r\n\r\nconst Connect = () => {\r\n  // Access the connectWallet, disconnectWallet, and currentAccount variables from the TransactionContext\r\n  const { connectWallet, disconnectWallet, currentAccount } = useContext(\r\n    TransactionContext\r\n  );\r\n\r\n  // Set up local state to manage the visibility of the documentation modal\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Set up local state to hold the current prices of cryptocurrencies\r\n  const [cryptoPrices, setCryptoPrices] = useState([]);\r\n\r\n  // Define a callback to disconnect the wallet that can be used in a useEffect hook\r\n  const disconnectWalletCallback = useCallback(() => {\r\n    disconnectWallet();\r\n  }, [disconnectWallet]);\r\n\r\n  // Fetch crypto prices from CoinGecko API and refresh every 10 seconds\r\n  useEffect(() => {\r\n    const fetchCryptoPrices = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,binancecoin,dogecoin&vs_currencies=usd\"\r\n        );\r\n        const data = await response.json();\r\n        setCryptoPrices(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchCryptoPrices();\r\n    const intervalId = setInterval(fetchCryptoPrices, 10000); // Refresh prices every 10 seconds\r\n    return () => clearInterval(intervalId); // Clean up interval on component unmount\r\n  }, []);\r\n\r\n  // Copy the user's wallet address to the clipboard and display a confirmation message on click\r\n  const handleAddressClick = () => {\r\n    navigator.clipboard.writeText(currentAccount);\r\n    alert(\"Address copied to clipboard!\");\r\n  };\r\n\r\n  return (\r\n    // Bootstrap Navbar component\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      expand=\"lg\"\r\n      fixed=\"top\"\r\n      className=\"shadow p-0\"\r\n    >\r\n      {/* Navbar brand */}\r\n      <Navbar.Brand href=\"/\" style={{ color: \"white\" }}>\r\n        <img\r\n          src={bank}\r\n          width=\"110\"\r\n          height=\"40\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"bank\"\r\n        />\r\n      </Navbar.Brand>\r\n      {/* Navbar toggle button for mobile */}\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      {/* Navbar items */}\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Nav>\r\n          {/* Documentation button that shows the modal */}\r\n          <Nav.Link>\r\n            <Button variant=\"link\" onClick={() => setShowModal(true)}>\r\n              Documentation\r\n            </Button>\r\n          </Nav.Link>\r\n          {/* Marquee displaying cryptocurrency prices */}\r\n          <Nav.Link>\r\n            {cryptoPrices && (\r\n              <Marquee\r\n                speed={1}\r\n                direction=\"left\"\r\n                pauseOnHover={true}\r\n                gradient={false}\r\n                style={{\r\n                  backgroundColor: \"dark\",\r\n                  padding: \"7px\",\r\n                  borderRadius: \"5px\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"15px\",\r\n                }}\r\n              >\r\n                {Object.entries(cryptoPrices)\r\n                  .map(([key, value]) => `${key.toUpperCase()}: $${value.usd}`)\r\n                  .join(\" | \")}\r\n                &nbsp;&nbsp;\r\n              </Marquee>\r\n            )}\r\n          </Nav.Link>\r\n          {/* User's wallet address */}\r\n          <Nav.Link className=\"text-nowrap mr-3\">\r\n            <small\r\n              style={{ color: \"white\", cursor: \"pointer\" }}\r\n              onClick={handleAddressClick}\r\n            >\r\n              Address: {shortenAddress(currentAccount)}\r\n            </small>\r\n          </Nav.Link>\r\n          {/* Connect/disconnect wallet buttons */}\r\n          <Nav.Link>\r\n            {!currentAccount && (\r\n              <Button onClick={connectWallet} variant=\"info\" size=\"sm\">\r\n                Connect Wallet\r\n              </Button>\r\n            )}\r\n            {currentAccount && (\r\n              <div className=\"d-flex\">\r\n                <Button variant=\"success\" size=\"sm\" disabled>\r\n                  Connected\r\n                </Button>\r\n                <Button\r\n                  onClick={disconnectWalletCallback}\r\n                  variant=\"danger\"\r\n                  size=\"sm\"\r\n                  className=\"ml-2\"\r\n                >\r\n                  Swap_Account\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Documentation</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h1>About Credence</h1> {/* Heading for About page */}\r\n          <p>\r\n            Credence is a crypto staking app that allows users to earn rewards\r\n            by staking their cryptocurrency. Our platform uses a secure and\r\n            reliable system to ensure that your funds are always safe and\r\n            accessible.\r\n          </p>\r\n          <p>\r\n            To participate, please make sure to follow these steps:{\" \"}\r\n            {/* Steps to participate */}\r\n          </p>\r\n          <ol>\r\n            <li>\r\n              Connect your MetaMask wallet to our platform if you are not\r\n              already connected\r\n            </li>{\" \"}\r\n            {/* Step 1 */}\r\n            <li>We currently support live test network such as Mumbai</li>{\" \"}\r\n            {/* Step 2 */}\r\n            <li>\r\n              You can swap account on the test network and then refresh the page\r\n            </li>{\" \"}\r\n            {/* Step 3 */}\r\n            <li>Claim 50 mCred tokens for staking.</li> {/* Step 4 */}\r\n            <li>Stake your mCred tokens and wait for 1 minute.</li>{\" \"}\r\n            {/* Step 5 */}\r\n            <li>\r\n              While waiting, enjoy some particle interactions on our platform.\r\n            </li>{\" \"}\r\n            {/* Step 6 */}\r\n            <li>\r\n              Once the timer ends, you will receive an airdrop of Gains tokens.\r\n            </li>{\" \"}\r\n            {/* Step 7 */}\r\n            <li>You can unstake your mCred tokens anytime you want.</li>{\" \"}\r\n            {/* Step 8 */}\r\n            <li>Refresh the page after every transaction</li> {/* Step 9 */}\r\n          </ol>\r\n          <p>\r\n            Our team is dedicated to providing a seamless and user-friendly\r\n            experience for our customers. If you have any questions or feedback,\r\n            please feel free to contact us at support@credence.com.{\" \"}\r\n            {/* Contact information */}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Connect;\r\n","export const shortenAddress = (address) => `${address.slice(0, 5)}...${address.slice(address.length - 4)}`;","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\n// Define a Spinner component that takes in three props: animationDuration, size, and color\r\nconst Spinner = ({ animationDuration, size, color }) => {\r\n  // Render a div with the class \"half-circle-spinner\"\r\n  return (\r\n    <div\r\n      className=\"half-circle-spinner\"\r\n      style={{\r\n        height: `${size}px`,\r\n        width: `${size}px`,\r\n        alignItems: `center`,\r\n      }}\r\n    >\r\n      {/* Render two nested divs with the classes \"circle\" and \"circle-1\" */}\r\n      <div\r\n        className=\"circle circle-1\"\r\n        style={{\r\n          borderWidth: `${size / 10}px`,\r\n          animationDuration: `${animationDuration}ms`,\r\n          borderTopColor: color,\r\n        }}\r\n      />\r\n      {/* Render two nested divs with the classes \"circle\" and \"circle-2\" */}\r\n      <div\r\n        className=\"circle circle-2\"\r\n        style={{\r\n          borderWidth: `${size / 10}px`,\r\n          animationDuration: `${animationDuration}ms`,\r\n          borderBottomColor: color,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Set default values for the Spinner component's props\r\nSpinner.defaultProps = {\r\n  animationDuration: 1000,\r\n  size: 50,\r\n  color: \"#fff\",\r\n};\r\n\r\n// Export the Spinner component as the default export of this module\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\n\r\nclass ParticleSettings extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Particles\r\n          height=\"1700px\"\r\n          width=\"1000vh\"\r\n          id=\"tsparticles\"\r\n          options={{\r\n            background: {\r\n              color: {\r\n                value: \"#340b70\",\r\n              },\r\n            },\r\n            fpslimit: 120,\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onClick: {\r\n                  enable: \"true\",\r\n                  mode: \"push\",\r\n                },\r\n                onHover: {\r\n                  enable: \"true\",\r\n                  mode: \"repulse\",\r\n                },\r\n                resize: \"true\",\r\n              },\r\n              modes: {\r\n                bubble: {\r\n                  distance: 400,\r\n                  duration: 2,\r\n                  opacity: 0.8,\r\n                  size: 40,\r\n                },\r\n                push: {\r\n                  quantity: 4,\r\n                },\r\n                repulse: {\r\n                  distance: 180,\r\n                  duration: 0.4,\r\n                },\r\n              },\r\n            },\r\n            particles: {\r\n              color: {\r\n                value: \"#33ebf5\",\r\n              },\r\n              links: {\r\n                color: \"#ffffff\",\r\n                distance: 150,\r\n                enable: true,\r\n                opacity: 0.5,\r\n                width: 1,\r\n              },\r\n              collisions: {\r\n                enable: true,\r\n              },\r\n              move: {\r\n                direction: \"none\",\r\n                enable: true,\r\n                outMode: \"bounce\",\r\n                random: false,\r\n                speed: 2.5,\r\n                straight: false,\r\n              },\r\n              number: {\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 800,\r\n                },\r\n                value: 19,\r\n              },\r\n              opacity: {\r\n                value: 1,\r\n              },\r\n              shape: {\r\n                type: \"circle\",\r\n              },\r\n              size: {\r\n                random: true,\r\n                value: 5,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParticleSettings;\r\n","//Importing required libraries and components\nimport React, { Component } from \"react\";\nimport Main from \"./main.js\";\nimport Footer from \"./components/Footer\";\nimport Connect from \"./components/connect\";\nimport Spinner from \"./components/Spinner/Spinner.js\";\nimport Web3 from \"web3\";\nimport Gains from \"./utils/Gains.json\";\nimport CredToken from \"./utils/CredToken.json\";\nimport TokenFarm from \"./utils/TokenFarm.json\";\nimport ParticleSettings from \"./components/ParticleSettings.js\";\nimport { TransactionProvider } from \"./context/TransactionContext.jsx\";\n\n//Defining the App component\nclass App extends Component {\n  //Function called before rendering, loads the Web3 instance and blockchain data\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  //Loads the Web3 instance\n  async loadWeb3() {\n    //Check if the browser has an Ethereum wallet (e.g. Metamask) installed\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      //await ethereum.send('eth_requestAccounts');\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  //Loads the blockchain data, including contracts and account balance\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    //Set the first account as the user's account\n    this.setState({ account: accounts[0] });\n\n    //Get the network ID of the current network\n    const networkId = await web3.eth.net.getId();\n\n    //Load Cred Token\n    const credtokenData = CredToken.networks[networkId];\n    if (credtokenData) {\n      const credtoken = new web3.eth.Contract(\n        CredToken.abi,\n        credtokenData.address\n      );\n      this.setState({ credtoken });\n      let credtokenBalance = await credtoken.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ credtokenBalance: credtokenBalance.toString() });\n    } else {\n      window.alert(\n        \"CredToken contract not deployed to current network. Please switch to a compatible network.\"\n      );\n    }\n\n    //Load Gains token\n    const gainsTokenData = Gains.networks[networkId];\n    if (gainsTokenData) {\n      const gains = new web3.eth.Contract(Gains.abi, gainsTokenData.address);\n      this.setState({ gains });\n      let gainsTokenBalance = await gains.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ gainsTokenBalance: gainsTokenBalance.toString() });\n    } else {\n      window.alert(\n        \"Gains Token contract not deployed to current network. Please switch to a compatible network.\"\n      );\n    }\n\n    //Load TokenFarm contract.\n    const tokenfarmData = TokenFarm.networks[networkId];\n    if (tokenfarmData) {\n      const tokenfarm = new web3.eth.Contract(\n        TokenFarm.abi,\n        tokenfarmData.address\n      );\n      this.setState({ tokenfarm });\n\n      // Load staking balance\n      let stakingBalance = await tokenfarm.methods\n        .stakingBalance(this.state.account)\n        .call();\n      this.setState({ stakingBalance: stakingBalance.toString() });\n\n      // Load staking events\n      const loadStakeEvents = async () => {\n        try {\n          const events = await tokenfarm.getPastEvents(\"Staked\", {\n            fromBlock: 0,\n          });\n          const stakeEvents = events.map((event) => ({\n            staker: event.returnValues.staker,\n            amount: event.returnValues.amount,\n            timestamp: event.returnValues.timestamp,\n          }));\n          this.setState({ stakeEvents });\n          console.log(stakeEvents);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      loadStakeEvents();\n\n      // Listen for new stake events\n      const eventEmitter = tokenfarm.events.Staked();\n      eventEmitter.on(\"data\", (event) => {\n        const newStakeEvent = {\n          staker: event.returnValues.staker,\n          amount: event.returnValues.amount,\n          timestamp: event.returnValues.timestamp,\n        };\n        this.setState({\n          stakeEvents: [...this.state.stakeEvents, newStakeEvent],\n        });\n      });\n      eventEmitter.removeAllListeners();\n\n      const TokensIssue = async () => {\n        try {\n          const newws = await tokenfarm.getPastEvents(\"TokensIssued\", {\n            fromBlock: 0,\n          });\n          const TstakeEvents = newws.map((neww) => ({\n            recipient: neww.returnValues.staker,\n            amount: neww.returnValues.amount,\n            timestamp: neww.returnValues.timestamp,\n          }));\n          this.setState({ TstakeEvents });\n          console.log(TstakeEvents);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      TokensIssue();\n\n      //Listen for new stake events\n      const TeventEmitter = tokenfarm.events.TokensIssued();\n      TeventEmitter.on(\"data\", (neww) => {\n        const newTStakeEvent = {\n          recipient: neww.returnValues.staker,\n          amount: neww.returnValues.amount,\n          timestamp: neww.returnValues.timestamp,\n        };\n        this.setState({\n          TstakeEvents: [...this.state.TstakeEvents, newTStakeEvent],\n        });\n      });\n      eventEmitter.removeAllListeners();\n    } else {\n      window.alert(\n        \"TokenFarm not deployed to current network. Please switch to a compatible network.\"\n      );\n    }\n\n    this.setState({ loading: false });\n  }\n\n  stakeTokens = (amount) => {\n    this.setState({ loading: true });\n    this.state.credtoken.methods\n      .approve(this.state.tokenfarm._address, amount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: true });\n        this.state.tokenfarm.methods\n          .depositTokens(amount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            console.log(\"Deposit transaction hash: \", hash);\n            this.setState({ loading: false });\n            alert(\"Staking successful!\");\n            console.log(\"Staking successful - transaction hash: \", hash);\n            window.location.reload();\n          })\n          .on(\"error\", (error) => {\n            this.setState({ loading: false });\n            alert(\"Staking failed!\");\n            console.log(\"Staking failed - error: \", error);\n          });\n      });\n  };\n\n  // This function is used to unstake tokens\n  unstakeTokens = () => {\n    this.setState({ loading: true });\n    this.state.tokenfarm.methods\n      .unstakeTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n        window.location.reload();\n        alert(\"Tokens unstaked successfully!\"); // frontend alert\n        console.log(\"Tokens unstaked successfully!\"); // console log\n      });\n  };\n\n  issueTokens = () => {\n    this.setState({ loading: true });\n    this.state.tokenfarm.methods\n      .issueTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n        window.location.reload();\n        alert(\"Tokens issued successfully!\");\n        console.log(\"Tokens issued successfully!\");\n      })\n      .on(\"error\", (error) => {\n        console.error(error);\n        alert(\"There was an error issuing tokens.\");\n        this.setState({ loading: false });\n        console.log(\"Error issuing tokens: \", error);\n      });\n  };\n\n  // This function is used to claim tokens\n  claimTokens = () => {\n    this.setState({ loading: true });\n    this.state.tokenfarm.methods\n      .claimTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n        window.location.reload();\n        alert(\"Tokens claimed successfully!\");\n        console.log(\"Tokens claimed successfully!\");\n      })\n      .on(\"error\", (error) => {\n        console.error(error);\n        alert(\"There was an error claiming tokens.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    // Initializes the component's state\n    this.state = {\n      account: \"0x0\",\n      credtoken: {},\n      gains: {},\n      tokenfarm: {},\n      stakeEvents: [],\n      TstakeEvents: [],\n      credtokenBalance: \"0\",\n      gainsTokenBalance: \"0\",\n      stakingBalance: \"0\",\n      loading: true,\n    };\n  }\n\n  // The render function defines the rendering logic for the component.\n  // It returns different content depending on the loading state of the component.\n  // If loading is true, a spinner is displayed.\n  // Otherwise, the main content of the component is rendered.\n\n  render() {\n    let content;\n    // Determine what to display based on the loading state\n    this.state.loading\n      ? // Display a spinner if loading is true\n        (content = (\n          <div>\n            <div\n              className=\"card mt-5 text-center\"\n              style={{\n                borderRadius: \".5rem\",\n                border: \"1px solid transparent\",\n                backgroundColor: \"rgba(137, 145, 211, .7)\",\n                backdropFilter: \"blur(0.2rem)\",\n                boxShadow: \"1.3rem 1.3rem 1.3rem rgba(0, 0, 0, 0.1)\",\n                borderTopColor: \"rgba(225, 225, 225, 0.5)\",\n                borderLeftColor: \"rgba(225, 225, 225, 0.5)\",\n                borderBottomColor: \"rgba(225, 225, 225, 0.1)\",\n                borderRightColor: \"rgba(225, 225, 225, 0.1)\",\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100vh\",\n              }}\n            >\n              <span style={{ color: \"white\" }}>\n                <Spinner />\n              </span>\n            </div>\n          </div>\n        ))\n      : // Display the main content if loading is false\n        (content = (\n          <Main\n            credtokenBalance={this.state.credtokenBalance}\n            gainsTokenBalance={this.state.gainsTokenBalance}\n            stakeTokens={this.stakeTokens}\n            unstakeTokens={this.unstakeTokens}\n            tokenfarmContract={this.tokenfarm}\n            issueTokens={this.issueTokens}\n            connectWallet={this.connectWallet}\n            claimTokens={this.claimTokens}\n            stakingBalance={this.state.stakingBalance}\n            stakers={this.stakers}\n            account={this.state.account}\n            stakeEvents={this.state.stakeEvents}\n            TstakeEvents={this.state.TstakeEvents}\n          />\n        ));\n\n    return (\n      <div className=\"App\" style={{ position: \"relative\" }}>\n        <div style={{ position: \"absolute\" }}>\n          <ParticleSettings />\n        </div>\n        <TransactionProvider>\n          <Connect />\n        </TransactionProvider>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"col-lg-12 col-md-8 col-sm-10 ml-auto mr-auto\"\n              style={{ height: \"100%\", minHeight: \"100vh\" }}\n            >\n              <div>{content}</div>\n            </main>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // Bring in Bootstrap.\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(\r\n \r\n    <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}