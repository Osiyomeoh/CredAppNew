{"ast":null,"code":"'use strict';\n\nvar mh = require('multihashes');\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar CIDUtil = {\n  /**\r\n   * Test if the given input is a valid CID object.\r\n   * Returns an error message if it is not.\r\n   * Returns undefined if it is a valid CID.\r\n   *\r\n   * @param {any} other\r\n   * @returns {string}\r\n   */\n  checkCIDComponents: function checkCIDComponents(other) {\n    if (other == null) {\n      return 'null values are not valid CIDs';\n    }\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0';\n    }\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string';\n    }\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\";\n      }\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\";\n      }\n    }\n    if (!Buffer.isBuffer(other.multihash)) {\n      return 'multihash must be a Buffer';\n    }\n    try {\n      mh.validate(other.multihash);\n    } catch (err) {\n      var errorMsg = err.message;\n      if (!errorMsg) {\n        // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed';\n      }\n      return errorMsg;\n    }\n  }\n};\nmodule.exports = CIDUtil;","map":null,"metadata":{},"sourceType":"script"}