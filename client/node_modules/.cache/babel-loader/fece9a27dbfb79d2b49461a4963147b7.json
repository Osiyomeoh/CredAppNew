{"ast":null,"code":"var xhr = require('xhr');\nvar normalize = require('./normalize-response');\nvar noop = function noop() {};\nmodule.exports = xhrRequest;\nfunction xhrRequest(opt, cb) {\n  delete opt.uri;\n\n  // for better JSON.parse error handling than xhr module\n  var useJson = false;\n  if (opt.responseType === 'json') {\n    opt.responseType = 'text';\n    useJson = true;\n  }\n  var req = xhr(opt, function xhrRequestResult(err, resp, body) {\n    if (useJson && !err) {\n      try {\n        var text = resp.rawRequest.responseText;\n        body = JSON.parse(text);\n      } catch (e) {\n        err = e;\n      }\n    }\n    resp = normalize(opt, resp);\n    if (err) cb(err, null, resp);else cb(err, body, resp);\n    cb = noop;\n  });\n\n  // Patch abort() so that it also calls the callback, but with an error\n  var onabort = req.onabort;\n  req.onabort = function () {\n    var ret = onabort.apply(req, Array.prototype.slice.call(arguments));\n    cb(new Error('XHR Aborted'));\n    cb = noop;\n    return ret;\n  };\n  return req;\n}","map":null,"metadata":{},"sourceType":"script"}