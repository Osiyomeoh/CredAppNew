{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\CredApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\CredApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\CredApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\CredApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\CredApp\\\\client\\\\src\\\\context\\\\TransactionContext.jsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractABI, contractAddress } from \"../utils/constants\";\nexport var TransactionContext = React.createContext();\nvar _window = window,\n  ethereum = _window.ethereum;\nvar createEthereumContract = function createEthereumContract() {\n  var provider = new ethers.providers.Web3Provider(ethereum);\n  var signer = provider.getSigner();\n  var transactionContract = new ethers.Contract(contractAddress, contractABI, signer);\n  console.log({\n    provider: provider,\n    signer: signer,\n    transactionContract: transactionContract\n  });\n  return transactionContract;\n};\nexport var TransactionProvider = function TransactionProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState({\n      addressTo: \"\",\n      amount: \"\",\n      keyword: \"\",\n      message: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setformData = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentAccount = _useState4[0],\n    setCurrentAccount = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(localStorage.getItem(\"transactionCount\")),\n    _useState8 = _slicedToArray(_useState7, 2),\n    transactionCount = _useState8[0],\n    setTransactionCount = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    transactions = _useState10[0],\n    setTransactions = _useState10[1];\n  var handleChange = function handleChange(e, name) {\n    setformData(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, name, e.target.value));\n    });\n  };\n  var getAllTransactions = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var transactionsContract, availableTransactions, structuredTransactions;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (ethereum) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", alert(\"Please install MetaMask.\"));\n          case 3:\n            transactionsContract = createEthereumContract();\n            _context.next = 6;\n            return transactionsContract.getAllTransactions();\n          case 6:\n            availableTransactions = _context.sent;\n            structuredTransactions = availableTransactions.map(function (transaction) {\n              return {\n                addressTo: transaction.receiver,\n                addressFrom: transaction.sender,\n                timestamp: new Date(transaction.timestamp.toNumber() * 1000).toLocaleString(),\n                message: transaction.message,\n                keyword: transaction.keyword,\n                amount: parseInt(transaction.amount._hex) / Math.pow(10, 18)\n              };\n            });\n            console.log(structuredTransactions);\n            setTransactions(structuredTransactions);\n            _context.next = 15;\n            break;\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n    return function getAllTransactions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var checkIfWalletIsConnect = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            if (ethereum) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\", alert(\"Please install MetaMask.\"));\n          case 3:\n            _context2.next = 8;\n            break;\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n    return function checkIfWalletIsConnect() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var accounts;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            if (ethereum) {\n              _context3.next = 3;\n              break;\n            }\n            return _context3.abrupt(\"return\", alert(\"Please install MetaMask.\"));\n          case 3:\n            _context3.next = 5;\n            return ethereum.request({\n              method: \"eth_accounts\"\n            });\n          case 5:\n            accounts = _context3.sent;\n            if (accounts.length) {\n              setCurrentAccount(accounts[0]);\n              getAllTransactions();\n            } else {\n              console.log(\"No accounts found\");\n            }\n            setCurrentAccount(accounts[0]);\n            window.location.reload();\n            _context3.next = 14;\n            break;\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n            // throw new Error(\"No ethereum object\");\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n    return function connectWallet() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var disconnectWallet = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            if (ethereum) {\n              _context4.next = 3;\n              break;\n            }\n            return _context4.abrupt(\"return\", alert(\"Please install MetaMask.\"));\n          case 3:\n            _context4.next = 5;\n            return ethereum.request({\n              method: \"wallet_requestPermissions\",\n              params: [{\n                eth_accounts: {}\n              }]\n            });\n          case 5:\n            setCurrentAccount(\"\");\n            _context4.next = 11;\n            break;\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n    return function disconnectWallet() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var sendTransaction = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var addressTo, amount, keyword, message, transactionsContract, parsedAmount, transactionHash, transactionsCount;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            if (!ethereum) {\n              _context5.next = 23;\n              break;\n            }\n            addressTo = formData.addressTo, amount = formData.amount, keyword = formData.keyword, message = formData.message;\n            transactionsContract = createEthereumContract();\n            parsedAmount = ethers.utils.parseEther(amount);\n            _context5.next = 7;\n            return ethereum.request({\n              method: \"eth_sendTransaction\",\n              params: [{\n                from: currentAccount,\n                to: addressTo,\n                gas: \"0x5208\",\n                value: parsedAmount._hex\n              }]\n            });\n          case 7:\n            _context5.next = 9;\n            return transactionsContract.addToBlockchain(addressTo, parsedAmount, message, keyword);\n          case 9:\n            transactionHash = _context5.sent;\n            setIsLoading(true);\n            console.log(\"Loading - \".concat(transactionHash.hash));\n            _context5.next = 14;\n            return transactionHash.wait();\n          case 14:\n            console.log(\"Success - \".concat(transactionHash.hash));\n            setIsLoading(false);\n            _context5.next = 18;\n            return transactionsContract.getTransactionCount();\n          case 18:\n            transactionsCount = _context5.sent;\n            setTransactionCount(transactionsCount.toNumber());\n            window.location.reload();\n            _context5.next = 24;\n            break;\n          case 23:\n            console.log(\"No ethereum object\");\n          case 24:\n            _context5.next = 30;\n            break;\n          case 26:\n            _context5.prev = 26;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(_context5.t0);\n            throw new Error(\"No ethereum object\");\n          case 30:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 26]]);\n    }));\n    return function sendTransaction() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkIfWalletIsConnect();\n    // checkIfTransactionsExists();\n  }, [transactionCount]);\n  return /*#__PURE__*/React.createElement(TransactionContext.Provider, {\n    value: {\n      transactionCount: transactionCount,\n      connectWallet: connectWallet,\n      disconnectWallet: disconnectWallet,\n      transactions: transactions,\n      currentAccount: currentAccount,\n      isLoading: isLoading,\n      sendTransaction: sendTransaction,\n      handleChange: handleChange,\n      formData: formData\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","React","useEffect","useState","ethers","contractABI","contractAddress","TransactionContext","createContext","_window","window","ethereum","createEthereumContract","provider","providers","Web3Provider","signer","getSigner","transactionContract","Contract","console","log","TransactionProvider","_ref","children","_useState","addressTo","amount","keyword","message","_useState2","_slicedToArray","formData","setformData","_useState3","_useState4","currentAccount","setCurrentAccount","_useState5","_useState6","isLoading","setIsLoading","_useState7","localStorage","getItem","_useState8","transactionCount","setTransactionCount","_useState9","_useState10","transactions","setTransactions","handleChange","e","prevState","_objectSpread","_defineProperty","target","getAllTransactions","_ref2","_asyncToGenerator","_callee","transactionsContract","availableTransactions","structuredTransactions","_callee$","_context","alert","map","transaction","receiver","addressFrom","sender","timestamp","Date","toNumber","toLocaleString","parseInt","_hex","Math","pow","t0","apply","arguments","checkIfWalletIsConnect","_ref3","_callee2","_callee2$","_context2","connectWallet","_ref4","_callee3","accounts","_callee3$","_context3","request","location","reload","disconnectWallet","_ref5","_callee4","_callee4$","_context4","params","eth_accounts","sendTransaction","_ref6","_callee5","parsedAmount","transactionHash","transactionsCount","_callee5$","_context5","utils","parseEther","from","to","gas","addToBlockchain","concat","hash","wait","getTransactionCount","createElement","Provider","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/CredApp/client/src/context/TransactionContext.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { contractABI, contractAddress } from \"../utils/constants\";\r\n\r\nexport const TransactionContext = React.createContext();\r\n\r\nconst { ethereum } = window;\r\n\r\nconst createEthereumContract = () => {\r\n  const provider = new ethers.providers.Web3Provider(ethereum);\r\n  const signer = provider.getSigner();\r\n  const transactionContract = new ethers.Contract(\r\n    contractAddress,\r\n    contractABI,\r\n    signer\r\n  );\r\n  console.log({\r\n    provider,\r\n    signer,\r\n    transactionContract,\r\n  });\r\n\r\n  return transactionContract;\r\n};\r\n\r\nexport const TransactionProvider = ({ children }) => {\r\n  const [formData, setformData] = useState({\r\n    addressTo: \"\",\r\n    amount: \"\",\r\n    keyword: \"\",\r\n    message: \"\",\r\n  });\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [transactionCount, setTransactionCount] = useState(\r\n    localStorage.getItem(\"transactionCount\")\r\n  );\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  const handleChange = (e, name) => {\r\n    setformData((prevState) => ({ ...prevState, [name]: e.target.value }));\r\n  };\r\n\r\n  const getAllTransactions = async () => {\r\n    try {\r\n      if (!ethereum) return alert(\"Please install MetaMask.\");\r\n      const transactionsContract = createEthereumContract();\r\n\r\n      const availableTransactions = await transactionsContract.getAllTransactions();\r\n\r\n      const structuredTransactions = availableTransactions.map(\r\n        (transaction) => ({\r\n          addressTo: transaction.receiver,\r\n          addressFrom: transaction.sender,\r\n          timestamp: new Date(\r\n            transaction.timestamp.toNumber() * 1000\r\n          ).toLocaleString(),\r\n          message: transaction.message,\r\n          keyword: transaction.keyword,\r\n          amount: parseInt(transaction.amount._hex) / 10 ** 18,\r\n        })\r\n      );\r\n\r\n      console.log(structuredTransactions);\r\n\r\n      setTransactions(structuredTransactions);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const checkIfWalletIsConnect = async () => {\r\n    try {\r\n      if (!ethereum) return alert(\"Please install MetaMask.\");\r\n\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (!ethereum) return alert(\"Please install MetaMask.\");\r\n\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n      if (accounts.length) {\r\n        setCurrentAccount(accounts[0]);\r\n\r\n        getAllTransactions();\r\n      } else {\r\n        console.log(\"No accounts found\");\r\n      }\r\n      setCurrentAccount(accounts[0]);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      // throw new Error(\"No ethereum object\");\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = async () => {\r\n    try {\r\n      if (!ethereum) return alert(\"Please install MetaMask.\");\r\n  \r\n      await ethereum.request({\r\n        method: \"wallet_requestPermissions\",\r\n        params: [{ eth_accounts: {} }],\r\n      });\r\n  \r\n      setCurrentAccount(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  const sendTransaction = async () => {\r\n    try {\r\n      if (ethereum) {\r\n        const { addressTo, amount, keyword, message } = formData;\r\n        const transactionsContract = createEthereumContract();\r\n        const parsedAmount = ethers.utils.parseEther(amount);\r\n\r\n        await ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params: [\r\n            {\r\n              from: currentAccount,\r\n              to: addressTo,\r\n              gas: \"0x5208\",\r\n              value: parsedAmount._hex,\r\n            },\r\n          ],\r\n        });\r\n\r\n        const transactionHash = await transactionsContract.addToBlockchain(\r\n          addressTo,\r\n          parsedAmount,\r\n          message,\r\n          keyword\r\n        );\r\n\r\n        setIsLoading(true);\r\n        console.log(`Loading - ${transactionHash.hash}`);\r\n        await transactionHash.wait();\r\n        console.log(`Success - ${transactionHash.hash}`);\r\n        setIsLoading(false);\r\n\r\n        const transactionsCount = await transactionsContract.getTransactionCount();\r\n\r\n        setTransactionCount(transactionsCount.toNumber());\r\n        window.location.reload();\r\n      } else {\r\n        console.log(\"No ethereum object\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      throw new Error(\"No ethereum object\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnect();\r\n    // checkIfTransactionsExists();\r\n  }, [transactionCount]);\r\n\r\n  return (\r\n    <TransactionContext.Provider\r\n      value={{\r\n        transactionCount,\r\n        connectWallet,\r\n        disconnectWallet,\r\n        transactions,\r\n        currentAccount,\r\n        isLoading,\r\n        sendTransaction,\r\n        handleChange,\r\n        formData,\r\n      }}\r\n    >\r\n      {children}\r\n    </TransactionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}