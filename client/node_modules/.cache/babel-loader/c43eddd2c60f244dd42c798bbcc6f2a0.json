{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import Web3 from 'web3';\n// import TokenFarm from './utils/TokenFarm.json';\n// import Stakers from './Stakers';\n// import StakeInfo from './StakeInfo';\n\n// function App() {\n//   const [stakers, setStakers] = useState([]);\n//   const [stakeInfo, setStakeInfo] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       // Connect to the Ethereum network using Web3.js\n//       const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n\n//       // Retrieve the necessary data from the TokenFarm contract\n//       const networkId = await web3.eth.net.getId();\n//       const tokenFarm = new web3.eth.Contract(TokenFarm.abi, TokenFarm.networks[networkId].address);\n//       const stakers = await tokenFarm.methods.getStakers().call();\n//       const stakeInfo = await tokenFarm.methods.stakeInfo(\"0x5bea25d2B588E245d2539c29E3049B5b01161902\").call();\n\n//       // Set the data to the state variables\n//       setStakers(stakers);\n//       setStakeInfo(stakeInfo);\n\n//     }\n//     console.log(stakers)\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Stakers:</h1>\n//       <Stakers stakers={stakers} />\n//       <h1>Stake Information:</h1>\n//       <StakeInfo stakeInfo={stakeInfo} />\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/CredApp/client/src/final.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import Web3 from 'web3';\r\n// import TokenFarm from './utils/TokenFarm.json';\r\n// import Stakers from './Stakers';\r\n// import StakeInfo from './StakeInfo';\r\n\r\n// function App() {\r\n//   const [stakers, setStakers] = useState([]);\r\n//   const [stakeInfo, setStakeInfo] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       // Connect to the Ethereum network using Web3.js\r\n//       const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\r\n\r\n//       // Retrieve the necessary data from the TokenFarm contract\r\n//       const networkId = await web3.eth.net.getId();\r\n//       const tokenFarm = new web3.eth.Contract(TokenFarm.abi, TokenFarm.networks[networkId].address);\r\n//       const stakers = await tokenFarm.methods.getStakers().call();\r\n//       const stakeInfo = await tokenFarm.methods.stakeInfo(\"0x5bea25d2B588E245d2539c29E3049B5b01161902\").call();\r\n\r\n//       // Set the data to the state variables\r\n//       setStakers(stakers);\r\n//       setStakeInfo(stakeInfo);\r\n      \r\n//     }\r\n//     console.log(stakers)\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>Stakers:</h1>\r\n//       <Stakers stakers={stakers} />\r\n//       <h1>Stake Information:</h1>\r\n//       <StakeInfo stakeInfo={stakeInfo} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}