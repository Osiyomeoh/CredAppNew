{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\CredAppNew\\\\client\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from \"react\";\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n  function Airdrop() {\n    var _this;\n    _classCallCheck(this, Airdrop);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 60\n    }; // the airdrop will run 60 sec after staking.\n    _this.timer = 0; // Initialize timer.\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this))); // We bind this keyword (start time).\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  // Build startTimer functionality.\n  _createClass(Airdrop, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000); // 1000 --> take us down one seconds at a time.\n      }\n    } // Build countdown functionallity.\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      // 1. countdown one second at a time.\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondstoTime(seconds),\n        seconds: seconds\n      });\n\n      // 2. Stop counting when we hit zero.\n      if (seconds === 0) {\n        this.props.issueTokens();\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"secondstoTime\",\n    value: function secondstoTime(secs) {\n      var hours, seconds, minutes;\n      hours = Math.floor(secs / (60 * 60));\n      var devisor_for_minutes = secs % (60 * 60);\n      minutes = Math.floor(devisor_for_minutes / 60);\n      var devisor_for_seconds = devisor_for_minutes % 60;\n      seconds = Math.ceil(devisor_for_seconds);\n      var obj = {\n        h: hours,\n        m: minutes,\n        s: seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondstoTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"airdropReleaseTokens\",\n    value: function airdropReleaseTokens() {\n      var stakingB = this.props.stakingBalance;\n      if (stakingB >= \"1000000000000000000\") {\n        // If staking balance is more than 1 mcred, begin the airdrop of reward token.\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.airdropReleaseTokens();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n  return Airdrop;\n}(Component);\nexport default Airdrop;","map":{"version":3,"names":["React","Component","Airdrop","_Component","_inherits","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","state","time","seconds","timer","startTimer","bind","_assertThisInitialized","countDown","_createClass","key","value","setInterval","setState","secondstoTime","props","issueTokens","clearInterval","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","h","m","s","componentDidMount","timeLeftVar","airdropReleaseTokens","stakingB","stakingBalance","render","createElement","style","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/USER/Documents/CredAppNew/client/src/components/Airdrop.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Airdrop extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { time: {}, seconds: 60 }; // the airdrop will run 60 sec after staking.\r\n    this.timer = 0; // Initialize timer.\r\n    this.startTimer = this.startTimer.bind(this); // We bind this keyword (start time).\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  // Build startTimer functionality.\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000); // 1000 --> take us down one seconds at a time.\r\n    }\r\n  }\r\n\r\n  // Build countdown functionallity.\r\n  countDown() {\r\n    // 1. countdown one second at a time.\r\n    let seconds = this.state.seconds - 1;\r\n\r\n    this.setState({\r\n      time: this.secondstoTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // 2. Stop counting when we hit zero.\r\n    if (seconds === 0) {\r\n      this.props.issueTokens();\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  secondstoTime(secs) {\r\n    let hours, seconds, minutes;\r\n    hours = Math.floor(secs / (60 * 60));\r\n\r\n    let devisor_for_minutes = secs % (60 * 60);\r\n    minutes = Math.floor(devisor_for_minutes / 60);\r\n\r\n    let devisor_for_seconds = devisor_for_minutes % 60;\r\n    seconds = Math.ceil(devisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondstoTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  airdropReleaseTokens() {\r\n    let stakingB = this.props.stakingBalance;\r\n    if (stakingB >= \"1000000000000000000\") {\r\n      // If staking balance is more than 1 mcred, begin the airdrop of reward token.\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.airdropReleaseTokens();\r\n    return (\r\n      <div style={{ color: \"white\" }}>\r\n        {this.state.time.m}:{this.state.time.s}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Airdrop;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}