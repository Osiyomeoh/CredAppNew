{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar swarm = require(\"swarm-js\");\nvar Bzz = function Bzz(provider) {\n  this.givenProvider = Bzz.givenProvider;\n  if (provider && provider._requestManager) {\n    provider = provider.currentProvider;\n  }\n\n  // only allow file picker when in browser\n  if (typeof document !== 'undefined') {\n    this.pick = swarm.pick;\n  }\n  this.setProvider(provider);\n};\n\n// set default ethereum provider\n/* jshint ignore:start */\nBzz.givenProvider = null;\nif (typeof ethereum !== 'undefined' && ethereum.bzz) {\n  Bzz.givenProvider = ethereum.bzz;\n}\n/* jshint ignore:end */\n\nBzz.prototype.setProvider = function (provider) {\n  // is ethereum provider\n  if (_.isObject(provider) && _.isString(provider.bzz)) {\n    provider = provider.bzz;\n    // is no string, set default\n  }\n  // else if(!_.isString(provider)) {\n  //      provider = 'http://swarm-gateways.net'; // default to gateway\n  // }\n\n  if (_.isString(provider)) {\n    this.currentProvider = provider;\n  } else {\n    this.currentProvider = null;\n    var noProviderError = new Error('No provider set, please set one using bzz.setProvider().');\n    this.download = this.upload = this.isAvailable = function () {\n      throw noProviderError;\n    };\n    return false;\n  }\n\n  // add functions\n  this.download = swarm.at(provider).download;\n  this.upload = swarm.at(provider).upload;\n  this.isAvailable = swarm.at(provider).isAvailable;\n  return true;\n};\nmodule.exports = Bzz;","map":null,"metadata":{},"sourceType":"script"}