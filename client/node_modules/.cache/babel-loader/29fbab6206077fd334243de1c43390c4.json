{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar XMLHttpRequestEventTarget = /** @class */function () {\n  function XMLHttpRequestEventTarget() {\n    this.listeners = {};\n  }\n  XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {\n    eventType = eventType.toLowerCase();\n    this.listeners[eventType] = this.listeners[eventType] || [];\n    this.listeners[eventType].push(listener.handleEvent || listener);\n  };\n  XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {\n    eventType = eventType.toLowerCase();\n    if (!this.listeners[eventType]) {\n      return;\n    }\n    var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);\n    if (index < 0) {\n      return;\n    }\n    this.listeners[eventType].splice(index, 1);\n  };\n  XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {\n    var eventType = event.type.toLowerCase();\n    event.target = this; // TODO: set event.currentTarget?\n    if (this.listeners[eventType]) {\n      for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) {\n        var listener_1 = _a[_i];\n        listener_1.call(this, event);\n      }\n    }\n    var listener = this[\"on\" + eventType];\n    if (listener) {\n      listener.call(this, event);\n    }\n    return true;\n  };\n  return XMLHttpRequestEventTarget;\n}();\nexports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;","map":null,"metadata":{},"sourceType":"script"}