{"ast":null,"code":"/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2016\r\n */\n\n\"use strict\";\n\nvar EventEmitter = require('eventemitter3');\n\n/**\r\n * This function generates a defer promise and adds eventEmitter functionality to it\r\n *\r\n * @method eventifiedPromise\r\n */\nvar PromiEvent = function PromiEvent(justPromise) {\n  var resolve,\n    reject,\n    eventEmitter = new Promise(function () {\n      resolve = arguments[0];\n      reject = arguments[1];\n    });\n  if (justPromise) {\n    return {\n      resolve: resolve,\n      reject: reject,\n      eventEmitter: eventEmitter\n    };\n  }\n\n  // get eventEmitter\n  var emitter = new EventEmitter();\n\n  // add eventEmitter to the promise\n  eventEmitter._events = emitter._events;\n  eventEmitter.emit = emitter.emit;\n  eventEmitter.on = emitter.on;\n  eventEmitter.once = emitter.once;\n  eventEmitter.off = emitter.off;\n  eventEmitter.listeners = emitter.listeners;\n  eventEmitter.addListener = emitter.addListener;\n  eventEmitter.removeListener = emitter.removeListener;\n  eventEmitter.removeAllListeners = emitter.removeAllListeners;\n  return {\n    resolve: resolve,\n    reject: reject,\n    eventEmitter: eventEmitter\n  };\n};\nPromiEvent.resolve = function (value) {\n  var promise = PromiEvent(true);\n  promise.resolve(value);\n  return promise.eventEmitter;\n};\nmodule.exports = PromiEvent;","map":null,"metadata":{},"sourceType":"script"}