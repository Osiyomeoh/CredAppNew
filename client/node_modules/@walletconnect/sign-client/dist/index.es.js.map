{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n","export const REQUEST_CONTEXT = \"request\";\n","import EventEmmiter from \"events\";\nimport { RELAYER_EVENTS, EXPIRER_EVENTS, RELAYER_DEFAULT_PROTOCOL } from \"@walletconnect/core\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  IEngine,\n  EngineTypes,\n  IEngineEvents,\n  RelayerTypes,\n  EnginePrivate,\n  SessionTypes,\n  JsonRpcTypes,\n  ExpirerTypes,\n  PendingRequestTypes,\n  ProposalTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  parseExpirerTarget,\n  createDelayedPromise,\n  getInternalError,\n  getSdkError,\n  engineEvent,\n  isValidNamespaces,\n  isValidRelays,\n  isValidRelay,\n  isValidId,\n  isValidParams,\n  isValidString,\n  isValidErrorReason,\n  isValidNamespacesChainId,\n  isValidNamespacesRequest,\n  isValidNamespacesEvent,\n  isValidRequest,\n  isValidEvent,\n  isValidResponse,\n  isValidRequiredNamespaces,\n  isSessionCompatible,\n  isExpired,\n  isUndefined,\n  isConformingNamespaces,\n  isValidController,\n  TYPE_1,\n  getRequiredNamespacesFromNamespaces,\n  isValidObject,\n  isValidRequestExpiry,\n} from \"@walletconnect/utils\";\nimport {\n  SESSION_EXPIRY,\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n  PROPOSAL_EXPIRY_MESSAGE,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const {\n      reject,\n      resolve,\n      done: approval,\n    } = createDelayedPromise<SessionTypes.Struct>(FIVE_MINUTES, PROPOSAL_EXPIRY_MESSAGE);\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: session.requiredNamespaces,\n            optionalNamespaces: session.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n\n    if (!isValidObject(requiredNamespaces)) {\n      requiredNamespaces = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      optionalNamespaces,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const requestId = await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once(engineEvent(\"session_approve\", requestId), ({ error }) => {\n      if (error) reject(error);\n      else resolve(this.client.session.get(sessionTopic));\n    });\n\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return { topic: sessionTopic, acknowledged };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId }, expiry);\n    const { done, resolve, reject } = createDelayedPromise<T>(expiry);\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    this.client.events.emit(\"session_request_sent\", { topic, request, chainId });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params, expiry) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    this.client.core.history.set(topic, payload);\n    this.client.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        if (isJsonRpcRequest(payload)) {\n          this.client.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.core.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const {\n        relay,\n        controller,\n        expiry,\n        namespaces,\n        requiredNamespaces,\n        optionalNamespaces,\n        sessionProperties,\n      } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        requiredNamespaces,\n        optionalNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises session encryption\n      this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n        await this.deleteSession(topic);\n      });\n      await this.sendResult<\"wc_sessionDelete\">(id, topic, true);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      await this.setPendingSessionRequest({ id, topic, params });\n      this.client.events.emit(\"session_request\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import pino from \"pino\";\nimport { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_RPC_OPTS","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","PROPOSAL_EXPIRY_MESSAGE","engineEvent","error","session","completeSession","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","requestId","acknowledged","reason","chainId","request","done","result","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","expirerHasDeleted","self","pendingRequest","method","payload","formatJsonRpcRequest","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","_topic","RELAYER_EVENTS","isValidParams","isUndefined","isValidRelays","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}