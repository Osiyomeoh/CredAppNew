/*! tsParticles v1.43.1 by Matteo Bruni */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var o in n)("object"==typeof exports?exports:t)[o]=n[o]}}(window,(function(){return function(){"use strict";var t={d:function(e,n){for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{loadExternalConnectInteraction:function(){return i}});function n(t,e){return t===e||e instanceof Array&&e.indexOf(t)>-1}class o extends class{constructor(t){this.container=t,this.type=0}}{constructor(t){super(t)}isEnabled(){const t=this.container,e=t.interactivity.mouse,o=t.actualOptions.interactivity.events;return!(!o.onHover.enable||!e.position)&&n("connect",o.onHover.mode)}reset(){}async interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&"mousemove"===t.interactivity.status){const e=t.interactivity.mouse.position;if(!e)return;const n=Math.abs(t.retina.connectModeRadius),o=t.particles.quadTree.queryCircle(e,n);let i=0;for(const e of o){const n=e.getPosition();for(const r of o.slice(i+1)){const o=r.getPosition(),i=Math.abs(t.retina.connectModeDistance),c=Math.abs(n.x-o.x),a=Math.abs(n.y-o.y);c<i&&a<i&&t.canvas.drawConnectLine(e,r)}++i}}}}async function i(t){await t.addInteractor("externalConnect",(t=>new o(t)))}return e}()}));