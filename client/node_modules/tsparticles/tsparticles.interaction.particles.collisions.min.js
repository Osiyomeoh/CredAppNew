/*! tsParticles v1.43.1 by Matteo Bruni */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var i=e();for(var o in i)("object"==typeof exports?exports:t)[o]=i[o]}}(window,(function(){return function(){"use strict";var t={d:function(e,i){for(var o in i)t.o(i,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:i[o]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{loadParticlesCollisionsInteraction:function(){return f}});class i{constructor(t,e){if("number"!=typeof t&&t)this.x=t.x,this.y=t.y;else{if(void 0===t||void 0===e)throw new Error("tsParticles - Vector not initialized correctly");this.x=t,this.y=e}}static clone(t){return i.create(t.x,t.y)}static create(t,e){return new i(t,e)}static get origin(){return i.create(0,0)}get angle(){return Math.atan2(this.y,this.x)}set angle(t){this.updateFromAngle(t,this.length)}get length(){return Math.sqrt(this.getLengthSq())}set length(t){this.updateFromAngle(this.angle,t)}add(t){return i.create(this.x+t.x,this.y+t.y)}addTo(t){this.x+=t.x,this.y+=t.y}sub(t){return i.create(this.x-t.x,this.y-t.y)}subFrom(t){this.x-=t.x,this.y-=t.y}mult(t){return i.create(this.x*t,this.y*t)}multTo(t){this.x*=t,this.y*=t}div(t){return i.create(this.x/t,this.y/t)}divTo(t){this.x/=t,this.y/=t}distanceTo(t){return this.sub(t).length}getLengthSq(){return this.x**2+this.y**2}distanceToSq(t){return this.sub(t).getLengthSq()}manhattanDistanceTo(t){return Math.abs(t.x-this.x)+Math.abs(t.y-this.y)}copy(){return i.clone(this)}setTo(t){this.x=t.x,this.y=t.y}rotate(t){return i.create(this.x*Math.cos(t)-this.y*Math.sin(t),this.x*Math.sin(t)+this.y*Math.cos(t))}updateFromAngle(t,e){this.x=Math.cos(t)*e,this.y=Math.sin(t)*e}}function o(t,e,i){return Math.min(Math.max(t,e),i)}function s(t){return"number"==typeof t?t:function(t){const e=r(t);let i=n(t);return e===i&&(i=0),Math.random()*(e-i)+i}(t)}function n(t){return"number"==typeof t?t:t.min}function r(t){return"number"==typeof t?t:t.max}function a(t,e){if(t===e||void 0===e&&"number"==typeof t)return t;const i=n(t),o=r(t);return void 0!==e?{min:Math.min(i,e),max:Math.max(o,e)}:a(i,o)}function u(t){const e=t.random,{enable:i,minimumValue:o}="boolean"==typeof e?{enable:e,minimumValue:0}:e;return s(i?a(t.value,o):t.value)}function c(t,e){const i=t.x-e.x,o=t.y-e.y;return{dx:i,dy:o,distance:Math.sqrt(i*i+o*o)}}function d(t,e,o,s){return i.create(t.x*(o-s)/(o+s)+2*e.x*s/(o+s),t.y)}function l(t){return{position:t.getPosition(),radius:t.getRadius(),mass:t.getMass(),velocity:t.velocity,factor:i.create(u(t.options.bounce.horizontal),u(t.options.bounce.vertical))}}function y(t,e){!function(t,e){const{x:i,y:o}=t.velocity.sub(e.velocity),[s,n]=[t.position,e.position],{dx:r,dy:a}=c(n,s);if(i*r+o*a<0)return;const u=-Math.atan2(a,r),l=t.mass,y=e.mass,h=t.velocity.rotate(u),f=e.velocity.rotate(u),g=d(h,f,l,y),x=d(f,h,l,y),v=g.rotate(-u),b=x.rotate(-u);t.velocity.x=v.x*t.factor.x,t.velocity.y=v.y*t.factor.y,e.velocity.x=b.x*e.factor.x,e.velocity.y=b.y*e.factor.y}(l(t),l(e))}class h extends class{constructor(t){this.container=t,this.type=1}}{constructor(t){super(t)}isEnabled(t){return t.options.collisions.enable}reset(){}async interact(t){const e=this.container,i=t.getPosition(),o=t.getRadius(),s=e.particles.quadTree.queryCircle(i,2*o);for(const e of s){if(t===e||!e.options.collisions.enable||t.options.collisions.mode!==e.options.collisions.mode||e.destroyed||e.spawning)continue;const s=e.getPosition();if(Math.round(i.z)!==Math.round(s.z))continue;c(i,s).distance<=o+e.getRadius()&&this.resolveCollision(t,e)}}resolveCollision(t,e){switch(t.options.collisions.mode){case"absorb":this.absorb(t,e);break;case"bounce":y(t,e);break;case"destroy":!function(t,e){t.unbreakable||e.unbreakable||y(t,e),void 0===t.getRadius()&&void 0!==e.getRadius()?t.destroy():void 0!==t.getRadius()&&void 0===e.getRadius()?e.destroy():void 0!==t.getRadius()&&void 0!==e.getRadius()&&(t.getRadius()>=e.getRadius()?e.destroy():t.destroy())}(t,e)}}absorb(t,e){const i=this.container,s=i.fpsLimit/1e3;if(void 0===t.getRadius()&&void 0!==e.getRadius())t.destroy();else if(void 0!==t.getRadius()&&void 0===e.getRadius())e.destroy();else if(void 0!==t.getRadius()&&void 0!==e.getRadius())if(t.getRadius()>=e.getRadius()){const n=o(t.getRadius()/e.getRadius(),0,e.getRadius())*s;t.size.value+=n,e.size.value-=n,e.getRadius()<=i.retina.pixelRatio&&(e.size.value=0,e.destroy())}else{const n=o(e.getRadius()/t.getRadius(),0,t.getRadius())*s;t.size.value-=n,e.size.value+=n,t.getRadius()<=i.retina.pixelRatio&&(t.size.value=0,t.destroy())}}}async function f(t){await t.addInteractor("particlesCollisions",(t=>new h(t)))}return e}()}));